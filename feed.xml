<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://kinoshita.eti.br/feed.xml" rel="self" type="application/atom+xml" /><link href="https://kinoshita.eti.br/" rel="alternate" type="text/html" /><updated>2020-04-17T20:17:41+12:00</updated><id>https://kinoshita.eti.br/feed.xml</id><title type="html">Bruno P. Kinoshita</title><subtitle>Bruno P. Kinoshita personal home page</subtitle><entry><title type="html">Notes on Apache Jena StreamRDFWriter</title><link href="https://kinoshita.eti.br/2020/04/11/notes-on-apache-jena-streamrdfwriter.html" rel="alternate" type="text/html" title="Notes on Apache Jena StreamRDFWriter" /><published>2020-04-11T00:00:00+12:00</published><updated>2020-04-11T00:00:00+12:00</updated><id>https://kinoshita.eti.br/2020/04/11/notes-on-apache-jena-streamrdfwriter</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/11/notes-on-apache-jena-streamrdfwriter.html">&lt;p&gt;&lt;a href=&quot;https://jena.apache.org/&quot;&gt;Apache Jena&lt;/a&gt; project is like a box full of interesting things—at least if you love programming. One of its many features, is &lt;strong&gt;stream processing&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The graphs in Jena may contain very large datasets, with giga- or terabytes. Some queries may be very large, and then sending the whole result would be simply impracticable.&lt;/p&gt;

&lt;p&gt;Instead, the data will go through ARQ. ARQ is a query engine for Jena that supports SPARQL. There is one piece of code there that I found interesting while reviewing a small pull request: &lt;a href=&quot;https://github.com/apache/jena/blob/cbdba5edb47041a4181a00bd7660e5d4c212530a/jena-arq/src/main/java/org/apache/jena/riot/system/StreamRDFWriter.java&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;org.apache.jena.riot.system.StreamRDFWriter&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is responsible for writing graph data in a streaming fashion. (See &lt;a href=&quot;https://en.wikipedia.org/wiki/Stream_processing&quot;&gt;stream processing&lt;/a&gt; for programming models and more.)&lt;/p&gt;

&lt;h2 id=&quot;stream-factories&quot;&gt;Stream factories&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StreamRDFWriter&lt;/code&gt; holds several implementations (as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;static&lt;/code&gt; members) of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StreamRDFWriterFactory&lt;/code&gt;. The factory has one responsibility only, to create streams (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StreamRDF&lt;/code&gt;), for a certain format and context.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;fluid&quot; src=&quot;/assets/posts/2020-04-11-notes-on-apache-jena-streamrdfwriter/01.png&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;streams-writer-registry&quot;&gt;Streams writer registry&lt;/h2&gt;

&lt;p&gt;All these factories and streams, the writer also needs a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;registry&lt;/code&gt;. It is used to access the writers required for streams using certain languages.&lt;/p&gt;

&lt;p&gt;So if you have your graph dataset, and need to retrieve triples as thrift, you will interrogate the registry asking for a factory of that language (Turtle, N-Triples, RDF-Thrift, etc) or format (Flat Turtle, N-Quads, N-Triples-ASCII, RDF-Thrift, etc).&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;fluid&quot; src=&quot;/assets/posts/2020-04-11-notes-on-apache-jena-streamrdfwriter/02.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;writing-data-to-streams&quot;&gt;Writing data to streams&lt;/h2&gt;

&lt;p&gt;Each writer has one responsibility too—I really like the design of certain modules in Jena.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;fluid&quot; src=&quot;/assets/posts/2020-04-11-notes-on-apache-jena-streamrdfwriter/03.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The action, however, happens somewhere else. In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StreamRDFOps&lt;/code&gt; and in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Iterator&lt;/code&gt; implementations is where the stream processing really takes place.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;fluid&quot; src=&quot;/assets/posts/2020-04-11-notes-on-apache-jena-streamrdfwriter/04.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But this goes beyond the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;StreamRDFWriter&lt;/code&gt;. So that’s all for today.&lt;/p&gt;</content><author><name></name></author><category term="apache software foundation" /><category term="apache jena" /><category term="stream processing" /><category term="open source" /><category term="java" /><summary type="html">Apache Jena project is like a box full of interesting things—at least if you love programming. One of its many features, is stream processing. The graphs in Jena may contain very large datasets, with giga- or terabytes. Some queries may be very large, and then sending the whole result would be simply impracticable. Instead, the data will go through ARQ. ARQ is a query engine for Jena that supports SPARQL. There is one piece of code there that I found interesting while reviewing a small pull request: org.apache.jena.riot.system.StreamRDFWriter. It is responsible for writing graph data in a streaming fashion. (See stream processing for programming models and more.) Stream factories StreamRDFWriter holds several implementations (as static members) of StreamRDFWriterFactory. The factory has one responsibility only, to create streams (StreamRDF), for a certain format and context.</summary></entry><entry><title type="html">Lunar vehicle</title><link href="https://kinoshita.eti.br/2020/04/04/lunar-vehicle.html" rel="alternate" type="text/html" title="Lunar vehicle" /><published>2020-04-04T00:00:00+13:00</published><updated>2020-04-04T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/04/lunar-vehicle</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/04/lunar-vehicle.html">&lt;p&gt;&lt;img class=&quot;fluid&quot; src=&quot;/assets/posts/2020-04-04-lunar-vehicle/lunar-vehicle.png&quot; alt=&quot;Lunar vehicle sketch&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Apple 2</title><link href="https://kinoshita.eti.br/2020/04/04/apple-2.html" rel="alternate" type="text/html" title="Apple 2" /><published>2020-04-04T00:00:00+13:00</published><updated>2020-04-04T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/04/apple-2</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/04/apple-2.html">&lt;p&gt;&lt;img class=&quot;fluid&quot; src=&quot;/assets/posts/2020-04-04-apple-2/apple-02.png&quot; alt=&quot;Apple 2&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Stink Bug</title><link href="https://kinoshita.eti.br/2020/04/03/stink-bug.html" rel="alternate" type="text/html" title="Stink Bug" /><published>2020-04-03T00:00:00+13:00</published><updated>2020-04-03T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/03/stink-bug</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/03/stink-bug.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/stink-bug-smaller.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Old Hands</title><link href="https://kinoshita.eti.br/2020/04/03/old-hands.html" rel="alternate" type="text/html" title="Old Hands" /><published>2020-04-03T00:00:00+13:00</published><updated>2020-04-03T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/03/old-hands</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/03/old-hands.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/old-hands.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Green Skull</title><link href="https://kinoshita.eti.br/2020/04/03/green-skull.html" rel="alternate" type="text/html" title="Green Skull" /><published>2020-04-03T00:00:00+13:00</published><updated>2020-04-03T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/03/green-skull</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/03/green-skull.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/green-skull-full.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Simone</title><link href="https://kinoshita.eti.br/2020/04/01/simone.html" rel="alternate" type="text/html" title="Simone" /><published>2020-04-01T00:00:00+13:00</published><updated>2020-04-01T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/01/simone</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/01/simone.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/simone.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Royal Spoonbill</title><link href="https://kinoshita.eti.br/2020/04/01/royal-spoonbill.html" rel="alternate" type="text/html" title="Royal Spoonbill" /><published>2020-04-01T00:00:00+13:00</published><updated>2020-04-01T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/01/royal-spoonbill</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/01/royal-spoonbill.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/royal-spoonbill.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">O Corvo</title><link href="https://kinoshita.eti.br/2020/04/01/o-corvo.html" rel="alternate" type="text/html" title="O Corvo" /><published>2020-04-01T00:00:00+13:00</published><updated>2020-04-01T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/01/o-corvo</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/01/o-corvo.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/o-corvo.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Cave</title><link href="https://kinoshita.eti.br/2020/04/01/cave.html" rel="alternate" type="text/html" title="Cave" /><published>2020-04-01T00:00:00+13:00</published><updated>2020-04-01T00:00:00+13:00</updated><id>https://kinoshita.eti.br/2020/04/01/cave</id><content type="html" xml:base="https://kinoshita.eti.br/2020/04/01/cave.html">&lt;p&gt;&lt;img src=&quot;/assets/pages/art/images/cave.png&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>