<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on kinow</title><link>https://kinoshita.eti.br/blog/</link><description>Recent content in Blog on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Sun, 21 Apr 2024 14:09:04 +0200</lastBuildDate><atom:link href="https://kinoshita.eti.br/blog/feed.xml" rel="self" type="application/rss+xml"/><item><title>Coverage report for a GitHub private repository with GitHub Actions</title><link>https://kinoshita.eti.br/2023/05/29/coverage-report-for-a-github-private-repository-with-github-actions.html</link><pubDate>Mon, 29 May 2023 20:36:52 +0300</pubDate><guid>https://kinoshita.eti.br/2023/05/29/coverage-report-for-a-github-private-repository-with-github-actions.html</guid><description>Normally when you add test coverage to a GitHub repository, the reporting part boils down to a simple call to some API that will post to a third-party external service like Coveralls or Codecov. Many are already on the GitHub Actions Market Place and a few lines of YAML are enough.
A Codecov coverage report We had to report the test coverage of a private GitHub repository of a project I am working on at the moment, that could not have integration with other services besides GitHub.</description></item><item><title>r/functionalprogramming turned 10</title><link>https://kinoshita.eti.br/2022/10/26/r/functionalprogramming-turned-10.html</link><pubDate>Wed, 26 Oct 2022 19:30:52 +1300</pubDate><guid>https://kinoshita.eti.br/2022/10/26/r/functionalprogramming-turned-10.html</guid><description>Last week r/functionalprogramming turned 10 years old! Time passed very quickly since I created the subreddit.
I had heard about functional programming before at university and from co-workers, but hadn't much need for it at work. But when I started working on Apache Commons Functor, I realized I needed somewhere to start collecting all the blog posts, papers, and other links I was finding on a part of the Internet I had no idea it existed before.</description></item><item><title>Cyclic Workflows with Prefect</title><link>https://kinoshita.eti.br/2021/11/08/cyclic-workflows-with-prefect.html</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/11/08/cyclic-workflows-with-prefect.html</guid><description>&lt;div style="width: 50%; margin: 0 auto;">
 
 
 
 &lt;figure class="feature">
 
 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2021-11-08-cyclic-workflows-with-prefect/prefect.svg'
 alt='Prefect logo'
 title='Prefect logo'
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>
 
 &lt;/figure>
 

&lt;/div>
&lt;p>Last month I wrote about
&lt;a href="https://kinoshita.eti.br/2021/10/01/cyclic-workflows-with-cylc-and-stackstorm.html">Cyclic Workflows with Cylc and StackStorm&lt;/a>
and how few workflow managers support cyclic workflows.&lt;/p>
&lt;p>I was surprised today while reading Prefect documentation to see this paragraph:&lt;/p>
&lt;blockquote>
&lt;p>Most workflow frameworks act as if looping is impossible (stressing the Acyclic part of the DAG),
but it&amp;rsquo;s actually trivial to implement. We simply dynamically unroll the loop, similar to how RNN
gradients are sometimes computed.&lt;/p>
&lt;/blockquote></description></item><item><title>Removing invisible unread GitHub notifications</title><link>https://kinoshita.eti.br/2021/10/22/removing-invisible-unread-github-notifications.html</link><pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/10/22/removing-invisible-unread-github-notifications.html</guid><description>Some months ago I noticed that even after I marked all my GitHub notifications as read, the unread icon displayed at the right top corner was still showing as if I had unread notifications.
GitHub Notifications icon always-on mode I tried changing the filters, waiting for a new notification to appear so that I could mark it as read, all hoping that icon would then change. But no matter what I tried in the GitHub UI, the icon was still there.</description></item><item><title>Blender rendering on NVIDIA Jetson Nano</title><link>https://kinoshita.eti.br/2021/10/17/blender-rendering-on-nvidia-jetson-nano.html</link><pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/10/17/blender-rendering-on-nvidia-jetson-nano.html</guid><description>NVIDIA Jetson Nano computer I had used Blender during my graduation at the Mackenzie University and started learning Blender 2.8+ again a few weeks ago. Unfortunately rendering the basic tutorials like Andrew Price&amp;rsquo;s donut takes several minutes on my old (but excellent for programming) Thinkpad T550 i7 16 GB with a simple Samsung SSD. The reason is that my GPU, a NVIDIA NVS 5400M with 2 GB memory and 96 cores cannot be used with Blender as it only supports CUDA 2.</description></item><item><title>Cyclic Workflows with Cylc and StackStorm</title><link>https://kinoshita.eti.br/2021/10/01/cyclic-workflows-with-cylc-and-stackstorm.html</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/10/01/cyclic-workflows-with-cylc-and-stackstorm.html</guid><description>I am aware of only two workflow managers that support cyclic workflows. Cylc and StackStorm. I won&amp;rsquo;t enter into details about these two tools, but I must note that I worked on Cylc during my employment with NIWA, in New Zealand.
In this post I will only show a very simple workflow called five first using Cylc, and then the same workflow with StackStorm.
Cylc First let&amp;rsquo;s take a look at the source code of this workflow with Cylc 8 and plot it.</description></item><item><title>Random traffic light</title><link>https://kinoshita.eti.br/2021/04/06/random-traffic-light.html</link><pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/04/06/random-traffic-light.html</guid><description>From a reference photo found on Twitter.
Original photograph from Twitter</description></item><item><title>Tufted Titmouse</title><link>https://kinoshita.eti.br/2021/04/05/tufted-titmouse.html</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/04/05/tufted-titmouse.html</guid><description>From a reference photo by Ioannis Moutsatsos.
Original photograph of the Tufted Titmouse by Ioannis Moutsatsos Painted using recently learned techniques after watching a video by Sarah Burns Studio, and also other mixed media technique from a Domestika course by Maru Godas.</description></item><item><title>Bezerra da Silva</title><link>https://kinoshita.eti.br/2021/03/27/bezerra-da-silva.html</link><pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/27/bezerra-da-silva.html</guid><description>Created with Staedtler colored pencils, then digitalized and post-processed in GIMP. Used a photo for reference.
Drawing of Bezerra da Silva in red colored pencil Used in Speak Like A Brazilian in this post.
Drawing of Bezerra da Silva in Speak Like A Brazilian screenshot</description></item><item><title>Figurative drawing line of action 2021-03-11</title><link>https://kinoshita.eti.br/2021/03/11/figurative-drawing-line-of-action-2021-03-11.html</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/11/figurative-drawing-line-of-action-2021-03-11.html</guid><description/></item><item><title>Low poly in Inkscape</title><link>https://kinoshita.eti.br/2021/03/11/low-poly-in-inkscape.html</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/11/low-poly-in-inkscape.html</guid><description>The last Inkscape about screen contest had two entries that called my attention for being created in Inkscape and for how nice they looked. Not having used Inkscape for low poly before, I decided to give it a try.
After reading a handful of tutorials, I realized it is a very interesting and relaxing process. You use a reference photo with low opacity as background, and then create the polygons manually with a vector pen.</description></item><item><title>Yandê pães logo</title><link>https://kinoshita.eti.br/2021/03/07/yand%C3%AA-p%C3%A3es-logo.html</link><pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/07/yand%C3%AA-p%C3%A3es-logo.html</guid><description>Logo created on Inkscape, based on ideas and sketches given by customer.
Used both for the store and for the social media and web sites.</description></item><item><title>Figurative drawing line of action 2021-02-20</title><link>https://kinoshita.eti.br/2021/02/20/figurative-drawing-line-of-action-2021-02-20.html</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/02/20/figurative-drawing-line-of-action-2021-02-20.html</guid><description/></item><item><title>Rooster</title><link>https://kinoshita.eti.br/2021/02/07/rooster.html</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/02/07/rooster.html</guid><description>Created in Krita from reference photo.</description></item><item><title>Auckland CBD Life Drawing 2021-02-01</title><link>https://kinoshita.eti.br/2021/02/01/auckland-cbd-life-drawing-2021-02-01.html</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/02/01/auckland-cbd-life-drawing-2021-02-01.html</guid><description/></item><item><title>Auckland CBD Life Drawing 2021-01-18</title><link>https://kinoshita.eti.br/2021/01/18/auckland-cbd-life-drawing-2021-01-18.html</link><pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/01/18/auckland-cbd-life-drawing-2021-01-18.html</guid><description/></item><item><title>Lola</title><link>https://kinoshita.eti.br/2020/10/11/lola.html</link><pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/10/11/lola.html</guid><description/></item><item><title>Rocky</title><link>https://kinoshita.eti.br/2020/09/23/rocky.html</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/09/23/rocky.html</guid><description>High res graphite drawing
High res ink drawing</description></item><item><title>NZRSE 2020 Cylc UI Scalability</title><link>https://kinoshita.eti.br/2020/09/03/nzrse-2020-cylc-ui-scalability.html</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/09/03/nzrse-2020-cylc-ui-scalability.html</guid><description>Lightning talk for the NZRSE 2020 conference.</description></item><item><title>Finding "ryukokosho" in Taiwan</title><link>https://kinoshita.eti.br/2020/08/16/finding-ryukokosho-in-taiwan.html</link><pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/08/16/finding-ryukokosho-in-taiwan.html</guid><description>&lt;p>Last week a friend told me he was looking for a place in Taiwan called “Ryukokosho”.
Or maybe “Ryoko kosho”. From what I understood he was looking for a mosquito species
found in this place.&lt;/p>
&lt;p>The species name is “&lt;a href="https://en.wikipedia.org/wiki/Anopheles_tessellatus">Anopheles tessellatus&lt;/a>”,
and one of its synonyms is “&lt;a href="http://www.mosquitocatalog.org/taxon_descr.aspx?ID=20899">kinoshitai Koidzumi&lt;/a>” — pure
coincidence that &lt;em>kinoshitai&lt;/em>!&lt;/p>
&lt;p>That synonym entry appears to have been found at the following location:
&lt;strong>Ryukokosho&lt;/strong>, Taihoku (Taipei), Formosa [Taiwan, ROC] (LU). So how to find
Ryukokosho if Google Maps cannot find it, Google brings only a handful of
entries with the species synonyms, and no there are no other maps or other
GIS data available?&lt;/p></description></item></channel></rss>