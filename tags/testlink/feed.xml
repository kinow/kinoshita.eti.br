<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testlink on kinow</title><link>https://kinoshita.eti.br/tags/testlink.html</link><description>Recent content in Testlink on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Sat, 28 Jun 2025 22:23:48 +0200</lastBuildDate><atom:link href="https://kinoshita.eti.br/tags/testlink/feed.xml" rel="self" type="application/rss+xml"/><item><title>Missing menus in new installation of TestLink 1.9.8</title><link>https://kinoshita.eti.br/2013/10/27/missing-menus-in-new-installation-of-testlink-1.9.8.html</link><pubDate>Sun, 27 Oct 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/10/27/missing-menus-in-new-installation-of-testlink-1.9.8.html</guid><description>I recently installed TestLink 1.9.8 and noticed that the menus and some other parts of the UI we missing. Looking at /var/log/testlink/userlog1.log (the location may change depending on your settings) I realized that there was something wrong with my PHP installation. There were log messages like the below.
include_once(ADORecordSet_ext_empty.class.php): failed to open stream: No such file or directory - in /home/kinow/php/workspace/testlink-1.9.8/lib/functions/common.php - Line 92 [13/Sep/18 12:51:09][WARNING][2o0h173pdgg5fjqh1pukr83og2][GUI] E_WARNING include_once(): Failed opening 'ADORecordSet_ext_empty.</description></item><item><title>Running BDD tests from TestLink in Jenkins</title><link>https://kinoshita.eti.br/2012/11/07/running-bdd-tests-from-testlink-in-jenkins.html</link><pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/11/07/running-bdd-tests-from-testlink-in-jenkins.html</guid><description>&lt;p>Last night and this morning I spent some time working on running
&lt;a href="http://en.wikipedia.org/wiki/Behavior-driven_development">BDD&lt;/a> tests that were created in
&lt;a href="http://www.teamst.org">TestLink&lt;/a> in &lt;a href="http://jenkins-ci.org">Jenkins&lt;/a>, using
&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin">testlink-plugin&lt;/a>.&lt;/p>
&lt;p>Similar integration has already been proposed in &lt;a href="http://www.sqaopen.net/blog/en/?tag=jinfeng">JinFeng&lt;/a>,
by Olivier Renault. Basically, you write BDD stories in TestLink (a story goes into the Test Case summary),
Jenkins retrieves these stories and executes them using a skeleton project.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2012-11-07-running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png'
 alt=''
 title=''
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure>


&lt;p>There are many ways to use BDD. In some of them you write code like Java, Ruby or Perl, and in others you write a DSL. I started working with JBehave, but for this integration, I preferred to use a &lt;a href="http://en.wikipedia.org/wiki/Domain-specific_language" title="DSL">DSL&lt;/a> - as TestLink doesn&amp;rsquo;t maintain source code, only test cases -, so I switched to &lt;a href="http://www.easyb.org" title="easyb">easyb&lt;/a>.&lt;/p></description></item><item><title>A quick view on Wordpress, Mantis and Jenkins plug-in API</title><link>https://kinoshita.eti.br/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api.html</link><pubDate>Thu, 25 Oct 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api.html</guid><description>&lt;p>I'm preparing a &lt;em>plug-in API proposal for &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a>&lt;/em>, and thought that the best way to learn how to write a good plug-in API would be by looking at other application's plug-in API's.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2012-10-25-a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api/testlink_logo_2.jpg%20'
 alt=''
 title=''
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure>


&lt;p>This post contains information that I gathered for creating this new API, but that may also be useful for other programmers. I used &lt;a href="#wp">Wordpress&lt;/a>, &lt;a href="#mantis">Mantis&lt;/a> and &lt;a href="#jenkins">Jenkins&lt;/a> in this study. Let me know if you find any mistakes or if you have any other suggestions.&lt;/p></description></item><item><title>Jenkins, TestLink and GTest in 5 minutes (or so)</title><link>https://kinoshita.eti.br/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so.html</link><pubDate>Thu, 11 Oct 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so.html</guid><description>&lt;p>This is a 5 minutes guide on creating a job for a C++ project in &lt;a href="http://www.jenkins-ci.org" title="Jenkins CI">Jenkins&lt;/a> with &lt;a href="http://code.google.com/p/googletest" title="GoogleTest">GoogleTest&lt;/a> and reporting the test results back to &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a>, with &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin" title="Jenkins TestLink Plug-in">testlink-plugin&lt;/a>.&lt;/p>
&lt;h2 id="the-test-project-with-googletest">The test project with GoogleTest&lt;/h2>
&lt;p>For this simple guide we will use the samples that come with &lt;a href="https://github.com/kinow/gtest-tap-listener" title="GTest TAP Listener">GTest TAP Listener&lt;/a>. You can get the code from GitHub with &lt;code>git clone git://github.com/kinow/gtest-tap-listener.git&lt;/code>. Take a look at &lt;code>gtest-tap-listener/samples/src/&lt;/code>, there you will find two C++ files: &lt;code>gtest_main.cc&lt;/code> and &lt;code>gtest_testHelloWorld.cc&lt;/code>.&lt;/p>
&lt;p>&lt;code>gtest_main.cc&lt;/code> has the &lt;a href="http://code.google.com/p/googletest/wiki/Primer#Writing_the_main()_Function" title="GTest main function">main function&lt;/a>, and executes the test suite. And &lt;code>gtest_testHelloWorld.cc&lt;/code> has the test cases and tests. Take note of the test case and tests names.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2012-10-11-jenkins-testlink-and-gtest-in-5-minutes-or-so/screenshot_001.png'
 alt=''
 title=''
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure></description></item><item><title>Listing of current projects, achievements and my New Year's resolutions</title><link>https://kinoshita.eti.br/2011/12/24/listing-of-current-projects-achievements-and-my-new-years-resolutions.html</link><pubDate>Sat, 24 Dec 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/12/24/listing-of-current-projects-achievements-and-my-new-years-resolutions.html</guid><description>&lt;p>Tis&amp;rsquo; the end of 2011! Yay! Throughout this year I&amp;rsquo;ve heard people repeatedly saying that I had too much on my plate, and that I should quit some projects, stop giving talks, start surfing again amongst other things. Now, looking back, although I&amp;rsquo;m quite happy with my achievements in 2011, I can see their point.&lt;/p>
&lt;p>In 2010 I started working as Software Quality Engineer with &lt;a title="Anderson Santos" href="http://andersonxp.tumblr.com/">Anderson Santos&lt;/a>. He was the greatest supporter of many of my ideas, so although we stopped working together in 2011, I&amp;rsquo;m still grateful to him for all he taught, for his advices and for spending some time guiding me.&lt;/p>
&lt;p>He motivated me to start giving talks, going to more conferences and contributing more actively to Open Source projects. Since then, I&amp;rsquo;ve given almost 10 talks, including one in &lt;a title="Belgium Testing Days" href="http://www.belgiumtestingdays.com">Belgium Testing Days&lt;/a>, another one in&lt;a title="Oracle JavaOne" href="http://www.oracle.com/javaone/lad-pt/"> Oracle JavaOne&lt;/a> and in March next year I will be in America for a talk in &lt;a title="STP Con" href="http://www.stpcon.com/">STPCON&lt;/a>. I also missed &lt;a title="JCertif" href="http://www.jcertif.com">JCertif&lt;/a> conference in Congo due to visa problems and learned some lessons from it (so sorry Max :)&lt;/p></description></item><item><title>Practical test doubles: adding stubs to TestLink Java API</title><link>https://kinoshita.eti.br/2011/10/23/practical-test-doubles-adding-stubs-to-testlink-java-api.html</link><pubDate>Sun, 23 Oct 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/10/23/practical-test-doubles-adding-stubs-to-testlink-java-api.html</guid><description>&lt;p>&lt;em>"&lt;strong>Test Double&lt;/strong> is a generic term for any case where you replace a production object for testing purposes"&lt;/em> [&lt;a href="#1">1&lt;/a>]. There are different types of Test Doubles: &lt;strong>Dummy&lt;/strong>, &lt;strong>Fake&lt;/strong>, &lt;strong>Stubs&lt;/strong>, &lt;strong>Spies&lt;/strong> and &lt;strong>Mocks&lt;/strong>. In this post we will see a practical example of adding stubs to &lt;a href="testlinkjavaapi.sourceforge.net" title="TestLink Java API">TestLink Java API&lt;/a>.&lt;/p>
&lt;p>Stubs are objects that return canned answers to calls during tests [1]. This is useful specially when you have a system that communicates with different resources such as databases, web services, XML-RPC services and so on.&lt;/p>
&lt;p>TestLink Java API is a small Java project created to act as an interface between &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a> XML-RPC API and a client program written in Java.&lt;/p></description></item><item><title>The Developers Conference (TDC) 2011 Botando o Jenkins para rodar seus testes</title><link>https://kinoshita.eti.br/2011/08/20/the-developers-conference-tdc-2011-botando-o-jenkins-para-rodar-seus-testes.html</link><pubDate>Sat, 20 Aug 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/08/20/the-developers-conference-tdc-2011-botando-o-jenkins-para-rodar-seus-testes.html</guid><description>Botando o Jenkins para rodar seus testes
Event The Developers Conference 2011 Where ? Florian&amp;oacute;polis When ? 2011-08-20</description></item><item><title>TestLink and Hudson (now Jenkins) short tutorial in Automated Software Testing Magazine, issue March 2011</title><link>https://kinoshita.eti.br/2011/03/22/testlink-and-hudson-now-jenkins-short-tutorial-in-automated-software-testing-magazine-issue-march-2011.html</link><pubDate>Tue, 22 Mar 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/03/22/testlink-and-hudson-now-jenkins-short-tutorial-in-automated-software-testing-magazine-issue-march-2011.html</guid><description>Hi there, a new article about TestLink and Hudson (now Jenkins) was published, now in Automated Software Testing Magazine, issue March 2011. In this article you will find a short tutorial to set up a TestNG test and a simple Job to execute your automated tests. Now we are writing a docbook document to explain with more details how the plug-in works and how you can play with it. We are also working in more samples, translation and video demos.</description></item><item><title>Belgium Testing Days (BTD) 2011 How To Automate Tests Using Testlink And Hudson</title><link>https://kinoshita.eti.br/2011/02/14/belgium-testing-days-btd-2011-how-to-automate-tests-using-testlink-and-hudson.html</link><pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/02/14/belgium-testing-days-btd-2011-how-to-automate-tests-using-testlink-and-hudson.html</guid><description>How To Automate Tests Using Testlink And Hudson
Event Belgium Testing Days 2011 Where ? Brussels, Belgium When ? 2011-02-14</description></item><item><title>Article about TestLink and Hudson integration published</title><link>https://kinoshita.eti.br/2010/12/10/article-about-testlink-and-hudson-integration-published.html</link><pubDate>Fri, 10 Dec 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/12/10/article-about-testlink-and-hudson-integration-published.html</guid><description>Since September I&amp;rsquo;ve been working on a project to integrate TestLink and Hudson. The project consists basically in a Hudson Plug-in that uses TestLink Java API to retrieve information of Automated Test Cases created in TestLink. You can read more about the plug-in in the following address: http://wiki.hudson-ci.org/display/HUDSON/TestLink+Plugin.
I wrote an article in conjunction with Anderson dos Santos about this Plug-in. The article was published by Testing Experience in its December issue.</description></item><item><title>Automating tests with Hudson and TestLink (pt-BR only)</title><link>https://kinoshita.eti.br/2010/11/28/automating-tests-with-hudson-and-testlink-pt-br-only.html</link><pubDate>Sun, 28 Nov 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/11/28/automating-tests-with-hudson-and-testlink-pt-br-only.html</guid><description>Slides used at Encontro Ágil 2010. As soon as I finish the plug-in 2.0 version I&amp;rsquo;ll upload a video with a sample demo too.
Automatizando Testes Com Hudson e TestLink by brunodepaulak
Cheers</description></item><item><title>Encontro Ágil 2010 - Lighting talk about Test Automation with TestLink and Hudson</title><link>https://kinoshita.eti.br/2010/11/02/encontro-%C3%A1gil-2010-lighting-talk-about-test-automation-with-testlink-and-hudson.html</link><pubDate>Tue, 02 Nov 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/11/02/encontro-%C3%A1gil-2010-lighting-talk-about-test-automation-with-testlink-and-hudson.html</guid><description>On November 6th (next Saturday) Anderson Santos and I will present a Test Automation solution built on TestLink and Hudson at Encontro Ágil 2010. This meeting is for intended for the Agile community and will be hold at IME-USP (Instituto de Matemática e Estatística - Universidade de Sáo Paulo).</description></item><item><title>TestLink BUG-1890: Possibility to add attachment by using API</title><link>https://kinoshita.eti.br/2010/09/19/testlink-bug-1890-possibility-to-add-attachment-by-using-api.html</link><pubDate>Sun, 19 Sep 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/09/19/testlink-bug-1890-possibility-to-add-attachment-by-using-api.html</guid><description>With the help of Francisco Mancardi I wrote a code that was merged into the TestLink repository trunk. Now you&amp;rsquo;re going to be able to upload attachments such as, for instance, test evidences to your TestLink :-). I hope you like it.
I decided to contribute with this code because I needed something similar for the TestLink Hudson plug-in. Hopefully the plug-in new version will be released before October.
Cheers</description></item></channel></rss>