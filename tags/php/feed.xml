<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Php on kinow</title><link>https://kinoshita.eti.br/tags/php.html</link><description>Recent content in Php on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Thu, 16 Jan 2025 09:29:51 +0100</lastBuildDate><atom:link href="https://kinoshita.eti.br/tags/php/feed.xml" rel="self" type="application/rss+xml"/><item><title>How the Skosmos Widget Wiki plugin works</title><link>https://kinoshita.eti.br/2018/12/24/how-the-skosmos-widget-wiki-plugin-works.html</link><pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/12/24/how-the-skosmos-widget-wiki-plugin-works.html</guid><description>&lt;p>Skosmos can be extended through plugins, or widgets (a widget is a plugin for Skosmos).
You can read more about how &lt;a href="https://github.com/NatLibFi/Skosmos/wiki/Plugins">plugins work in Skosmos here&lt;/a>.&lt;/p>
&lt;p>This post is a note-to-self, explaining how the &lt;strong>Skosmos Widget Wiki plugin&lt;/strong> works. This
is a plugin - or widget - that displays Wikipedia information when the concept supports it.&lt;/p>
&lt;p>Here&amp;rsquo;s an image of the plugin in action. Or you can go to
&lt;a href="http://finto.fi/yso-paikat/en/page/p107650">a live instance of Skosmos&lt;/a>
that has the plugin enabled.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2018-12-24-how-the-skosmos-widget-wiki-plugin-works/skosmos-widget-wiki-screenshot.png'
 alt=''
 title=''
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure></description></item><item><title>Writing a custom SchemaSpy command for Laravel 4</title><link>https://kinoshita.eti.br/2014/02/11/writing-a-custom-schemaspy-command-for-laravel-4.html</link><pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/02/11/writing-a-custom-schemaspy-command-for-laravel-4.html</guid><description>This week I had to write my first custom command for Laravel 4. In Nestor-QA, Peter and I thought it would be useful to have the database schema being automatically generated with SchemaSpy in our Jenkins box.
Thanks to Artisan this task is much simpler than I thought. The following command creates the schemaspy command.
php artisan command:make SchemaSpyCommand --command=schemaspy This will create the file app/commands/SchemaSpyCommand.php. And all I had to do was just fill in the options and write the exec command as the Laravel 4 docs explain.</description></item></channel></rss>