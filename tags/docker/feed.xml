<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on kinow</title><link>https://kinoshita.eti.br/tags/docker.html</link><description>Recent content in Docker on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Sat, 26 Apr 2025 12:23:27 +0200</lastBuildDate><atom:link href="https://kinoshita.eti.br/tags/docker/feed.xml" rel="self" type="application/rss+xml"/><item><title>Running Cylc tasks on PBS Torque with Docker</title><link>https://kinoshita.eti.br/2018/12/22/running-cylc-tasks-on-pbs-torque-with-docker.html</link><pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/12/22/running-cylc-tasks-on-pbs-torque-with-docker.html</guid><description>&lt;p>A few days ago I saw &lt;a href="https://groups.google.com/forum/#!topic/cylc/dP2I1Gxqi20">a post&lt;/a> at the
Cylc Google Group, about file permissions for files generated by Cylc. The post was related to
content created by Cylc, but in an environment with PBS.&lt;/p>
&lt;p>For context, Cylc is an Open Source meta-scheduler, written in Python, that allows you to
define cycle points with dependencies. These cycle points can be simple incremental integer
numbers, or ISO8601 periods or points (e.g. run every 5 minutes, from 10 days ago until the
next year). Cylc takes care to create an execution schedule for you, and delegate that to a
system that runs your workflow. I work full time on this amazing Open Source tool!&lt;/p>
&lt;p>Such system could be the local computer in background, batch systems such as &lt;code>at&lt;/code>, or PBS.
PBS was created for NASA, to manage executing jobs taking into consideration cluster resources,
and also using queues, priorities, and other features useful for HPC programming. Later PBS
was acquired by Altair, an Open Source version OpenPBS was created, and later abandoned. And
there is another fork called PBS Torque. I first encountered PBS at the São Paulo
University, in Brazil, where they had a &lt;a href="http://www.usp.br/hpc/puma.php">PBS Torque cluster&lt;/a>.&lt;/p>
&lt;h3 id="running-pbs-torque-with-docker">Running PBS Torque with Docker&lt;/h3>
&lt;p>Even though I have access to an environment with Cylc and with PBS, I decided to give it a try
and see how hard it would be to reproduce it with Docker. One thing that I like about this
approach is the possibility to share the work with others online. I believe it improves
communication, agility, and can be useful for posterity.&lt;/p></description></item><item><title>Creating a Docker container to run as a command</title><link>https://kinoshita.eti.br/2018/08/04/creating-a-docker-container-to-run-as-a-command.html</link><pubDate>Sat, 04 Aug 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/08/04/creating-a-docker-container-to-run-as-a-command.html</guid><description>&lt;p>For the past two weeks at work I have been assigned to work on PHP projects. Though I used
PHP some time ago - especially with Code Igniter and Laravel - I have not used it in a few
years. And have been doing mostly Java nowadays.&lt;/p>
&lt;p>The complete project setup was done by co-workers. I had a PHP project, using Symfony, several
bundles and libraries, and Postgres. But it required just running a few commands to set up
AWS settings, and then fire up Docker Compose.&lt;/p></description></item><item><title>Order of containers in Docker Compose</title><link>https://kinoshita.eti.br/2017/03/14/order-of-containers-in-docker-compose.html</link><pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/03/14/order-of-containers-in-docker-compose.html</guid><description>In Docker Compose you are able to control the startup order of the containers via the depends_on statement. This is documented in Controlling startup order in Compose.
If you have a simple setup, with Tomcat and Postgres, sometimes Postgres will start first, but Compose will initialize Tomcat before Postgres has fully booted. When that happens, you may receive 401, 404, or other application errors.
You can fix it by combining depends_on with a healthcheck.</description></item><item><title>Trying SaltStack with Docker</title><link>https://kinoshita.eti.br/2016/04/17/trying-saltstack-with-docker.html</link><pubDate>Sun, 17 Apr 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/04/17/trying-saltstack-with-docker.html</guid><description>Some weeks ago I started learning SaltStack for a project at work. But I couldn&amp;rsquo;t find a good Docker image for that and I had to ask the Ops team for some VM&amp;rsquo;s. We are having a rainy weekend in Auckland, so I decided to have another look at the Jenkins SaltStack Plug-in.
But now since I was at home, I couldn&amp;rsquo;t use the VM&amp;rsquo;s that I had access to at work.</description></item><item><title>Deploying WAR files to Tomcat with Jenkins</title><link>https://kinoshita.eti.br/2016/03/20/deploying-war-files-to-tomcat-with-jenkins.html</link><pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/03/20/deploying-war-files-to-tomcat-with-jenkins.html</guid><description>&lt;p>&lt;strong>Table of Contents&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#1-deploying-with-custom-scripts">Deploying with custom scripts&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-deploying-with-a-build-tool">Deploying with a build tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-deploying-with-a-build-server">Deploying with a build server&lt;/a>&lt;/li>
&lt;li>&lt;a href="#final-thoughts">Final thoughts&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>A co-worker asked me this week about how to deploy a WAR file to Tomcat with Jenkins. In my team we are
currently maintaining and deploying about 10 Java web systems, but we have no consistent way of deploying
the applications to Tomcat yet. In the past I used Ant, Maven, Cargo, Grunt, and Jenkins, so I
decided to write this short post to show a few different ways it can be achieved, à la
&lt;a href="https://en.wikipedia.org/wiki/There's_more_than_one_way_to_do_it">Perl&amp;rsquo;s TMTOWTDI&lt;/a> motto.&lt;/p>
&lt;h2>&lt;a name="1-deploying-with-custom-scripts" style="color: #222222;">#1 Deploying with custom scripts&lt;/a>&lt;/h2>
&lt;p>At first you may be tempted to write your own script to deploy to Tomcat with some Shell, Perl, Python
or Java. But I think I would choose this option only because either I needed some feature that is not
available in the other options, or in order to call other tasks or debug some problem.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker run -d -p 8888:8080 jeanblanchard/tomcat:8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/spring-projects/spring-petclinic.git &lt;span style="color:#000">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a90d91">cd&lt;/span> spring-petclinic &lt;span style="color:#000">&amp;amp;&amp;amp;&lt;/span> mvn package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl --upload-file target/petclinic.war &lt;span style="color:#c41a16">&amp;#34;http://admin:admin@localhost:8888/manager/text/deploy?path=/spring-petclinic&amp;amp;update=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK - Deployed application at context path /spring-petclinic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>