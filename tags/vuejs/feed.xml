<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vuejs on kinow</title><link>https://kinoshita.eti.br/tags/vuejs.html</link><description>Recent content in Vuejs on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Sun, 23 Mar 2025 17:59:44 +0100</lastBuildDate><atom:link href="https://kinoshita.eti.br/tags/vuejs/feed.xml" rel="self" type="application/rss+xml"/><item><title>Using Lumino with Vue</title><link>https://kinoshita.eti.br/2020/03/28/using-lumino-with-vue.html</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/28/using-lumino-with-vue.html</guid><description>&lt;p>&lt;a href="https://github.com/jupyterlab/lumino">Lumino&lt;/a> is the engine that powers the GUI of
&lt;a href="https://github.com/jupyterlab/jupyterlab/">JupyterLab&lt;/a>. It used to be called Phosphor JS,
but some time ago there was a misunderstanding and the author gave up maintaining it.
Then JupyterLab decided to fork it under this new name.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2020-03-28-using-lumino-with-vue/demo.gif'
 alt=''
 title=''
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure>


&lt;p>The documentation is still lacking, but it works as expected, and there is already a
community supporting it. We decided to use it in &lt;a href="https://github.com/cylc/cylc-ui">Cylc UI&lt;/a>
to have tabbed panels like JupyterLab.&lt;/p>
&lt;p>&lt;a href="https://github.com/kinow/vue-lumino">This project&lt;/a> contains the part of the code of
Cylc UI that integrated Lumino and Vue. It was a suggestion from one of the maintainers
of JupyterLab, that got involved in an issue of Cylc UI. You can find this project linked
too in the Lumino project &lt;code>README&lt;/code> file.&lt;/p></description></item><item><title>Experimenting with Vuejs and Cytoscape</title><link>https://kinoshita.eti.br/2019/11/19/experimenting-with-vuejs-and-cytoscape.html</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/11/19/experimenting-with-vuejs-and-cytoscape.html</guid><description>&lt;p>The project I work on at work had a GUI interface with Python and PyGTK, which is now being
ported to the web. We have adopted Vuejs as the JS framework, and have been building the
components required for our UI over the past months. The project is hosted
&lt;a href="https://github.com/cylc/cylc-ui">on GitHub&lt;/a> licensed under GPLv3.&lt;/p>
&lt;p>In Cylc 7, an important visualization was the workflow graph. The screenshot below is from
the design sketches done by another contributor from the UK, showing how it should look in
Cylc 8.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2019-11-19-experimenting-with-vuejs-and-cytoscape/cylc8-sketch.png'
 alt=''
 title=''
 style=''
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure>


&lt;p>The first library we decided to try is Cytoscape, a well-known graph library, with use cases
in research, corporate, and other fields. One limitation of Cytoscape is that the way it renders
the graph nodes is limited.&lt;/p>
&lt;p>Limited, meaning that you won&amp;rsquo;t be able to easily add HTML, images, SVG, animation, etc. Though
not impossible.&lt;/p></description></item><item><title>Dynamic breadcrumbs with Vue Router nested routes and Vuetify Breadcrumb component</title><link>https://kinoshita.eti.br/2019/11/09/dynamic-breadcrumbs-with-vue-router-nested-routes-and-vuetify-breadcrumb-component.html</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/11/09/dynamic-breadcrumbs-with-vue-router-nested-routes-and-vuetify-breadcrumb-component.html</guid><description>&lt;p>Vue Router supports nested routes, which allow developers to create a hierarchical navigation structure.
This is handy if you want to create breadcrumbs based on this hierarchy dynamically.&lt;/p>
&lt;p>Here&amp;rsquo;s how you should create your nested routes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">const&lt;/span> &lt;span style="color:#000">routes&lt;/span> &lt;span style="color:#000">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;/&amp;#39;&lt;/span>, &lt;span style="color:#000">component&lt;/span>&lt;span style="color:#000">:&lt;/span> { &lt;span style="color:#000">template&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">`&amp;lt;h1&amp;gt;Home View&amp;lt;/h1&amp;gt;`&lt;/span> } },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;/users&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">component&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">render&lt;/span> (&lt;span style="color:#000">c&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">c&lt;/span>(&lt;span style="color:#c41a16">&amp;#39;router-view&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">meta&lt;/span>&lt;span style="color:#000">:&lt;/span> { &lt;span style="color:#000">breadCrumb&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;Users&amp;#39;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">children&lt;/span>&lt;span style="color:#000">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">component&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">template&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;div&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;h1&amp;gt;Users View&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;router-link to=&amp;#34;/users/1&amp;#34;&amp;gt;View User 1&amp;lt;/router-link&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> `&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;:id&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">component&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">render&lt;/span> (&lt;span style="color:#000">c&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">return&lt;/span> &lt;span style="color:#000">c&lt;/span>(&lt;span style="color:#c41a16">&amp;#39;router-view&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">meta&lt;/span>&lt;span style="color:#000">:&lt;/span> { &lt;span style="color:#000">breadCrumb&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;View User&amp;#39;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">children&lt;/span>&lt;span style="color:#000">:&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">component&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">template&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;div&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;h1&amp;gt;User View&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;router-link to=&amp;#34;/users/1/edit&amp;#34;&amp;gt;Edit User&amp;lt;/router-link&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16"> `&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;edit&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">component&lt;/span>&lt;span style="color:#000">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">template&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">`&amp;lt;h1&amp;gt;Edit User&amp;lt;/h1&amp;gt;`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">meta&lt;/span>&lt;span style="color:#000">:&lt;/span> { &lt;span style="color:#000">breadCrumb&lt;/span>&lt;span style="color:#000">:&lt;/span> &lt;span style="color:#c41a16">&amp;#39;Edit User&amp;#39;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>