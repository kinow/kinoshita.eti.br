<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jena on kinow</title><link>https://kinoshita.eti.br/tags/jena.html</link><description>Recent content in Jena on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Wed, 08 Jan 2025 18:13:17 +0100</lastBuildDate><atom:link href="https://kinoshita.eti.br/tags/jena/feed.xml" rel="self" type="application/rss+xml"/><item><title>UUID's in Apache Jena</title><link>https://kinoshita.eti.br/2018/08/11/uuids-in-apache-jena.html</link><pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/08/11/uuids-in-apache-jena.html</guid><description>&lt;p>In this post I won&amp;rsquo;t talk about what are UUID&amp;rsquo;s, or how they work in Java.
&lt;a href="https://www.baeldung.com/java-uuid">Here&lt;/a>&amp;rsquo;s a great article on that. Or access the always reliable &lt;a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Wikipedia article&lt;/a>
about it. &lt;em>(or if you would rather, read the &lt;a href="http://www.ietf.org/rfc/rfc4122.txt">RFC 4122&lt;/a>)&lt;/em>&lt;/p>
&lt;p>I found out that Jena had UUID implementations after writing a
[previous post]({% post_url 2018-05-29-what-happens-when-you-create-a-new-dataset-in-apache-jena-fuseki %}).
And then decided to look into which UUID&amp;rsquo;s Jena has, and where these UUID&amp;rsquo;s
were used. This way I would either understand why Jena needed UUID&amp;rsquo;s, or
just be more educated in case I ever stumbled with a change in Jena that
required related work.&lt;/p></description></item><item><title>What happens when you create a new dataset in Apache Jena Fuseki</title><link>https://kinoshita.eti.br/2018/05/29/what-happens-when-you-create-a-new-dataset-in-apache-jena-fuseki.html</link><pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/05/29/what-happens-when-you-create-a-new-dataset-in-apache-jena-fuseki.html</guid><description>&lt;p>&lt;a href="{% post_url 2018-05-27-what-happens-when-you-upload-a-turtle-file-in-apache-jena-fuseki %}">Last post&lt;/a>
was about what happens when you upload a Turtle file to Apache Jena Fuseki. And now today&amp;rsquo;s post will be about
what happens when you create a new dataset in Apache Jena Fuseki.&lt;/p>
&lt;p>In theory, that happens before you upload a Turtle file, but this post series won&amp;rsquo;t follow a logical order.
It will be more based on what I find interesting.&lt;/p>
&lt;p>Oh, the dataset created is &lt;strong>an in-memory dataset&lt;/strong>. Here&amp;rsquo;s a simplified sequence diagram. Again,
these articles are more brain-dumps, used by myself for later reference.&lt;/p>



&lt;figure class="feature">

 &lt;img
 src='https://kinoshita.eti.br/assets/posts/2018-05-29-what-happens-when-you-create-a-new-dataset-in-apache-jena-fuseki/sequence-diagram.png'
 alt=''
 title=''
 style='display: inline; width: 100%;'
 width=''
 height=''
 />
 &lt;figcaption>&lt;/figcaption>

&lt;/figure></description></item><item><title>What happens when you upload a Turtle file in Apache Jena Fuseki</title><link>https://kinoshita.eti.br/2018/05/27/what-happens-when-you-upload-a-turtle-file-in-apache-jena-fuseki.html</link><pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/05/27/what-happens-when-you-upload-a-turtle-file-in-apache-jena-fuseki.html</guid><description>I am working on an issue for Skosmos that involves preparing some Turtle files and uploading them using Apache Jena Fuseki&amp;rsquo;s web interface.
The issue is now pending feedback, which gives me a moment to have fun with something else. So I decided to dig down the rabbit hole and start learning more about certain parts of the Apache Jena code base.
This post will be useful to myself in the future, as a note-taking in a series, so that I remember how things work - you never know right?</description></item><item><title>Learning more about SPARQL and Jena internals</title><link>https://kinoshita.eti.br/2018/04/28/learning-more-about-sparql-and-jena-internals.html</link><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/04/28/learning-more-about-sparql-and-jena-internals.html</guid><description>O Corvo O Corvo Recently a pull request for Apache Jena that I started three years ago got merged. Even though it has been three years since that pull request, there are still many parts of the project code base that I am not familiar with.
And not only the code, but there are also many concepts about SPARQL, other standards used in Jena, and internals about triple stores.</description></item><item><title>Contributing to Apache Jena</title><link>https://kinoshita.eti.br/2015/01/01/contributing-to-apache-jena.html</link><pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2015/01/01/contributing-to-apache-jena.html</guid><description>&lt;p>As I mentioned in my [previous post]({% post_url 2014-10-11-basic-workflow-of-a-sparql-query-in-fuseki %}),
I am using &lt;a href="http://jena.apache.org">Apache Jena&lt;/a> for a project of a customer. I had never used
any triple store, nor a SPARQL Endpoint server before. But for being involved with the Apache
Software Foundation, and since the company itself is using several Apache components, it was only
natural Jena to be our first choice.&lt;/p>
&lt;p>It has served us very well so far. At the moment we have less than 100 queries per day, but the
project is still under development and we expect 1000 queries per day by the first quarter of
2015 and 1000000 near the end of 2015. We also have few entries in TDB, but expect to grow this
number to a few million before 2016.&lt;/p></description></item><item><title>Basic workflow of a SPARQL query in Fuseki</title><link>https://kinoshita.eti.br/2014/10/11/basic-workflow-of-a-sparql-query-in-fuseki.html</link><pubDate>Sat, 11 Oct 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/10/11/basic-workflow-of-a-sparql-query-in-fuseki.html</guid><description>Before using any library or tool in a customer project, specially when it is an Open Source one, there are many things that I like to look at before deploying it. Basically, I look at the features, documentation, community, open issues (in special blockers or criticals), the time to release fixes and new features and, obviously, the license.
At the moment I&amp;rsquo;m using Apache Jena to work with ontologies, SPARQL and data matching and enrichment for a customer.</description></item></channel></rss>