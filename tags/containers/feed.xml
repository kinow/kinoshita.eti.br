<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Containers on kinow</title><link>https://kinoshita.eti.br/tags/containers.html</link><description>Recent content in Containers on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Bruno P. Kinoshita All rights reserved</copyright><lastBuildDate>Sat, 14 Sep 2024 20:40:31 +0200</lastBuildDate><atom:link href="https://kinoshita.eti.br/tags/containers/feed.xml" rel="self" type="application/rss+xml"/><item><title>Using Docker to run Cypress with Maven</title><link>https://kinoshita.eti.br/2024/08/11/using-docker-to-run-cypress-with-maven.html</link><pubDate>Sun, 11 Aug 2024 00:02:52 +0300</pubDate><guid>https://kinoshita.eti.br/2024/08/11/using-docker-to-run-cypress-with-maven.html</guid><description>Apache Jena runs Cypress tests from Maven, which makes running everything containerized a bit more difficult. To make it more complicated, we also used wait-on and concurrently to orchestrate how the tests and API test process are launched.
The solution found was to combine the official Maven docker image, with the cypress/included image, in a multi-stage build.
# A multi-stage image with Cypress and Java+Maven for Jena... ALv2... # To build it: # `docker build -t jena/build:latest .</description></item></channel></rss>