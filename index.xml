<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>About on kinow</title><link>https://kinoshita.eti.br/</link><description>Recent content in About on kinow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kinoshita.eti.br/index.xml" rel="self" type="application/rss+xml"/><item><title>Cyclic Workflows with Prefect</title><link>https://kinoshita.eti.br/2021/11/08/cyclic-workflows-with-prefect.html</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/11/08/cyclic-workflows-with-prefect.html</guid><description>&lt;div style="width: 50%; margin: 0 auto;">
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2021-11-08-cyclic-workflows-with-prefect/prefect.svg'
alt='Prefect logo'
title='Prefect logo'
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;/div>
&lt;p>Last month I wrote about
&lt;a href="https://kinoshita.eti.br/2021/10/01/cyclic-workflows-with-cylc-and-stackstorm.html">Cyclic Workflows with Cylc and StackStorm&lt;/a>
and how few workflow managers support cyclic workflows.&lt;/p>
&lt;p>I was surprised today while reading Prefect documentation to see this paragraph:&lt;/p>
&lt;blockquote>
&lt;p>Most workflow frameworks act as if looping is impossible (stressing the Acyclic part of the DAG),
but it&amp;rsquo;s actually trivial to implement. We simply dynamically unroll the loop, similar to how RNN
gradients are sometimes computed.&lt;/p>
&lt;/blockquote></description></item><item><title>Blender rendering on NVIDIA Jetson Nano</title><link>https://kinoshita.eti.br/2021/10/17/blender-rendering-on-nvidia-jetson-nano.html</link><pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/10/17/blender-rendering-on-nvidia-jetson-nano.html</guid><description>NVIDIA Jetson Nano computer I had used Blender during my graduation at the Mackenzie University and started learning Blender 2.8+ again a few weeks ago. Unfortunately rendering the basic tutorials like Andrew Price&amp;rsquo;s donut takes several minutes on my old (but excellent for programming) Thinkpad T550 i7 16 GB with a simple Samsung SSD. The reason is that my GPU, a NVIDIA NVS 5400M with 2 GB memory and 96 cores cannot be used with Blender as it only supports CUDA 2.</description></item><item><title>Cyclic Workflows with Cylc and StackStorm</title><link>https://kinoshita.eti.br/2021/10/01/cyclic-workflows-with-cylc-and-stackstorm.html</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/10/01/cyclic-workflows-with-cylc-and-stackstorm.html</guid><description>I am aware of only two workflow managers that support cyclic workflows. Cylc and StackStorm. I won&amp;rsquo;t enter into details about these two tools, but I must note that I worked on Cylc during my employment with NIWA, in New Zealand.
In this post I will only show a very simple workflow called five first using Cylc, and then the same workflow with StackStorm.
Cylc First let&amp;rsquo;s take a look at the source code of this workflow with Cylc 8 and plot it.</description></item><item><title>Random traffic light</title><link>https://kinoshita.eti.br/2021/04/06/random-traffic-light.html</link><pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/04/06/random-traffic-light.html</guid><description>From a reference photo found on Twitter.
Original photograph from Twitter</description></item><item><title>Tufted Titmouse</title><link>https://kinoshita.eti.br/2021/04/05/tufted-titmouse.html</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/04/05/tufted-titmouse.html</guid><description>From a reference photo by Ioannis Moutsatsos.
Original photograph of the Tufted Titmouse by Ioannis Moutsatsos Painted using recently learned techniques after watching a video by Sarah Burns Studio, and also other mixed media technique from a Domestika course by Maru Godas.</description></item><item><title>Bezerra da Silva</title><link>https://kinoshita.eti.br/2021/03/27/bezerra-da-silva.html</link><pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/27/bezerra-da-silva.html</guid><description>Created with Staedtler colored pencils, then digitalized and post-processed in GIMP. Used a photo for reference.
Drawing of Bezerra da Silva in red colored pencil Used in Speak Like A Brazilian in this post.
Drawing of Bezerra da Silva in Speak Like A Brazilian screenshot</description></item><item><title>Figurative drawing line of action 2021-03-11</title><link>https://kinoshita.eti.br/2021/03/11/figurative-drawing-line-of-action-2021-03-11.html</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/11/figurative-drawing-line-of-action-2021-03-11.html</guid><description/></item><item><title>Low poly in Inkscape</title><link>https://kinoshita.eti.br/2021/03/11/low-poly-in-inkscape.html</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/11/low-poly-in-inkscape.html</guid><description>The last Inkscape about screen contest had two entries that called my attention for being created in Inkscape and for how nice they looked. Not having used Inkscape for low poly before, I decided to give it a try.
After reading a handful of tutorials, I realized it is a very interesting and relaxing process. You use a reference photo with low opacity as background, and then create the polygons manually with a vector pen.</description></item><item><title>Yandê pães logo</title><link>https://kinoshita.eti.br/2021/03/07/yand%C3%AA-p%C3%A3es-logo.html</link><pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/03/07/yand%C3%AA-p%C3%A3es-logo.html</guid><description>Logo created on Inkscape, based on ideas and sketches given by customer.
Used both for the store and for the social media and web sites.</description></item><item><title>Figurative drawing line of action 2021-02-20</title><link>https://kinoshita.eti.br/2021/02/20/figurative-drawing-line-of-action-2021-02-20.html</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/02/20/figurative-drawing-line-of-action-2021-02-20.html</guid><description/></item><item><title>Rooster</title><link>https://kinoshita.eti.br/2021/02/07/rooster.html</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/02/07/rooster.html</guid><description>Created in Krita from reference photo.</description></item><item><title>Auckland CBD Life Drawing 2021-02-01</title><link>https://kinoshita.eti.br/2021/02/01/auckland-cbd-life-drawing-2021-02-01.html</link><pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/02/01/auckland-cbd-life-drawing-2021-02-01.html</guid><description/></item><item><title>Auckland CBD Life Drawing 2021-01-18</title><link>https://kinoshita.eti.br/2021/01/18/auckland-cbd-life-drawing-2021-01-18.html</link><pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2021/01/18/auckland-cbd-life-drawing-2021-01-18.html</guid><description/></item><item><title>Lola</title><link>https://kinoshita.eti.br/2020/10/11/lola.html</link><pubDate>Sun, 11 Oct 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/10/11/lola.html</guid><description/></item><item><title>Rocky</title><link>https://kinoshita.eti.br/2020/09/23/rocky.html</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/09/23/rocky.html</guid><description>High res graphite drawing
High res ink drawing</description></item><item><title>NZRSE 2020 Cylc UI Scalability</title><link>https://kinoshita.eti.br/2020/09/03/nzrse-2020-cylc-ui-scalability.html</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/09/03/nzrse-2020-cylc-ui-scalability.html</guid><description>Lightning talk for the NZRSE 2020 conference.</description></item><item><title>Finding "ryukokosho" in Taiwan</title><link>https://kinoshita.eti.br/2020/08/16/finding-ryukokosho-in-taiwan.html</link><pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/08/16/finding-ryukokosho-in-taiwan.html</guid><description>&lt;p>Last week a friend told me he was looking for a place in Taiwan called “Ryukokosho”.
Or maybe “Ryoko kosho”. From what I understood he was looking for a mosquito species
found in this place.&lt;/p>
&lt;p>The species name is “&lt;a href="https://en.wikipedia.org/wiki/Anopheles_tessellatus">Anopheles tessellatus&lt;/a>”,
and one of its synonyms is “&lt;a href="http://www.mosquitocatalog.org/taxon_descr.aspx?ID=20899">kinoshitai Koidzumi&lt;/a>” — pure
coincidence that &lt;em>kinoshitai&lt;/em>!&lt;/p>
&lt;p>That synonym entry appears to have been found at the following location:
&lt;strong>Ryukokosho&lt;/strong>, Taihoku (Taipei), Formosa [Taiwan, ROC] (LU). So how to find
Ryukokosho if Google Maps cannot find it, Google brings only a handful of
entries with the species synonyms, and no there are no other maps or other
GIS data available?&lt;/p></description></item><item><title>Poema: São Paulo e seus cabos</title><link>https://kinoshita.eti.br/2020/06/21/poema-s%C3%A3o-paulo-e-seus-cabos.html</link><pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/06/21/poema-s%C3%A3o-paulo-e-seus-cabos.html</guid><description>A drawing with houses in Sao Paulo, with many electricity/tv/telephone cables in front of it São Paulo tem cabos De cabo a rabo Cabos e mais cabos São Paulo tem gatos nos cabos E gente fazendo gatos para ter cabo É tanto cabo que não acaba mais Mas tanto e tanto cabo Que a gente não dá cabo É tanto cabo que não cabo mais Ficaram os cabos E fui-me-embora Cabô</description></item><item><title>Learning new vocabulary with Shimura Ken Jailbreak story</title><link>https://kinoshita.eti.br/2020/05/23/learning-new-vocabulary-with-shimura-ken-jailbreak-story.html</link><pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/05/23/learning-new-vocabulary-with-shimura-ken-jailbreak-story.html</guid><description>I watched Shimura Ken (志村 けん) the first time doing his Bakatono-Sama character. With a simple Japanese, still hard to understand his jokes, but luckily most of his videos were translated to Portuguese or English.
He passed away a few days ago, so I looked for some of his old videos to remember him. &amp;ldquo;Jailbreak&amp;rdquo; (脱獄物語) is a story about jailed Shimura. His daughter visits him in jail, and after the guard leaves, Drift Ken starts explaining to his daughter his escape plan.</description></item><item><title>Notes on Apache Jena StreamRDFWriter</title><link>https://kinoshita.eti.br/2020/04/11/notes-on-apache-jena-streamrdfwriter.html</link><pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/11/notes-on-apache-jena-streamrdfwriter.html</guid><description>&lt;p>&lt;a href="https://jena.apache.org/">Apache Jena&lt;/a> project is like a box full of interesting things—at least if you love programming. One of its many features, is &lt;strong>stream processing&lt;/strong>.&lt;/p>
&lt;p>The graphs in Jena may contain very large datasets, with giga- or terabytes. Some queries may be very large, and then sending the whole result would be simply impracticable.&lt;/p>
&lt;p>Instead, the data will go through ARQ. ARQ is a query engine for Jena that supports SPARQL. There is one piece of code there that I found interesting while reviewing a small pull request: &lt;a href="https://github.com/apache/jena/blob/cbdba5edb47041a4181a00bd7660e5d4c212530a/jena-arq/src/main/java/org/apache/jena/riot/system/StreamRDFWriter.java">&lt;code>org.apache.jena.riot.system.StreamRDFWriter&lt;/code>&lt;/a>.&lt;/p>
&lt;p>It is responsible for writing graph data in a streaming fashion. (See &lt;a href="https://en.wikipedia.org/wiki/Stream_processing">stream processing&lt;/a> for programming models and more.)&lt;/p>
&lt;h2 id="stream-factories">Stream factories&lt;/h2>
&lt;p>&lt;code>StreamRDFWriter&lt;/code> holds several implementations (as &lt;code>static&lt;/code> members) of &lt;code>StreamRDFWriterFactory&lt;/code>. The factory has one responsibility only, to create streams (&lt;code>StreamRDF&lt;/code>), for a certain format and context.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2020-04-11-notes-on-apache-jena-streamrdfwriter/01.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Apple 2</title><link>https://kinoshita.eti.br/2020/04/04/apple-2.html</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/04/apple-2.html</guid><description>Apple 2</description></item><item><title>Lunar vehicle</title><link>https://kinoshita.eti.br/2020/04/04/lunar-vehicle.html</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/04/lunar-vehicle.html</guid><description>Lunar vehicle sketch</description></item><item><title>Green Skull</title><link>https://kinoshita.eti.br/2020/04/03/green-skull.html</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/03/green-skull.html</guid><description/></item><item><title>Old Hands</title><link>https://kinoshita.eti.br/2020/04/03/old-hands.html</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/03/old-hands.html</guid><description/></item><item><title>Stink Bug</title><link>https://kinoshita.eti.br/2020/04/03/stink-bug.html</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/03/stink-bug.html</guid><description/></item><item><title>Cave</title><link>https://kinoshita.eti.br/2020/04/01/cave.html</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/01/cave.html</guid><description/></item><item><title>O Corvo</title><link>https://kinoshita.eti.br/2020/04/01/o-corvo.html</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/01/o-corvo.html</guid><description/></item><item><title>Royal Spoonbill</title><link>https://kinoshita.eti.br/2020/04/01/royal-spoonbill.html</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/01/royal-spoonbill.html</guid><description/></item><item><title>Simone</title><link>https://kinoshita.eti.br/2020/04/01/simone.html</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/04/01/simone.html</guid><description/></item><item><title>Obāchan</title><link>https://kinoshita.eti.br/2020/03/31/ob%C4%81chan.html</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/31/ob%C4%81chan.html</guid><description/></item><item><title>Terra Celta, Elcio</title><link>https://kinoshita.eti.br/2020/03/31/terra-celta-elcio.html</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/31/terra-celta-elcio.html</guid><description/></item><item><title>Victim of domestic violence</title><link>https://kinoshita.eti.br/2020/03/31/victim-of-domestic-violence.html</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/31/victim-of-domestic-violence.html</guid><description/></item><item><title>Dog</title><link>https://kinoshita.eti.br/2020/03/30/dog.html</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/30/dog.html</guid><description/></item><item><title>Doggo White</title><link>https://kinoshita.eti.br/2020/03/30/doggo-white.html</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/30/doggo-white.html</guid><description/></item><item><title>Woman Looking 01</title><link>https://kinoshita.eti.br/2020/03/30/woman-looking-01.html</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/30/woman-looking-01.html</guid><description/></item><item><title>Daienny Lima</title><link>https://kinoshita.eti.br/2020/03/29/daienny-lima.html</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/29/daienny-lima.html</guid><description/></item><item><title>Jean-Luc Picard</title><link>https://kinoshita.eti.br/2020/03/29/jean-luc-picard.html</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/29/jean-luc-picard.html</guid><description/></item><item><title>Kelvin Diesel engine</title><link>https://kinoshita.eti.br/2020/03/29/kelvin-diesel-engine.html</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/29/kelvin-diesel-engine.html</guid><description/></item><item><title>Galpão Brás</title><link>https://kinoshita.eti.br/2020/03/28/galp%C3%A3o-br%C3%A1s.html</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/28/galp%C3%A3o-br%C3%A1s.html</guid><description/></item><item><title>Grumman F-14 Tomcat</title><link>https://kinoshita.eti.br/2020/03/28/grumman-f-14-tomcat.html</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/28/grumman-f-14-tomcat.html</guid><description/></item><item><title>Using Lumino with Vue</title><link>https://kinoshita.eti.br/2020/03/28/using-lumino-with-vue.html</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/28/using-lumino-with-vue.html</guid><description>&lt;p>&lt;a href="https://github.com/jupyterlab/lumino">Lumino&lt;/a> is the engine that powers the GUI of
&lt;a href="https://github.com/jupyterlab/jupyterlab/">JupyterLab&lt;/a>. It used to be called Phosphor JS,
but some time ago there was a misunderstanding and the author gave up maintaining it.
Then JupyterLab decided to fork it under this new name.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2020-03-28-using-lumino-with-vue/demo.gif'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>The documentation is still lacking, but it works as expected, and there is already a
community supporting it. We decided to use it in &lt;a href="https://github.com/cylc/cylc-ui">Cylc UI&lt;/a>
to have tabbed panels like JupyterLab.&lt;/p>
&lt;p>&lt;a href="https://github.com/kinow/vue-lumino">This project&lt;/a> contains the part of the code of
Cylc UI that integrated Lumino and Vue. It was a suggestion from one of the maintainers
of JupyterLab, that got involved in an issue of Cylc UI. You can find this project linked
too in the Lumino project &lt;code>README&lt;/code> file.&lt;/p></description></item><item><title>Zatoichi Crying 1</title><link>https://kinoshita.eti.br/2020/03/28/zatoichi-crying-1.html</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/28/zatoichi-crying-1.html</guid><description/></item><item><title>Alonzo and Lambda</title><link>https://kinoshita.eti.br/2020/03/27/alonzo-and-lambda.html</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/27/alonzo-and-lambda.html</guid><description>Drawn from photo as reference, with Pentel ink brush.
Used as background in the r/functionalprogramming subreddit community.
Screenshot of the subreddit community with image in the background Later used by a PhD student in his thesis presentation for a French university.</description></item><item><title>Southern Royal Albatross</title><link>https://kinoshita.eti.br/2020/03/27/southern-royal-albatross.html</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/27/southern-royal-albatross.html</guid><description/></item><item><title>Jenkins Active Choices with Jupyter Notebooks</title><link>https://kinoshita.eti.br/2020/03/26/jenkins-active-choices-with-jupyter-notebooks.html</link><pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/03/26/jenkins-active-choices-with-jupyter-notebooks.html</guid><description>Jenkins Active Choices provides interactive and reactive parameters for the Jenkins UI. It is used by DevOps but also by researchers in industry and academia. Some days ago I ran an experiment where I tried to reproduce similar behaviour of the plug-in with Jupyter Notebooks and ipywidgets.
The experiment was a success, and I am convinced one could achieve the same in Jupyter Notebooks. Jenkins could be used as workflow manager, or the parameters could be submitted to a different workflow manager or another system.</description></item><item><title>Sketchbook page 151</title><link>https://kinoshita.eti.br/2020/02/29/sketchbook-page-151.html</link><pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/02/29/sketchbook-page-151.html</guid><description>Page 151 of my sketchbook, about the pacará, or &amp;ldquo;oreja de negro&amp;rdquo;.
Page 151 of the sketch book 2B cretacolor lead holder.</description></item><item><title>Poema: Magreza gorda</title><link>https://kinoshita.eti.br/2020/02/25/poema-magreza-gorda.html</link><pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/02/25/poema-magreza-gorda.html</guid><description>Ela me pergunta se trouxe algo gordo Não Croissant magro com queijo amarelo magro Torta magra feita com frango magro Sanduíches de atum magros E bolo de chocolate magro Uma fineza Poema de alguns anos atrás&amp;hellip;</description></item><item><title>Poema: Ladrar na descida</title><link>https://kinoshita.eti.br/2020/02/24/poema-ladrar-na-descida.html</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/02/24/poema-ladrar-na-descida.html</guid><description>A black and white drawing of a dog showing its teeth/fangs Ouvi um latido O cão parecia grande Um rapaz passou por mim Corrido Pensei comigo naquele instante Puta que o pariu... fodeo Poema de alguns anos atrás&amp;hellip;</description></item><item><title>What does food have to do with something being easy?</title><link>https://kinoshita.eti.br/2020/02/23/what-does-food-have-to-do-with-something-being-easy.html</link><pubDate>Sun, 23 Feb 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/02/23/what-does-food-have-to-do-with-something-being-easy.html</guid><description>Some time ago I saw this post on reddit about &amp;ldquo;朝飯前&amp;rdquo; (asa-meshi-mae), literally &amp;ldquo;before the morning meal&amp;rdquo; in Japanese. This is an expression that has the same meaning as piece of cake, meaning that something is very easy.
From the comments in that thread, there are more examples.
In English &amp;quot;&amp;lt;something&amp;gt; for breakfast&amp;quot; means that something is very easy.
I eat punks like you for breakfast</description></item><item><title>The etymology of bombast</title><link>https://kinoshita.eti.br/2020/02/22/the-etymology-of-bombast.html</link><pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/02/22/the-etymology-of-bombast.html</guid><description>On &amp;ldquo;On Writing Well&amp;rdquo;, Zinsser wrote:
&amp;ldquo;There is a deep yearning for human contact and a resentment of bombast.&amp;rdquo;
I thought &amp;ldquo;bombast&amp;rdquo; would be related to the Portuguese word &amp;ldquo;bombástico&amp;rdquo;, which can mean something like fantastic, amazing.
Turns out it has a different meaning. Google defines it as:
high-sounding language with little meaning, used to impress people.
But it also an interesting etymology.
1570s, &amp;ldquo;cotton padding,&amp;rdquo; corrupted from earlier bombace &amp;ldquo;raw cotton&amp;rdquo; (1550s), from Old French bombace &amp;ldquo;cotton, cotton wadding,&amp;rdquo; from Late Latin bombacem, accusative of bombax &amp;ldquo;cotton, &amp;lsquo;linteorum aut aliae quaevis quisquiliae,&amp;rsquo; &amp;quot; a corruption and transferred use of Latin bombyx &amp;ldquo;silk,&amp;rdquo; from Greek bombyx &amp;ldquo;silk, silkworm&amp;rdquo; (which also came to mean &amp;ldquo;cotton&amp;rdquo; in Medieval Greek), from some oriental word, perhaps related to Iranian pambak (modern panba) or Armenian bambok, perhaps ultimately from a PIE root meaning &amp;ldquo;to twist, wind.</description></item><item><title>Science books and articles from Zinsser's "On Writing Well" book</title><link>https://kinoshita.eti.br/2020/01/02/science-books-and-articles-from-zinssers-on-writing-well-book.html</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2020/01/02/science-books-and-articles-from-zinssers-on-writing-well-book.html</guid><description>&lt;p>&lt;a href="https://www.amazon.com/Writing-Well-Classic-Guide-Nonfiction/dp/0060891548">&amp;ldquo;On Writing Well&amp;rdquo;&lt;/a>
is a book by &lt;a href="https://en.wikipedia.org/wiki/William_Zinsser">William Zinsser&lt;/a>, published for the first time in 1976 but
already past its seventeenth edition. It is extremely well written - as it was expected
for a book with such title - and also funny and simple to read.&lt;/p>
&lt;a href="https://kinoshita.eti.br/2020/04/04/lunar-vehicle.html">
&lt;img class="fluid" src="https://kinoshita.eti.br/assets/posts/2020-01-02-science-books-and-articles-from-zinssers-on-writing-well-book/lunar-vehicle.png" alt="A lunar vehicle">
&lt;/a>
&lt;p>The book is full of excerpts and quotes from other books and articles, used as good or bad examples.
In one of its chapters where Zinsser discusses writing about Science he lists
books and articles on the topic that were well written.&lt;/p>
&lt;p>This post contains books and articles mentioned on page 158 of the 2006 30th anniversary edition,
except for the last article written by Glenn Zorpette that was on another page - but still looked
interesting, so I decided to include it anyway.&lt;/p></description></item><item><title>A baby</title><link>https://kinoshita.eti.br/2019/12/30/a-baby.html</link><pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/12/30/a-baby.html</guid><description/></item><item><title>Experimenting with Vuejs and Cytoscape</title><link>https://kinoshita.eti.br/2019/11/19/experimenting-with-vuejs-and-cytoscape.html</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/11/19/experimenting-with-vuejs-and-cytoscape.html</guid><description>&lt;p>The project I work on at work had a GUI interface with Python and PyGTK, which is now being
ported to the web. We have adopted Vuejs as the JS framework, and have been building the
components required for our UI over the past months. The project is hosted
&lt;a href="https://github.com/cylc/cylc-ui">on GitHub&lt;/a> licensed under GPLv3.&lt;/p>
&lt;p>In Cylc 7, an important visualization was the workflow graph. The screen shot below is from
the design sketches done by another contributor from the UK, showing how it should look in
Cylc 8.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2019-11-19-experimenting-with-vuejs-and-cytoscape/cylc8-sketch.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>The first library we decided to try is Cytoscape, a well-known graph library, with use cases
in research, corporate, and other fields. One limitation of Cytoscape is that the way it renders
the graph nodes is limited.&lt;/p>
&lt;p>Limited, meaning that you won&amp;rsquo;t be able to easily add HTML, images, SVG, animation, etc. Though
not impossible.&lt;/p></description></item><item><title>Dynamic breadcrumbs with Vue Router nested routes and Vuetify Breadcrumb component</title><link>https://kinoshita.eti.br/2019/11/09/dynamic-breadcrumbs-with-vue-router-nested-routes-and-vuetify-breadcrumb-component.html</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/11/09/dynamic-breadcrumbs-with-vue-router-nested-routes-and-vuetify-breadcrumb-component.html</guid><description>&lt;p>Vue Router supports nested routes, which allow developers to create a hierarchical navigation structure.
This is handy if you want to create breadcrumbs based on this hierarchy dynamically.&lt;/p>
&lt;p>Here&amp;rsquo;s how you should create your nested routes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#000080;font-weight:bold">const&lt;/span> routes = [
{ path: &lt;span style="color:#00f">&amp;#39;/&amp;#39;&lt;/span>, component: { template: &lt;span style="color:#00f">`&amp;lt;h1&amp;gt;Home View&amp;lt;/h1&amp;gt;`&lt;/span> } },
{
path: &lt;span style="color:#00f">&amp;#39;/users&amp;#39;&lt;/span>,
component: {
render (c) {
&lt;span style="color:#000080;font-weight:bold">return&lt;/span> c(&lt;span style="color:#00f">&amp;#39;router-view&amp;#39;&lt;/span>)
}
},
meta: { breadCrumb: &lt;span style="color:#00f">&amp;#39;Users&amp;#39;&lt;/span> },
children: [
{
path: &lt;span style="color:#00f">&amp;#39;&amp;#39;&lt;/span>,
component: {
template: &lt;span style="color:#00f">`
&lt;/span>&lt;span style="color:#00f"> &amp;lt;div&amp;gt;
&lt;/span>&lt;span style="color:#00f"> &amp;lt;h1&amp;gt;Users View&amp;lt;/h1&amp;gt;
&lt;/span>&lt;span style="color:#00f"> &amp;lt;router-link to=&amp;#34;/users/1&amp;#34;&amp;gt;View User 1&amp;lt;/router-link&amp;gt;
&lt;/span>&lt;span style="color:#00f"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;span style="color:#00f"> `&lt;/span>
}
},
{
path: &lt;span style="color:#00f">&amp;#39;:id&amp;#39;&lt;/span>,
component: {
render (c) {
&lt;span style="color:#000080;font-weight:bold">return&lt;/span> c(&lt;span style="color:#00f">&amp;#39;router-view&amp;#39;&lt;/span>)
}
},
meta: { breadCrumb: &lt;span style="color:#00f">&amp;#39;View User&amp;#39;&lt;/span> },
children: [
{
path: &lt;span style="color:#00f">&amp;#39;&amp;#39;&lt;/span>,
component: {
template: &lt;span style="color:#00f">`
&lt;/span>&lt;span style="color:#00f"> &amp;lt;div&amp;gt;
&lt;/span>&lt;span style="color:#00f"> &amp;lt;h1&amp;gt;User View&amp;lt;/h1&amp;gt;
&lt;/span>&lt;span style="color:#00f"> &amp;lt;router-link to=&amp;#34;/users/1/edit&amp;#34;&amp;gt;Edit User&amp;lt;/router-link&amp;gt;
&lt;/span>&lt;span style="color:#00f"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;span style="color:#00f"> `&lt;/span>
}
},
{
path: &lt;span style="color:#00f">&amp;#39;edit&amp;#39;&lt;/span>,
component: {
template: &lt;span style="color:#00f">`&amp;lt;h1&amp;gt;Edit User&amp;lt;/h1&amp;gt;`&lt;/span>
},
meta: { breadCrumb: &lt;span style="color:#00f">&amp;#39;Edit User&amp;#39;&lt;/span> }
}
]
}
]
}
]
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Reddit r/functionalprogramming community</title><link>https://kinoshita.eti.br/2019/10/01/reddit-r/functionalprogramming-community.html</link><pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/10/01/reddit-r/functionalprogramming-community.html</guid><description>r/functionalprogramming was created nearly seven years ago. It started when I was interested in contributing to Apache Commons Functor.
I created it to have a place to collect links about functional programming. To my surprise there was no subreddit for functional programming. So I created one. Fast forward a few years, the community is still active, with a healthy group of nearly 10.000 readers and contributors.
Nowadays I spend something like 5 to 20 minutes everyday moderating posts.</description></item><item><title>Cylc videos</title><link>https://kinoshita.eti.br/2019/09/22/cylc-videos.html</link><pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/09/22/cylc-videos.html</guid><description>Last week I put together a playlist with all Cylc videos I could found on Youtube.
Clicking on the video above should open the YouTube playlist, with the next videos on the right. They are sorted from the newest to the oldest (upload date).</description></item><item><title>A look at the first implementation of GraphQL in Cylc</title><link>https://kinoshita.eti.br/2019/05/17/a-look-at-the-first-implementation-of-graphql-in-cylc.html</link><pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/05/17/a-look-at-the-first-implementation-of-graphql-in-cylc.html</guid><description>&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2019-05-17-a-look-at-the-first-implementation-of-graphql-in-cylc/fancy-hands2.png'
alt=''
title=''
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>For Cylc 8 we are adding an initial implementation of GraphQL, to replace the previous REST API.
Besides the technologies in the API&amp;rsquo;s, another difference is that for the REST API, its main
consumer was a PyGTK GUI.&lt;/p>
&lt;p>The new GraphQL API, on the other hand, will be used mainly by a Vue.js Web application. So a
few things need to be done in a different way due to the jump from Desktop GUI to Web GUI.&lt;/p></description></item><item><title>Running fuzzers to find bugs</title><link>https://kinoshita.eti.br/2019/04/07/running-fuzzers-to-find-bugs.html</link><pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/04/07/running-fuzzers-to-find-bugs.html</guid><description>&lt;p>Fuzzifying is a technique used in automated tests to find bugs in programs with unexpected data. fuzzer is the name given to the program used for running these tests. Some fuzzers also generate random data used for the tests.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2019-04-07-running-fuzzers-to-find-bugs/stink-bug-smaller.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>PyZMQ Basics - Part 1</title><link>https://kinoshita.eti.br/2019/03/30/pyzmq-basics-part-1.html</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/03/30/pyzmq-basics-part-1.html</guid><description>&lt;a href="https://www.deviantart.com/kinow/art/Old-man-1-657521623" style="float: left;">
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2019-03-30-pyzmq-basics-part-1/old-man-1.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>I am working &lt;a href="https://cylc.github.io">on a project&lt;/a> that is adopting &lt;a href="http://zeromq.org/">ZeroMQ&lt;/a>.
This post series is for self understanding of PyZMQ, a ZeroMQ
&lt;a href="https://github.com/zeromq/libzmq">&lt;code>libzmq&lt;/code>&lt;/a> binding for Python.&lt;/p>
&lt;h2 id="what-is-zeromq">What is ZeroMQ?&lt;/h2>
&lt;p>ZeroMQ (or 0MQ, or ØMQ) is an Open Source library that provides building blocks for
communication in distributed applications. The communication can be between the threads
of a process, between process (inter-process), or via network protocols such as
TCP and UDP.&lt;/p>
&lt;p>It is optimized for performance, and has been used in many applications, giving users
a solid foundation to be used in their projects.&lt;/p></description></item><item><title>Creating a logo in Inkscape - process</title><link>https://kinoshita.eti.br/2019/02/16/creating-a-logo-in-inkscape-process.html</link><pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2019/02/16/creating-a-logo-in-inkscape-process.html</guid><description>&lt;p>This weekend I spent some computer time not writing or reading code,
but actually toying around with Inkscape to create a logo. While it
created using very simple operations in Inkscape, it took me quite
a while to remember the shortcuts and how to merge objects.&lt;/p>
&lt;p>This logo is not actually used. It was an entry to a call for proposals.&lt;/p>
&lt;h3 id="the-process">The Process&lt;/h3>
&lt;p>This post won&amp;rsquo;t have much text. It will be more screen shots of the
process with short commentaire.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2019-02-16-creating-a-logo-in-inkscape-process/01.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>How the Skosmos Widget Wiki plugin works</title><link>https://kinoshita.eti.br/2018/12/24/how-the-skosmos-widget-wiki-plugin-works.html</link><pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/12/24/how-the-skosmos-widget-wiki-plugin-works.html</guid><description>&lt;p>Skosmos can be extended through plugins, or widgets (a widget is a plugin for Skosmos).
You can read more about how &lt;a href="https://github.com/NatLibFi/Skosmos/wiki/Plugins">plugins work in Skosmos here&lt;/a>.&lt;/p>
&lt;p>This post is a note-to-self, explaining how the &lt;strong>Skosmos Widget Wiki plugin&lt;/strong> works. This
is a plugin - or widget - that displays Wikipedia information when the concept supports it.&lt;/p>
&lt;p>Here&amp;rsquo;s an image of the plugin in action. Or you can go to
&lt;a href="http://finto.fi/yso-paikat/en/page/p107650">a live instance of Skosmos&lt;/a>
that has the plugin enabled.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-12-24-how-the-skosmos-widget-wiki-plugin-works/skosmos-widget-wiki-screenshot.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Running Cylc tasks on PBS Torque with Docker</title><link>https://kinoshita.eti.br/2018/12/22/running-cylc-tasks-on-pbs-torque-with-docker.html</link><pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/12/22/running-cylc-tasks-on-pbs-torque-with-docker.html</guid><description>&lt;p>A few days ago I saw &lt;a href="https://groups.google.com/forum/#!topic/cylc/dP2I1Gxqi20">a post&lt;/a> at the
Cylc Google Group, about file permissions for files generated by Cylc. The post was related to
content created by Cylc, but in an environment with PBS.&lt;/p>
&lt;p>For context, Cylc is an Open Source meta-scheduler, written in Python, that allows you to
define cycle points with dependencies. These cycle points can be simple incremental integer
numbers, or ISO8601 periods or points (e.g. run every 5 minutes, from 10 days ago until the
next year). Cylc takes care to create an execution schedule for you, and delegate that to a
system that runs your workflow. I work full time on this amazing Open Source tool!&lt;/p>
&lt;p>Such system could be the local computer in background, batch systems such as &lt;code>at&lt;/code>, or PBS.
PBS was created for NASA, to manage executing jobs taking into consideration cluster resources,
and also using queues, priorities, and other features useful for HPC programming. Later PBS
was acquired by Altair, an Open Source version OpenPBS was created, and later abandoned. And
there is another fork called PBS Torque. I first encountered PBS at the São Paulo
University, in Brazil, where they had a &lt;a href="http://www.usp.br/hpc/puma.php">PBS Torque cluster&lt;/a>.&lt;/p>
&lt;h3 id="running-pbs-torque-with-docker">Running PBS Torque with Docker&lt;/h3>
&lt;p>Even though I have access to an environment with Cylc and with PBS, I decided to give it a try
and see how hard it would be to reproduce it with Docker. One thing that I like about this
approach is the possibility to share the work with others online. I believe it improves
communication, agility, and can be useful for posterity.&lt;/p></description></item><item><title>What the weather forecast looks like in Sao Paulo, Brazil</title><link>https://kinoshita.eti.br/2018/10/25/what-the-weather-forecast-looks-like-in-sao-paulo-brazil.html</link><pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/10/25/what-the-weather-forecast-looks-like-in-sao-paulo-brazil.html</guid><description>&lt;p>I grew up watching the weather forecast in Sao Paulo, Brazil. Where it is
called “previsão do tempo”, which is the literal translation
in Portuguese.&lt;/p>
&lt;p>This post contains some recent screen shots of the weather forecast as it is
presented in one of the main TV channels, as well as some screenshots from an
online video of other local institutions that either provide the forecast, or
help running the NWP models.&lt;/p></description></item><item><title>A couple of class diagrams of JupyterHub</title><link>https://kinoshita.eti.br/2018/10/06/a-couple-of-class-diagrams-of-jupyterhub.html</link><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/10/06/a-couple-of-class-diagrams-of-jupyterhub.html</guid><description>&lt;p>Started on a new project last Monday. One of the tasks in this project involves a new design
for the Web layer. And as the application is quite similar to &lt;a href="https://jupyterhub.readthedocs.io/">JupyterHub&lt;/a>,
we are all learning more about its internal API and general system design.&lt;/p>
&lt;p>This post contains only two class diagrams created with PyCharm. One is actually a SQLAlchemy
ORM diagram, below.&lt;/p>
&lt;p style='text-align: center;'>
&lt;a href="https://kinoshita.eti.br/assets/posts{{page.path | remove: ".md" | remove: "_posts" }}/jupyterhub-sqlalchemy-graph.png">
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-10-06-a-couple-of-class-diagrams-of-jupyterhub/jupyterhub-sqlalchemy-graph.png'
alt=''
title=''
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;/a>
&lt;/p></description></item><item><title>Cylc Scheduler Internals - Part 3</title><link>https://kinoshita.eti.br/2018/08/18/cylc-scheduler-internals-part-3.html</link><pubDate>Sat, 18 Aug 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/08/18/cylc-scheduler-internals-part-3.html</guid><description>&lt;p>This is the part 3, in a series of posts about &lt;a href="https://cylc.github.io/cylc">Cylc&lt;/a>
internals. The [part 1]({% post_url 2018-07-14-cylc-scheduler-internals-part-1 %})
had the beginning of the workflow. [part 2]({% post_url 2018-07-27-cylc-scheduler-internals-part-2 %})
documented from the moment the method &lt;code>configure()&lt;/code> is called. This post will
continue right after the &lt;code>continue()&lt;/code> method returns, going on with the next method: &lt;code>run()&lt;/code>.&lt;/p>
&lt;p style='text-align: center;'>
&lt;a href="https://kinoshita.eti.br/assets/posts{{page.path | remove: ".md" | remove: "_posts" }}/cylc-scheduler_run.png">
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-08-18-cylc-scheduler-internals-part-3/cylc-scheduler_run.png'
alt=''
title=''
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;/a>
&lt;/p></description></item><item><title>Use of Logging in Java Image Processing libraries</title><link>https://kinoshita.eti.br/2018/08/12/use-of-logging-in-java-image-processing-libraries.html</link><pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/08/12/use-of-logging-in-java-image-processing-libraries.html</guid><description>&lt;p>For &lt;a href="https://issues.apache.org/jira/browse/IMAGING-154">IMAGING-154&lt;/a> I was trying to think in a solution
for the &lt;a href="https://github.com/apache/commons-imaging/blob/d2ec76bd10f30c39ae5180ede1254908e76045f0/src/main/java/org/apache/commons/imaging/util/Debug.java">existing &lt;code>Debug&lt;/code>&lt;/a>
class. This class was the issue of discussion during a
&lt;a href="https://markmail.org/thread/ak3hcka7piykxixz#query:+page:1+mid:ppgxbhjx3opqlixj+state:results">previous 1.0 release vote thread&lt;/a>.&lt;/p></description></item><item><title>UUID's in Apache Jena</title><link>https://kinoshita.eti.br/2018/08/11/uuids-in-apache-jena.html</link><pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/08/11/uuids-in-apache-jena.html</guid><description>&lt;p>In this post I won&amp;rsquo;t talk about what are UUID&amp;rsquo;s, or how they work in Java.
&lt;a href="https://www.baeldung.com/java-uuid">Here&lt;/a>&amp;rsquo;s a great article on that. Or access the always reliable &lt;a href="https://en.wikipedia.org/wiki/Universally_unique_identifier">Wikipedia article&lt;/a>
about it. &lt;em>(or if you would rather, read the &lt;a href="http://www.ietf.org/rfc/rfc4122.txt">RFC 4122&lt;/a>)&lt;/em>&lt;/p>
&lt;p>I found out that Jena had UUID implementations after writing a
[previous post]({% post_url 2018-05-29-what-happens-when-you-create-a-new-dataset-in-apache-jena-fuseki %}).
And then decided to look into which UUID&amp;rsquo;s Jena has, and where these UUID&amp;rsquo;s
were used. This way I would either understand why Jena needed UUID&amp;rsquo;s, or
just be more educated in case I ever stumbled with a change in Jena that
required related work.&lt;/p></description></item><item><title>Creating a Docker container to run as a command</title><link>https://kinoshita.eti.br/2018/08/04/creating-a-docker-container-to-run-as-a-command.html</link><pubDate>Sat, 04 Aug 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/08/04/creating-a-docker-container-to-run-as-a-command.html</guid><description>&lt;p>For the past two weeks at work I have been assigned to work on PHP projects. Though I used
PHP some time ago - especially with Code Igniter and Laravel - I have not used it in a few
years. And have been doing mostly Java nowadays.&lt;/p>
&lt;p>The complete project setup was done by co-workers. I had a PHP project, using Symfony, several
bundles and libraries, and Postgres. But it required just running a few commands to set up
AWS settings, and then fire up Docker Compose.&lt;/p></description></item><item><title>Cylc Scheduler Internals - Part 2</title><link>https://kinoshita.eti.br/2018/07/27/cylc-scheduler-internals-part-2.html</link><pubDate>Fri, 27 Jul 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/07/27/cylc-scheduler-internals-part-2.html</guid><description>&lt;p>This is part 2, in a series of posts about &lt;a href="https://cylc.github.io/cylc">Cylc&lt;/a>
internals. The [part 1]({% post_url 2018-07-14-cylc-scheduler-internals-part-1 %})
had the beginning of the workflow. And here we will have the continuation, from
the moment the method &lt;code>configure()&lt;/code> is called.&lt;/p>
&lt;p>&lt;em>NB: this is a post to remember things, not really expecting to give someone enough
information to be able to hack the Cylc Scheduler (though you can and would have fun!).&lt;/em>&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-07-27-cylc-scheduler-internals-part-2/cylc-scheduler_configure.png'
alt=''
title=''
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Multithreaded code and Pandas</title><link>https://kinoshita.eti.br/2018/07/22/multithreaded-code-and-pandas.html</link><pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/07/22/multithreaded-code-and-pandas.html</guid><description>&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-07-22-multithreaded-code-and-pandas/woman-looking-01.png'
alt='Woman looking'
title='Woman looking'
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>Woman looking&lt;/figcaption>
&lt;/figure>
&lt;p>Pandas provides high-performance data structures in Python. I think in Java there are
similar data structures in projects like Apache Commons Collections,
Google Guava, and also Trove.&lt;/p>
&lt;p>In the Java libraries thread-safety is always a must-have feature. Probably as it is quite
common for a Java program to have more than one thread, especially if the code runs in some
sort of web container.&lt;/p>
&lt;p>I recently learned that Pandas, on the other hand, does not guarantee any thread-safety.
I found that while reading an
&lt;a href="https://github.com/pandas-dev/pandas/issues/21150">issue about race condition in the &lt;code>IndexEngine&lt;/code>&lt;/a>,
and after preparing a pull request for that.&lt;/p></description></item><item><title>Cylc Scheduler Internals - Part 1</title><link>https://kinoshita.eti.br/2018/07/14/cylc-scheduler-internals-part-1.html</link><pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/07/14/cylc-scheduler-internals-part-1.html</guid><description>&lt;p>This is the first post in a series of three (or maybe four later) based on diagrams
I collected while debugging the Cylc scheduler. The scheduler is called by the &lt;code>cylc start&lt;/code>
utility.&lt;/p>
&lt;p>&lt;em>NB: this is a post to remember things, not really expecting to give someone enough
information to be able to hack the Cylc Scheduler (though you can and would have fun!).&lt;/em>&lt;/p>
&lt;p>Instead of going at length on what happens (and there is quite a bit happening when
you run &lt;code>cylc start my.suite&lt;/code>), I will use the following diagram, followed by a few paragraphs
to highlight certain parts. The code used was based on &lt;a href="https://github.com/cylc/cylc/tree/7.7.1">Cylc 7.7.1&lt;/a>.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-07-14-cylc-scheduler-internals-part-1/cylc-scheduler_cli-workflow.png'
alt=''
title=''
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>ImportError when debugging cylc in Eclipse</title><link>https://kinoshita.eti.br/2018/07/10/importerror-when-debugging-cylc-in-eclipse.html</link><pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/07/10/importerror-when-debugging-cylc-in-eclipse.html</guid><description>&lt;p>Since I started reading cylc&amp;rsquo;s source code in Eclipse to create some
sequence diagrams, I have not been able to debug it properly without
hitting errors in some part of the program execution.&lt;/p>
&lt;p>The error message was &lt;strong>_“ImportError: cannot import name &lt;em>remove_dead_weakref”&lt;/em>&lt;/strong>,
which was a bit enigmatic as I never heard about that function, but it seemed to be
something internal, or at least not from the project code base. And searching the Internet
did not help much.&lt;/p></description></item><item><title>A simple cylc suite</title><link>https://kinoshita.eti.br/2018/07/08/a-simple-cylc-suite.html</link><pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/07/08/a-simple-cylc-suite.html</guid><description>&lt;p>I have been writing more suites for &lt;a href="https://cylc.github.io/cylc/">cylc&lt;/a> lately, and found
an example that has proved to be useful for debugging certain parts of the code.&lt;/p>
&lt;p>It is an extremely simple suite, similar to what is in cylc&amp;rsquo;s documentation. It
sleeps for N seconds, and prints a message.&lt;/p></description></item><item><title>What happens when you upload a Turtle file in Apache Jena Fuseki</title><link>https://kinoshita.eti.br/2018/05/27/what-happens-when-you-upload-a-turtle-file-in-apache-jena-fuseki.html</link><pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/05/27/what-happens-when-you-upload-a-turtle-file-in-apache-jena-fuseki.html</guid><description>I am working on an issue for Skosmos that involves preparing some Turtle files and uploading them using Apache Jena Fuseki&amp;rsquo;s web interface.
The issue is now pending feedback, which gives me a moment to have fun with something else. So I decided to dig down the rabbit hole and start learning more about certain parts of the Apache Jena code base.
This post will be useful to myself in the future, as a note-taking in a series, so that I remember how things work - you never know right?</description></item><item><title>Drawing Santos Dumont's "Encantada" in Krita</title><link>https://kinoshita.eti.br/2018/05/13/drawing-santos-dumonts-encantada-in-krita.html</link><pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/05/13/drawing-santos-dumonts-encantada-in-krita.html</guid><description>&lt;p>With Krita 4.x released, and the &lt;a href="https://forum.kde.org/viewtopic.php?f=277&amp;amp;t=152338&amp;amp;p=398403#p398403">Krita monthly challenge&lt;/a>
of May still open for submission, I decided to give it a go and try this new version to create
an artwork to for the challenge. The topic of this month&amp;rsquo;s challenge is &lt;strong>Home&lt;/strong>.&lt;/p>
&lt;p>My submission was &lt;a href="https://www.google.co.nz/maps/place/Casa+de+Santos+Dumont/@-22.5103512,-43.1864205,17z/data=!3m1!4b1!4m5!3m4!1s0x70145eaee05ea9b:0x33f52a8860f58db9!8m2!3d-22.5103562!4d-43.1842318">Santos Dumont&amp;rsquo;s house in Petropolis, Rio de Janeiro&lt;/a>, called
&lt;a href="(https://en.wikipedia.org/wiki/Alberto_Santos-Dumont#A_Encantada)">&lt;em>Encantada&lt;/em>&lt;/a>.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2018-05-13-drawing-santos-dumonts-encantada-in-krita/side-by-side.jpg'
alt='Line art'
title='Line art'
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>Line art&lt;/figcaption>
&lt;/figure></description></item><item><title>Learning more about SPARQL and Jena internals</title><link>https://kinoshita.eti.br/2018/04/28/learning-more-about-sparql-and-jena-internals.html</link><pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/04/28/learning-more-about-sparql-and-jena-internals.html</guid><description>O Corvo O Corvo Recently a pull request for Apache Jena that I started three years ago got merged. Even though it has been three years since that pull request, there are still many parts of the project code base that I am not familiar with.
And not only the code, but there are also many concepts about SPARQL, other standards used in Jena, and internals about triple stores.</description></item><item><title>R Shiny + Ansible = shiny.nzoss.org.nz</title><link>https://kinoshita.eti.br/2018/02/03/r-shiny-ansible-shiny.nzoss.org.nz.html</link><pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2018/02/03/r-shiny-ansible-shiny.nzoss.org.nz.html</guid><description>R Shiny + Ansible = shiny.nzoss.org.nz
Event R Shiny + Ansible = shiny.nzoss.org.nz Where ? Auckland, New Zealand When ? 2018-02-08</description></item><item><title>Exif Odd Offsets</title><link>https://kinoshita.eti.br/2017/12/25/exif-odd-offsets.html</link><pubDate>Mon, 25 Dec 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/12/25/exif-odd-offsets.html</guid><description>A file format like JPEG may contain metadata in JFIF, Exif, or a vendor proprietary format. The Exif format is based - or uses parts of - on the TIFF format.
Within an Exif metadata block, you should see directories, with several entries. The entries have fields like description, value, and also an offset. The offset indicates the offset to the next entry.
The Exif specification defines that implementers must make sure to keep the offset an even number, within 4 bytes.</description></item><item><title>Remember to synchronize when iterating streams from a synchronized Collection</title><link>https://kinoshita.eti.br/2017/12/03/remember-to-synchronize-when-iterating-streams-from-a-synchronized-collection.html</link><pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/12/03/remember-to-synchronize-when-iterating-streams-from-a-synchronized-collection.html</guid><description>When iterating collections created via Collections.synchronizedList for instance, you are required to obtain a lock on the actual list before doing so. So you normally end up with code similar to:
List list = Collections.synchronizedList(new ArrayList()); synchronized (list) { Iterator i = list.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } This requirement is documented in the javadocs.
Since lambdas and streams are being more widely used, it is important to remind that when iterating via a stream we also need to obtain a lock on the synchronized collection created.</description></item><item><title>Watch out for Locales when using NumberFormat with currencies</title><link>https://kinoshita.eti.br/2017/12/02/watch-out-for-locales-when-using-numberformat-with-currencies.html</link><pubDate>Sat, 02 Dec 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/12/02/watch-out-for-locales-when-using-numberformat-with-currencies.html</guid><description>In Java you have the NumberFormatException to help you formatting and parsing numbers for any locale. Said that, here&amp;rsquo;s some code.
BigDecimal negative = new BigDecimal(&amp;#34;-1234.56&amp;#34;); DecimalFormat nf = (DecimalFormat) NumberFormat.getCurrencyInstance(Locale.UK); String formattedNegative = nf.format(negative); System.out.println(formattedNegative); The output for this code is -£1,234.56. That&amp;rsquo;s expected, as the locale is set to UK, so the currency symbol used is for British Pounds. And as the number is negative, you get that minus sign as a prefix.</description></item><item><title>What Are Identification Keys</title><link>https://kinoshita.eti.br/2017/12/01/what-are-identification-keys.html</link><pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/12/01/what-are-identification-keys.html</guid><description>In biology, an identification key is a printed or computer-aided device that aids the identification of biological entities, such as plants, animals, fossils, microorganisms, and pollen grains. Identification keys are also used in many other scientific and technical fields to identify various kinds of entities, such as diseases, soil types, minerals, or archaeological and anthropological artifacts
When you work writing software, it is common that at one point or another of the product development you will work with a SME, or subject-matter expert.</description></item><item><title>Using formatter exclusions with Eclipse</title><link>https://kinoshita.eti.br/2017/11/06/using-formatter-exclusions-with-eclipse.html</link><pubDate>Mon, 06 Nov 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/11/06/using-formatter-exclusions-with-eclipse.html</guid><description>Sometimes when you are formatting your code in Eclipse, you may want to prevent some parts of the code from being formatted. Especially when using Java 8 lambdas and optionals.
Here&amp;rsquo;s some code before being formatted by Eclipse&amp;rsquo;s default formatter rules.
Code adapted from: blog post Java d&amp;rsquo;eau ‐ Java 8: Streams in Hibernate and Beyond
session.createQuery(&amp;#34;SELECT h FROM Hare h&amp;#34;, Hare.class) .stream() .filter(h -&amp;gt; h.getId() == 1) .map(Hare::getName) .forEach(System.out::println); Then after formatting.</description></item><item><title>Quickly Verifying jar Signatures For ASF Releases</title><link>https://kinoshita.eti.br/2017/10/14/quickly-verifying-jar-signatures-for-asf-releases.html</link><pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/10/14/quickly-verifying-jar-signatures-for-asf-releases.html</guid><description>The release process within the Apache Software Foundation includes a series of steps. Amongst these steps is the voting process. In Apache Commons, the release instructions includes a note on artefact signatures.
During the course of the VOTE, make sure that one or more of the reviewers have verified the signatures and hash files included with the release artifacts. If no one specifically mentions having done that during the VOTE, ask on the dev list and make sure someone does this before you proceed with the release.</description></item><item><title>Removing Javadoc SVN Id Tags with Shell Script</title><link>https://kinoshita.eti.br/2017/09/13/removing-javadoc-svn-id-tags-with-shell-script.html</link><pubDate>Wed, 13 Sep 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/09/13/removing-javadoc-svn-id-tags-with-shell-script.html</guid><description>Subversion supports Keyword Substitution, which performs substitution of some keywords such as Author, Date, and Id. The Id is the date, time, and user that last modified the file.
It used to be common to all Apache Commons components to have a line as follows in the header of each Java class.
/** * SomeClass class. * * @version $Id$ */ public class SomeClass { } Then the generated Javadoc would contain the date of when the class was altered.</description></item><item><title>Enabling Markdown Extension Tables For Piecrust</title><link>https://kinoshita.eti.br/2017/09/09/enabling-markdown-extension-tables-for-piecrust.html</link><pubDate>Sat, 09 Sep 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/09/09/enabling-markdown-extension-tables-for-piecrust.html</guid><description>PieCrust is a Python static site generator. It allows users to write content in Markdown. But if you try adding a table, the content by default will be generated as plain text.
You have to enable Markdown extension tables. PieCrust will load it when creating the Markdown instance.
# config.ymlmarkdown:extensions:- tablesEt, voilà! Happy blogging!
♥ Open Source</description></item><item><title>Finding Base64 implementations in Apache Software Foundation projects</title><link>https://kinoshita.eti.br/2017/09/01/finding-base64-implementations-in-apache-software-foundation-projects.html</link><pubDate>Fri, 01 Sep 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/09/01/finding-base64-implementations-in-apache-software-foundation-projects.html</guid><description>NZ Grey Warbler (riroriro) New Zealand Grey Warbler (riroriro) Some time ago while working in one of the many projects in the Apache Software Foundation (Apache Commons FileUpload if I remember well), I noticed that it had a Base64 implementation. What called my attention was that the project not using the Apache Commons Codec Base64 implementation.
While Apache Commons' mission is to create components that can be re-used across ASF projects, and also by other projects not necessarily under the ASF, it is understandable that some projects prefer to keep its dependencies to a minimum.</description></item><item><title>Two other Maven Plug-ins: impsort and deptools</title><link>https://kinoshita.eti.br/2017/08/12/two-other-maven-plug-ins-impsort-and-deptools.html</link><pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/08/12/two-other-maven-plug-ins-impsort-and-deptools.html</guid><description>Last [week I wrote]({% post_url 2017-08-06-checking-for-transitive-dependencies-use-with-maven-enforcer-plugin %}) about the ImmobilienScout24/illegal-transitive-dependency-check rule for Maven Enforcer Plug-in. There are two other Maven Plug-ins that can be useful.
mbknor/deptools The mbknor/deptools is another rule for the Maven Enforcer Plug-in. It will scan your project dependency tree, looking for transitive dependencies. Whenever it finds a transitive dependency, it will keep track of the versions. And if, because of the way your dependencies and transitive dependencies are organised, you end up with a version that is not the newest, the build will fail.</description></item><item><title>Checking for transitive dependencies use with Maven Enforcer Plug-in</title><link>https://kinoshita.eti.br/2017/08/06/checking-for-transitive-dependencies-use-with-maven-enforcer-plug-in.html</link><pubDate>Sun, 06 Aug 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/08/06/checking-for-transitive-dependencies-use-with-maven-enforcer-plug-in.html</guid><description>Maven Enforcer Plug-in “provides goals to control certain environmental constraints such as Maven version, JDK version and OS family along with many more built-in rules and user created rules”. There are several libraries that provide custom rules, or you can write your own.
One of these libraries is ImmobilienScout24/illegal-transitive-dependency-check, “an additional rule for the maven-enforcer-plugin that checks for classes referenced via transitive Maven dependencies”.
With the following example:
&amp;lt;project&amp;gt; ... &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>My favourite Star Trek captain: Jean-Luc Picard</title><link>https://kinoshita.eti.br/2017/08/03/my-favourite-star-trek-captain-jean-luc-picard.html</link><pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/08/03/my-favourite-star-trek-captain-jean-luc-picard.html</guid><description>My favourite Star Trek captain: Jean-Luc Picard.
&amp;ldquo;Space, the final frontier. These are the voyages of the starship Enterprise. Its continuing mission: to explore strange new worlds, to seek out new life and new civilizations, to boldly go where no one has gone before!&amp;rdquo; Jean-Luc Picard Jean-Luc Picard 2B pencil, rubber eraser, blending stump, and HB 0.3 mechanical pencil. Yellow-ish layer added adjusting LAB colour space in GIMP.</description></item><item><title>SciCo 2017: An Introduction to the International Image Interoperability Framework (IIIF)</title><link>https://kinoshita.eti.br/2017/07/21/scico-2017-an-introduction-to-the-international-image-interoperability-framework-iiif.html</link><pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/07/21/scico-2017-an-introduction-to-the-international-image-interoperability-framework-iiif.html</guid><description>An Introduction to the International Image Interoperability Framework (IIIF)
Event Science Coding Conference 2017 Where ? Wellington, New Zealand When ? 2017-08-04</description></item><item><title>Drawing Archer</title><link>https://kinoshita.eti.br/2017/06/27/drawing-archer.html</link><pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/06/27/drawing-archer.html</guid><description>Archer, from redditgetsdrawn.
Archer drawing Archer photo Simplified and changed her angle. On DeviantArt too.</description></item><item><title>How to remove the signature from e-mails with NLP?</title><link>https://kinoshita.eti.br/2017/06/14/how-to-remove-the-signature-from-e-mails-with-nlp.html</link><pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/06/14/how-to-remove-the-signature-from-e-mails-with-nlp.html</guid><description>Some time ago I stumbled across EmailParser, a Python utility to remove e-mail signatures. Here&amp;rsquo;s a sample input e-mail from the project documentation.
Wendy – thanks for the intro! Moving you to bcc. Hi Vincent – nice to meet you over email. Apologize for the late reply, I was on PTO for a couple weeks and this is my first week back in office. As Wendy mentioned, I am leading an AR/VR taskforce at Foobar Retail Solutions.</description></item><item><title>Backward compatibility and switch statement with constant expressions</title><link>https://kinoshita.eti.br/2017/06/10/backward-compatibility-and-switch-statement-with-constant-expressions.html</link><pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/06/10/backward-compatibility-and-switch-statement-with-constant-expressions.html</guid><description>Maintaining Open Source software can be challenging. Making sure you keep backward compatibility (not only binary) can be even more challenging. Apache Commons Lang 3.6 release is happening right now thanks to Benedikt Ritter, and it is on its fourth Release Candidate (i.e. RC4).
A previous RC2 was cancelled due to IBM JDK 8 compatibility, more specifically the lazy initialization of ArrayList&amp;rsquo;s seems to be different in Oracle JDK and IBM JDK.</description></item><item><title>Natural Language Processing and Natural Language Understanding</title><link>https://kinoshita.eti.br/2017/06/03/natural-language-processing-and-natural-language-understanding.html</link><pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/06/03/natural-language-processing-and-natural-language-understanding.html</guid><description>I used Natural Language Processing (NLP) tools in a few projects in the past years. But only recently, while involved with a chatbot project, I noticed the term Natural Language Understanding (NLU).
NLU can be seen as a subfield of NLP. NLP englobes all techniques used for parsing text and extracting some knowledge about it. It could be finding out what are the common entities in the text, calculating the likelihood of a certain word being a preposition or a verb, sentiment analysis, or even spell checking sentences.</description></item><item><title>Securely using passwords with R</title><link>https://kinoshita.eti.br/2017/06/03/securely-using-passwords-with-r.html</link><pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/06/03/securely-using-passwords-with-r.html</guid><description>It is quite common to have code that needs to interact with another system, database, or third party application, and need to use some sort of credentials to securely communicate.
Most of the code I wrote in R, or reviewed, had normally no borders (from a system analysis perspective) with other systems, or basically just interacted with the file system to retrieve NetCDF or JSON files.
However, after I saw a comment in Reddit [1] some time ago about this, I decided to check what others used.</description></item><item><title>Apache Commons Text LookupTranslator</title><link>https://kinoshita.eti.br/2017/06/02/apache-commons-text-lookuptranslator.html</link><pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/06/02/apache-commons-text-lookuptranslator.html</guid><description>Apache Commons Text includes several algorithms for text processing. Today&amp;rsquo;s post is about one of the classes available since the 1.0 release, the LookupTranslator.
It is used to translate text using a lookup table. Most users won&amp;rsquo;t necessarily be - knowingly - using this class. Most likely, they will use the StringEscapeUtils, which contains methods to escape and unescape CSV, JSON, XML, Java, and EcmaScript.
String original = &amp;#34;He didn&amp;#39;t say, \&amp;#34;stop!</description></item><item><title>Some links related to Apache Commons Text</title><link>https://kinoshita.eti.br/2017/05/28/some-links-related-to-apache-commons-text.html</link><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/05/28/some-links-related-to-apache-commons-text.html</guid><description>Apache Commons Text is one of the most recent new components in Apache Commons. It &amp;ldquo;is a library focused on algorithms working on strings&amp;rdquo;. I recently collected some links under a bookmark folder that are in some way related to the project. In case you are interested, check some of the links below.
Morgan Wahl Text is More Complicated Than You Think Comparing and Sorting Unicode PyCon 2017 Q: test [text] to check if our methods are OK with some examples in this talk) Q: Canonical Decomposition, and code points comparisons; are we doing it?</description></item><item><title>When you don't realize you need a Comparable</title><link>https://kinoshita.eti.br/2017/05/15/when-you-dont-realize-you-need-a-comparable.html</link><pubDate>Mon, 15 May 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/05/15/when-you-dont-realize-you-need-a-comparable.html</guid><description>&lt;p>[In 2012, I wrote]({% post_url 2012-10-20-replacing-a-hashset-with-a-bitset %}) about how you always learn something
new by following the &lt;a href="http://www.apache.org/foundation/mailinglists.html">Apache dev mailing lists&lt;/a>.&lt;/p>
&lt;p>After about five years, I am still learning, and still getting impressed by the knowledge of other
developers. Days ago I was massaging some code in &lt;a href="https://github.com/apache/jena/pull/237">a pull request&lt;/a>
and a developer suggested me to simplify my code.&lt;/p></description></item><item><title>Drawing sketch: Page 036</title><link>https://kinoshita.eti.br/2017/04/24/drawing-sketch-page-036.html</link><pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/04/24/drawing-sketch-page-036.html</guid><description>Page 036 Almost ANZAC day. And almost time to switch back to coding Jenkins plug-ins.
Normally sketch more in-between development cycles for Open Source projects, or contract works.
Krill: Krill are small crustaceans of the order Euphausiacea, and are found in all the world&amp;rsquo;s oceans. The name krill comes from the Norwegian word krill, meaning &amp;ldquo;small fry of fish&amp;rdquo;, which is also often attributed to species of fish. Tui: Tui are boisterous, medium-sized, common and widespread bird of forest and suburbia – unless you live in Canterbury.</description></item><item><title>Apache OpenNLP Logo</title><link>https://kinoshita.eti.br/2017/04/21/apache-opennlp-logo.html</link><pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/04/21/apache-opennlp-logo.html</guid><description>This project was completed combining an idea of Koji Sekiguchi.
Logo created in Inkscape for a project that uses natural language processing. The idea was to create something related with text, that was easy to regognzie, and could be used in the website, promotional material, favicon, etc.
The Apache Software Foundation symbol is a feather, which we used as a writing feather in the logo. That combined with the letters NLP create an image that is easy to recognize.</description></item><item><title>Troubleshooting a Jenkins Plug-in compatibility issue</title><link>https://kinoshita.eti.br/2017/04/17/troubleshooting-a-jenkins-plug-in-compatibility-issue.html</link><pubDate>Mon, 17 Apr 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/04/17/troubleshooting-a-jenkins-plug-in-compatibility-issue.html</guid><description>This post is probably different from others. I will give a TL;DR, but will then give you a copy of a comment of a Jenkins JIRA issue. Hope you have fun reading it, specially if you maintain Jenkins servers or plug-ins.
TL;DR: there was an issue in Jenkins Job DSL Plug-in, that caused jobs created to have an invalid script. The fix had not been released, but was already in the master branch in GitHub.</description></item><item><title>Spring Cloud encrypted values and Spring PropertySources</title><link>https://kinoshita.eti.br/2017/04/14/spring-cloud-encrypted-values-and-spring-propertysources.html</link><pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/04/14/spring-cloud-encrypted-values-and-spring-propertysources.html</guid><description>As I could not find any documentation for that, I decided to write it as a note to myself in case I use the encryption and decryption with Spring Cloud again.
In Spring and Spring Boot, you normally have multiple sources of properties, like multiple properties files, environment properties and variables, and so it goes. In the Spring API, these are represented as PropertySource&amp;rsquo;s.
In a Spring Boot application, you would be used to overriding certain properties by defining environments and using an application-production.</description></item><item><title>Writing a binary parser in Python: NumPy vs. Construct</title><link>https://kinoshita.eti.br/2017/04/14/writing-a-binary-parser-in-python-numpy-vs.-construct.html</link><pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/04/14/writing-a-binary-parser-in-python-numpy-vs.-construct.html</guid><description>Some time ago I worked with researchers to write a parser for an old data format. The data was generated by device (radiosonde) using the vendor (Vaisala) specific binary format.
One of the researchers told me someone had written a parser for his work, and shared it on GitHub. To be honest, that was my first time parsing data in binary with Python. Did that before with C, C++, Perl, and Java, but never with Python.</description></item><item><title>Fixing Qt warning "QLayout: Attempting to add QLayout "" to QWidget "", which already has a layout"</title><link>https://kinoshita.eti.br/2017/04/02/fixing-qt-warning-qlayout-attempting-to-add-qlayout-to-qwidget-which-already-has-a-layout.html</link><pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/04/02/fixing-qt-warning-qlayout-attempting-to-add-qlayout-to-qwidget-which-already-has-a-layout.html</guid><description>If you ever started Krita 3.x in your command line, and had a look at the console output, you may noticed the following warning.
QLayout: Attempting to add QLayout &amp;quot;&amp;quot; to QWidget &amp;ldquo;&amp;rdquo;, which already has a layout
Krita recently announced the release of 3.1.3-alpha-2, and while testing I saw this warning and decided to investigate why this warning happens.
There was already a similar question posted on StackOverflow.</description></item><item><title>Simulating less memory with ulimit</title><link>https://kinoshita.eti.br/2017/03/26/simulating-less-memory-with-ulimit.html</link><pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/03/26/simulating-less-memory-with-ulimit.html</guid><description>These days I was trying to reproduce a bug in Krita where it would crash when a user copied group layers between windows. It appeared that the user was getting a segmentation fault due to the user&amp;rsquo;s computer running out of memory.
I could not reproduce the issue, but my computer has 16 GB. The first thing that came to my mind was to create a virtual machine with less memory to reproduce the issue.</description></item><item><title>Using Google Natural Language API in an AWS Elastic Beanstalk application</title><link>https://kinoshita.eti.br/2017/03/15/using-google-natural-language-api-in-an-aws-elastic-beanstalk-application.html</link><pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/03/15/using-google-natural-language-api-in-an-aws-elastic-beanstalk-application.html</guid><description>Besides providing an API for users and developers, Google also provides a series of (very well-written) client implementation, in several programming languages. That&amp;rsquo;s the case for Google Storage, Google Vision, and for Google Natural Language API&amp;rsquo;s.
I recently had to use the latter in a POC at work, and ran into an interesting issue with our AWS Elastic Beanstalk environment.
Google Language API requires that clients authenticate before sending requests. If you use their google-cloud-java, you can define the GOOGLE_APPLICATION_CREDENTIALS.</description></item><item><title>Order of containers in Docker Compose</title><link>https://kinoshita.eti.br/2017/03/14/order-of-containers-in-docker-compose.html</link><pubDate>Tue, 14 Mar 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/03/14/order-of-containers-in-docker-compose.html</guid><description>In Docker Compose you are able to control the startup order of the containers via the depends_on statement. This is documented in Controlling startup order in Compose.
If you have a simple setup, with Tomcat and Postgres, sometimes Postgres will start first, but Compose will initialize Tomcat before Postgres has fully booted. When that happens, you may receive 401, 404, or other application errors.
You can fix it by combining depends_on with a healthcheck.</description></item><item><title>Using AWS MFA without a mobile phone</title><link>https://kinoshita.eti.br/2017/02/28/using-aws-mfa-without-a-mobile-phone.html</link><pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/02/28/using-aws-mfa-without-a-mobile-phone.html</guid><description>If you use AWS, the chances are that you use MFA - Multi-factor Authentication - to authenticate. I don&amp;rsquo;t like to install apps in my mobile phone, unless I need to, so having bought a new phone recently, I decided to find a replacement for Google Authenticator.
There are several command line utilities, browser extensions, libraries, and tools (free and paid) that implement the TOTP - time-based one-time password -, the standard required by Amazon for MFA authentication.</description></item><item><title>Proposed logos for OpenNLP</title><link>https://kinoshita.eti.br/2017/01/15/proposed-logos-for-opennlp.html</link><pubDate>Sun, 15 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/15/proposed-logos-for-opennlp.html</guid><description>A couple of logos submitted to OPENNLP-6. Made with Inkscape, fonts from Google Fonts.
Proposed logos for OpenNLP For more, check out my DeviantArt page.</description></item><item><title>Drawing Cave</title><link>https://kinoshita.eti.br/2017/01/13/drawing-cave.html</link><pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/13/drawing-cave.html</guid><description> Cave</description></item><item><title>Apache Commons Lang: Memoizer</title><link>https://kinoshita.eti.br/2017/01/08/apache-commons-lang-memoizer.html</link><pubDate>Sun, 08 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/08/apache-commons-lang-memoizer.html</guid><description>The current release of Apache Commons Lang is 3.5. The upcoming release, probably 3.6, will include a new feature, added in a pull request: a Memoizer implementation. Check out the ticket LANG-740 for more about the implementation being added to [lang].
The book Java Concurrency in Practice introduces readers to the Memoizer, and has also a public domain implementation available for download (besides that, the book has also lots of other interesting topics!</description></item><item><title>Apache Commons Text</title><link>https://kinoshita.eti.br/2017/01/07/apache-commons-text.html</link><pubDate>Sat, 07 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/07/apache-commons-text.html</guid><description>There is a new component in Apache Commons: Apache Commons Text. The 1.0 release might be announced in the next weeks. The current site is still in the Commons Sandbox, but it will change with the 1.0 release. The promotion from the sandbox happened a few days ago in the project mailing list.
Here&amp;rsquo;s the project description: Apache Commons Text is a library focused on algorithms working on strings.
There was a thread on the mailing list some time ago (Oct/2014) when we first discussed the component idea.</description></item><item><title>Plotting Auckland with OSMnx</title><link>https://kinoshita.eti.br/2017/01/05/plotting-auckland-with-osmnx.html</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/05/plotting-auckland-with-osmnx.html</guid><description>&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2017-01-05-plotting-auckland-with-osmnx/figure_1.png'
alt='Auckland'
title='Auckland'
style='ZgotmplZ'
width=''
height=''
/>
&lt;figcaption>Auckland&lt;/figcaption>
&lt;/figure>
&lt;p>A couple of days ago I saw &lt;a href="https://www.reddit.com/r/gis/comments/5lnjxs/creating_squaremile_figureground_diagrams_of/">a thread in reddit&lt;/a>
about OSMnx. It is a utilty for interacting with the OpenStreeMap (OSM)
API, manipulate it in pure Python and using libraries like NetworkX (a Python graph package).&lt;/p>
&lt;p>With it you can do things like &lt;q>visualize cul-de-sacs or one-way streets, plot shortest-path routes, or calculate stats like intersection density, average node connectivity, or betweenness centrality&lt;/q>. Or simply
plot the OSM data as in the graph above.&lt;/p>
&lt;p>The source code is hosted at GitHub: &lt;a href="https://github.com/gboeing/osmnx">https://github.com/gboeing/osmnx&lt;/a>.&lt;/p></description></item><item><title>Drawing Terra Celta vocal Elcio</title><link>https://kinoshita.eti.br/2017/01/04/drawing-terra-celta-vocal-elcio.html</link><pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/04/drawing-terra-celta-vocal-elcio.html</guid><description>Terra Celta band&amp;rsquo;s vocal, Elcio.
Brazil is not only Samba, there is (good) celtic music in there too :-)
Terra Celta ("Celtic Land") is a Brazilian Celtic comedy rock band formed in 2005, and based in Londrina, Paran&amp;aacute;. They are noted for making Celtic rock in Portuguese language (initially English), with often humorous lyrics. The group performs live with traditional Celtic/Irish clothing. Besides performing Irish music, the members also research the subject, by attending Celtic music festivals in Europe.</description></item><item><title>Contributing to Krita</title><link>https://kinoshita.eti.br/2017/01/03/contributing-to-krita.html</link><pubDate>Tue, 03 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/03/contributing-to-krita.html</guid><description>As I mentioned in the [last post]({% post_url 2017-01-02-debugging-an-application-that-freezes-the-x-server %}), I have been learning Qt and using C and C++ again. Since I used C and C++ more during university (about 10 years ago, phew), decided to read real code.
I used Photoshop, Illustrator, and Fireworks a lot when I was younger and had more time to spend drawing. But some time ago I switched to Inkscape for vector graphics, which I use at work for presentations.</description></item><item><title>Debugging an application that freezes the X server</title><link>https://kinoshita.eti.br/2017/01/02/debugging-an-application-that-freezes-the-x-server.html</link><pubDate>Mon, 02 Jan 2017 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2017/01/02/debugging-an-application-that-freezes-the-x-server.html</guid><description>Some time ago, I decided to start writing C++ again, and picked Krita for that. Krita is written in C++ and Qt. The bug I was working on involved a memory issue when changing the UI.
The problem was that this UI change would result in, not only Krita, but the whole X server freezing. My set up was basically Ubuntu 16.04.1 LTS, with Eclipse, Qt5, and the latest version of Krita checked out via git.</description></item><item><title>Drawing sketch: Uh!</title><link>https://kinoshita.eti.br/2016/12/19/drawing-sketch-uh.html</link><pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/12/19/drawing-sketch-uh.html</guid><description>Sketch.
And final work here.
For redditgetsdrawn</description></item><item><title>PermGen errors and java.lang.ClassCastException: com.sun.crypto.provider.AESCipher cannot be cast to javax.crypto.CipherSpi running Jenkins plug-in tests with PowerMock</title><link>https://kinoshita.eti.br/2016/12/19/permgen-errors-and-java.lang.classcastexception-com.sun.crypto.provider.aescipher-cannot-be-cast-to-javax.crypto.cipherspi-running-jenkins-plug-in-tests-with-powermock.html</link><pubDate>Mon, 19 Dec 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/12/19/permgen-errors-and-java.lang.classcastexception-com.sun.crypto.provider.aescipher-cannot-be-cast-to-javax.crypto.cipherspi-running-jenkins-plug-in-tests-with-powermock.html</guid><description>Recently while working on a Jenkins plugin some tests were failing with PermGen errors. Even though it worked in my notebook at home (with Java 8, thus no Permgen), it failed in a CloudBees hosted Jenkins job, and also on my Mac (with Java 7) at work.
As I could not change the settings in the CloudBees hosted Jenkins, I decided to spent some time investigating why these tests would require so much memory.</description></item><item><title>Using Requests Session Objects for web scraping</title><link>https://kinoshita.eti.br/2016/11/25/using-requests-session-objects-for-web-scraping.html</link><pubDate>Fri, 25 Nov 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/11/25/using-requests-session-objects-for-web-scraping.html</guid><description>I had to write a Python script some months ago, that would retrieve Solar energy data from a web site. It was basically a handful of HTTP calls, parse the response that was mainly in JSON, and store the results as JSON and CSV for processing later.
Since it was such a small task, I used the Requests module instead of a complete web scraper. The HTTP requests had to be made with a time out, and also pass certain headers.</description></item><item><title>Changing Spring Boot environment variables in the command line</title><link>https://kinoshita.eti.br/2016/11/21/changing-spring-boot-environment-variables-in-the-command-line.html</link><pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/11/21/changing-spring-boot-environment-variables-in-the-command-line.html</guid><description>This week while helping developers and testers to experiment with a backend application, some of them found useful to learn a simple trick to change Spring Boot properties when you can run the application locally (our testers build, compile, change the code, how cool is that?).
Here&amp;rsquo;s how it works. Say you have the following settings in your application&amp;rsquo;s application.properties:
my.application.database.username=sa my.application.database.password=notasimplepassword And that you want to change these parameters in order to, for instance, create an application error, so that you can code and test what happens to the frontend application in that situation.</description></item><item><title>Add a header to a file with Shell script (sed)</title><link>https://kinoshita.eti.br/2016/11/12/add-a-header-to-a-file-with-shell-script-sed.html</link><pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/11/12/add-a-header-to-a-file-with-shell-script-sed.html</guid><description>Today I was re-generating the documentation for a REST API written in PHP, with Laravel. To generate the documentation, one would have to call a Laravel command first. That command would create a Markdown page. And since in this project I am using Jekyll for the project site, the final step was adding a header to the file, so that Jekyll can recognize that content as a blog post.
Laravel allows you to add custom commands to your project, so I decided to write a command that would call the other command that generates the documentation, and add an extra step of adding the header to the Markdown file.</description></item><item><title>Content negotiation with Spring Boot and React</title><link>https://kinoshita.eti.br/2016/11/07/content-negotiation-with-spring-boot-and-react.html</link><pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/11/07/content-negotiation-with-spring-boot-and-react.html</guid><description>A few days ago I had a bug in a system built with Spring Boot and React. The frontend application was using a REST client in React, built in a similar way to what is found in the documentation, and also in blogs.
import rest from &amp;#39;rest&amp;#39;; const Rest = () =&amp;gt; rest.wrap(mime); However, for one of the Spring Boot application endpoints, the React component was not working. The response seemed to be OK in the Network tab, of the browser developer tools.</description></item><item><title>Checking the operating system type in shell script</title><link>https://kinoshita.eti.br/2016/11/05/checking-the-operating-system-type-in-shell-script.html</link><pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/11/05/checking-the-operating-system-type-in-shell-script.html</guid><description>Last week I learned about a tool called ShellCheck, a tool for static analysis of shell scripts. It reports errors like missing double quotes, use of deprecated syntax, etc.
I decided to check some projects I contribute to, and the first issue I found was in Apache Jena:
kinow@localhost:~/Development/java/jena/jena/apache-jena/bin$ shellcheck arq In arq line 8: case &amp;#34;$OSTYPE&amp;#34; in ^-- SC2039: In POSIX sh, OSTYPE is not supported. So, in summary, the OSTYPE variable should not be available in POSIX shell.</description></item><item><title>Using the AWS API with Python</title><link>https://kinoshita.eti.br/2016/10/04/using-the-aws-api-with-python.html</link><pubDate>Tue, 04 Oct 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/10/04/using-the-aws-api-with-python.html</guid><description>Amazon Web Services provides a series of cloud services. When you access the web interface, most - if not all - of the actions you do there are actually translated into API calls.
They also provide SDK&amp;rsquo;s in several programming languages. With these SDK&amp;rsquo;s you are able to call the same API used by the web interface. Python has boto (or boto3) which lets you to automate several tasks in AWS.</description></item><item><title>Best place to find science fiction books in New Zealand</title><link>https://kinoshita.eti.br/2016/10/02/best-place-to-find-science-fiction-books-in-new-zealand.html</link><pubDate>Sun, 02 Oct 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/10/02/best-place-to-find-science-fiction-books-in-new-zealand.html</guid><description>Since I moved to New Zealand it has been hard to find good science fiction sections in the local book stores. I really miss the Livraria Cultura at Avenida Paulista, or the Saraiva Megastores. Whitcoulls and Paper Plus do a good job, but they have very few series, only recent releases, and you do not feel that cool environment while you browse the books.
I found that small secondhand bookstores are the best places to find good books - not only science fiction - in New Zealand.</description></item><item><title>Performance problems in Jenkins TAP Plug-in &amp;mdash; part 1</title><link>https://kinoshita.eti.br/2016/09/03/performance-problems-in-jenkins-tap-plug-in-mdash-part-1.html</link><pubDate>Sat, 03 Sep 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/09/03/performance-problems-in-jenkins-tap-plug-in-mdash-part-1.html</guid><description>JENKINS-17887 reports performance problems in the Jenkins TAP Plug-in. It also lists a series of suggestions on how to improve the Jenkins TAP Plug-in performance. On this initial post, we will get a general idea of how the plug-in performs for large projects.
BioPerl has over 21K tests. That should be enough for giving an initial idea of CPU, memory and disk usage for the plug-in.
git clone https://github.com/bioperl/bioperl-live.git cd bioperl-live sudo cpanm -vv --installdeps --notest .</description></item><item><title>Revamping Frege logo - part 2</title><link>https://kinoshita.eti.br/2016/08/24/revamping-frege-logo-part-2.html</link><pubDate>Wed, 24 Aug 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/08/24/revamping-frege-logo-part-2.html</guid><description>Last time I used Blender was around 2007 I think, in University. But the bad weather in Auckland gives me plenty of time to have fun checking out Blender again :-)
Followed the following tutorials:
How to create a 3D Logo in Blender Blender Tutorial Spinning Logo Here are the work in progress, created only with the bézier curve.
Frege updated logo Frege 3D #1 Frege 3D #2 Frege 3D #3 Frege 3D #4 Frege 3D #5 Frege 3D #6 Frege 3D #7 Here&amp;rsquo;s the result after the mesh was created, and some material applied.</description></item><item><title>Revamping Frege logo</title><link>https://kinoshita.eti.br/2016/08/16/revamping-frege-logo.html</link><pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/08/16/revamping-frege-logo.html</guid><description>For a while I had been wanting to try adding a flat colour to the Frege logo. This weekend had some bit of spare time, and here is the result.
Submitted to the project as pull request #299.
Current logo.
Frege current logo And the updated logo.
Frege updated logo The colour used was Flamingo (#EF4836), found in Flat UI Color Picker.
Perhaps not exactly revamping, since all I did was just change a colour.</description></item><item><title>Reading notes about DRMAA v2</title><link>https://kinoshita.eti.br/2016/07/20/reading-notes-about-drmaa-v2.html</link><pubDate>Wed, 20 Jul 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/07/20/reading-notes-about-drmaa-v2.html</guid><description>&lt;p>The DRMAA v2 specification draft is ready to be published, and is in &lt;a href="https://redmine.ogf.org/boards/36/topics/494">public
comment&lt;/a> until 31st July this year.
I used DRMAA v1 to integrate Jenkins and PBS some time ago, but it was not a
very elegant solution.&lt;/p>
&lt;p>And in the end integrating other grid computing implementations like SGE would
not be very simple.&lt;/p>
&lt;p>This post contains my reading notes for DRMAA v2, and a short analysis of how
this new specification could be used in a new tentative to integrate
Jenkins and several grid computing implementations in a single plug-in.&lt;/p></description></item><item><title>Reasons for having pt and pt-BR in a software</title><link>https://kinoshita.eti.br/2016/07/17/reasons-for-having-pt-and-pt-br-in-a-software.html</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/07/17/reasons-for-having-pt-and-pt-br-in-a-software.html</guid><description>&lt;p>Some time ago I found some spare time to work on a different Open Source project:
&lt;a href="http://skosmos.org/">SKOSMOS&lt;/a>. SKOSMOS is a web based SKOS browser and publishing
tool, used to create vocabularies using the SKOS ontology.&lt;/p>
&lt;p>I decided to help with translation, but there was no Brazilian Portuguese option,
only Portuguese. I used a few arguments to suggest that having Brazilian Portuguese
would be a good thing.&lt;/p>
&lt;p>Another Open Source project that I use in a side project is
&lt;a href="https://www.languagetool.org/">LanguageTool&lt;/a>. LanguageTool is used for
proof-reading, and uses rules to find spelling and grammar errors.&lt;/p>
&lt;p>Today I saw a message in the LanguageTool mailing list discussing whether having a Brazilian
Portuguese page would make sense, or if it would be better to have just Portuguese, and then
add rules for special cases.&lt;/p></description></item><item><title>Drawing sketch: Blue Hair</title><link>https://kinoshita.eti.br/2016/05/16/drawing-sketch-blue-hair.html</link><pubDate>Mon, 16 May 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/05/16/drawing-sketch-blue-hair.html</guid><description>For redditgetsdrawn</description></item><item><title>Some Linux commands I used this week</title><link>https://kinoshita.eti.br/2016/05/06/some-linux-commands-i-used-this-week.html</link><pubDate>Fri, 06 May 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/05/06/some-linux-commands-i-used-this-week.html</guid><description>These are some commands I used on Linux servers this week. Adding them here in case someone else find them interesting, and also due to my bad memory :-)
Listing latest installed packages in SLES rpm -qa --last This will display the last packages installed. Useful when there are packages being updated, and you need to confirm what changed, and when.
Listing packages in SLES and origin repository rpm -qa --qf &amp;#39;%-30{DISTRIBUTION} %{NAME}\n&amp;#39;| sort The output will have two columns.</description></item><item><title>Using Active Choices with Role Strategy Plug-in</title><link>https://kinoshita.eti.br/2016/04/24/using-active-choices-with-role-strategy-plug-in.html</link><pubDate>Sun, 24 Apr 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/04/24/using-active-choices-with-role-strategy-plug-in.html</guid><description>&lt;p>Having worked in Open Source for a few years, one of my favorite things is when you can
share experience with other people that you meet. &lt;a href="https://github.com/agray">Andrew Gray&lt;/a>
has worked with .NET and Jenkins for years, and we met through Open Source. He has helped me
in the past with Jenkins and .NET, and also maintains the blog
&lt;a href="http://jenkinsheaven.blogspot.co.nz/">Jenkins.NET&lt;/a>.&lt;/p>
&lt;p>A couple of days ago he sent me an interesting question. He asked me if that would be possible
to use Active Choices Plug-in with the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin">Role Strategy Plug-in&lt;/a>.
This plug-in lets you define roles, define which permissions a role has, and then assign users to the roles.&lt;/p></description></item><item><title>Drawing: Kumamoto Kenjinkai mascot</title><link>https://kinoshita.eti.br/2016/04/19/drawing-kumamoto-kenjinkai-mascot.html</link><pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/04/19/drawing-kumamoto-kenjinkai-mascot.html</guid><description>For Brazilian Kumamoto Kenjinkai. Done with Macromedia Freehand MX, some long time ago.</description></item><item><title>Trying SaltStack with Docker</title><link>https://kinoshita.eti.br/2016/04/17/trying-saltstack-with-docker.html</link><pubDate>Sun, 17 Apr 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/04/17/trying-saltstack-with-docker.html</guid><description>Some weeks ago I started learning SaltStack for a project at work. But I couldn&amp;rsquo;t find a good Docker image for that and I had to ask the Ops team for some VM&amp;rsquo;s. We are having a rainy weekend in Auckland, so I decided to have another look at the Jenkins SaltStack Plug-in.
But now since I was at home, I couldn&amp;rsquo;t use the VM&amp;rsquo;s that I had access to at work.</description></item><item><title>Geek Vacation 2016</title><link>https://kinoshita.eti.br/2016/04/08/geek-vacation-2016.html</link><pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/04/08/geek-vacation-2016.html</guid><description>I just had a two week vacation, and I tried to use my time to rest, play some music, and complete a geek todo-list.
The list included things that I used some time ago but wanted to refresh my memory, things that I already used but never spent time reading the manuals, and other things that I saw somewhere but never actually used in any project.
Here the complete list, with the items that were completed highlighted.</description></item><item><title>Deploying WAR files to Tomcat with Jenkins</title><link>https://kinoshita.eti.br/2016/03/20/deploying-war-files-to-tomcat-with-jenkins.html</link><pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/03/20/deploying-war-files-to-tomcat-with-jenkins.html</guid><description>&lt;p>&lt;strong>Table of Contents&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#1-deploying-with-custom-scripts">Deploying with custom scripts&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-deploying-with-a-build-tool">Deploying with a build tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-deploying-with-a-build-server">Deploying with a build server&lt;/a>&lt;/li>
&lt;li>&lt;a href="#final-thoughts">Final thoughts&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>A co-worker asked me this week about how to deploy a WAR file to Tomcat with Jenkins. In my team we are
currently maintaining and deploying about 10 Java web systems, but we have no consistent way of deploying
the applications to Tomcat yet. In the past I used Ant, Maven, Cargo, Grunt, and Jenkins, so I
decided to write this short post to show a few different ways it can be achieved, à la
&lt;a href="https://en.wikipedia.org/wiki/There's_more_than_one_way_to_do_it">Perl&amp;rsquo;s TMTOWTDI&lt;/a> motto.&lt;/p>
&lt;h2>&lt;a name="1-deploying-with-custom-scripts" style="color: #222222;">#1 Deploying with custom scripts&lt;/a>&lt;/h2>
&lt;p>At first you may be tempted to write your own script to deploy to Tomcat with some Shell, Perl, Python
or Java. But I think I would choose this option only because either I needed some feature that is not
available in the other options, or in order to call other tasks or debug some problem.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ docker run -d -p 8888:8080 jeanblanchard/tomcat:8
$ git clone https://github.com/spring-projects/spring-petclinic.git &amp;amp;&amp;amp; cd spring-petclinic &amp;amp;&amp;amp; mvn package
$ curl --upload-file target/petclinic.war &lt;span style="color:#00f">&amp;#34;http://admin:admin@localhost:8888/manager/text/deploy?path=/spring-petclinic&amp;amp;update=true&amp;#34;&lt;/span>
OK - Deployed application at context path /spring-petclinic
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Drawing sketch: Cheese</title><link>https://kinoshita.eti.br/2016/03/20/drawing-sketch-cheese.html</link><pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/03/20/drawing-sketch-cheese.html</guid><description>For redditgetsdrawn</description></item><item><title>Learning afl and testing MapServer</title><link>https://kinoshita.eti.br/2016/02/27/learning-afl-and-testing-mapserver.html</link><pubDate>Sat, 27 Feb 2016 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2016/02/27/learning-afl-and-testing-mapserver.html</guid><description>&lt;p>&lt;a href="http://lcamtuf.coredump.cx/afl/">afl&lt;/a> is a fuzzer, an application that combines a series of algorithms
in order to try invoking programs with several different input values. It then analyses the application
execution flow given different test case scenarios.
You can read more about fuzzing at &lt;a href="https://www.owasp.org/index.php/Fuzzing">this OWASP page&lt;/a>, or in other
blogs that I also used while learning about afl &lt;a href="%22#1%22">1&lt;/a> &lt;a href="%22#2%22">2&lt;/a>&lt;/p>
&lt;p>At work we are using MapServer for serving WFS and WMS. And I am using it for the
&lt;a href="http://maps.nzoss.org.nz">NZ OpenStreetMap maps&lt;/a> too. MapServer is written in C++ and is normally
exposed as a CGI script, so I thought it was worth learning about afl and trying it on MapServer,
as in case it finds any interesting bug I can submit it to the MapServer project.&lt;/p></description></item><item><title>How does the Jenkins Credentials Plug-in store passwords?</title><link>https://kinoshita.eti.br/2015/09/07/how-does-the-jenkins-credentials-plug-in-store-passwords.html</link><pubDate>Mon, 07 Sep 2015 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2015/09/07/how-does-the-jenkins-credentials-plug-in-store-passwords.html</guid><description>Jenkins Credentials Plug-in manages credentials stored in Jenkins. These credentials can be used in many jobs and by plug-ins for executing SSH commands, authenticating to systems, or running other commands that need some sort of authentication or authorisation.
I recently used its API for the first time in the BioUno figshare Plug-in to store OAuth 1.0 credentials (consumer key, consumer secret, token key, token secret). This blog post has more details about how we used the plug-in, but this post is specifically on how the passwords are stored by Jenkins.</description></item><item><title>Groovy Hooks in Jenkins for increasing logging level</title><link>https://kinoshita.eti.br/2015/04/12/groovy-hooks-in-jenkins-for-increasing-logging-level.html</link><pubDate>Sun, 12 Apr 2015 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2015/04/12/groovy-hooks-in-jenkins-for-increasing-logging-level.html</guid><description>Yesterday, while debugging a problem we had in the BioUno update center, I realized that after increasing the logging level in the WEB interface, the messages that I needed weren&amp;rsquo;t being displayed in the logs.
It happened because some of the logging happened during Jenkins initialization, and before I could adjust the log level.
The solution was to use a Groovy Hook Script. If you are familiar with Linux init scripts, the idea is quite similar.</description></item><item><title>Contributing to Apache Jena</title><link>https://kinoshita.eti.br/2015/01/01/contributing-to-apache-jena.html</link><pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2015/01/01/contributing-to-apache-jena.html</guid><description>&lt;p>As I mentioned in my [previous post]({% post_url 2014-10-11-basic-workflow-of-a-sparql-query-in-fuseki %}),
I am using &lt;a href="http://jena.apache.org">Apache Jena&lt;/a> for a project of a customer. I had never used
any triple store, nor a SPARQL Endpoint server before. But for being involved with the Apache
Software Foundation, and since the company itself is using several Apache components, it was only
natural Jena to be our first choice.&lt;/p>
&lt;p>It has served us very well so far. At the moment we have less than 100 queries per day, but the
project is still under development and we expect 1000 queries per day by the first quarter of
2015 and 1000000 near the end of 2015. We also have few entries in TDB, but expect to grow this
number to a few million before 2016.&lt;/p></description></item><item><title>Basic workflow of a SPARQL query in Fuseki</title><link>https://kinoshita.eti.br/2014/10/11/basic-workflow-of-a-sparql-query-in-fuseki.html</link><pubDate>Sat, 11 Oct 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/10/11/basic-workflow-of-a-sparql-query-in-fuseki.html</guid><description>Before using any library or tool in a customer project, specially when it is an Open Source one, there are many things that I like to look at before deploying it. Basically, I look at the features, documentation, community, open issues (in special blockers or criticals), the time to release fixes and new features and, obviously, the license.
At the moment I&amp;rsquo;m using Apache Jena to work with ontologies, SPARQL and data matching and enrichment for a customer.</description></item><item><title>Cypher, Gremlin and SPARQL: Graph dialects</title><link>https://kinoshita.eti.br/2014/09/09/cypher-gremlin-and-sparql-graph-dialects.html</link><pubDate>Tue, 09 Sep 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/09/09/cypher-gremlin-and-sparql-graph-dialects.html</guid><description>When I was younger and my older brother was living in Germany, I asked him if he had learned German. He said that he did, and explained that there are several dialects, and he was quite proud for some people told him that he was using the Bavarian dialect correctly.
Even though Cypher, Gremlin and SPARQL are all query languages, I think we can consider them dialects of a common graph language.</description></item><item><title>Strings transliteration in Java with Apache Commons Lang</title><link>https://kinoshita.eti.br/2014/08/09/strings-transliteration-in-java-with-apache-commons-lang.html</link><pubDate>Sat, 09 Aug 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/08/09/strings-transliteration-in-java-with-apache-commons-lang.html</guid><description>Rosalind is a website with a curated set of exercices for bioinformatics, organized hierarchily. In some of these examples you are required to replace characters (nucleotides) by other characters. It is a rather common task for developers, like when you need to replace special characters in user&amp;rsquo;s names.
There are different ways of describing it, such as translate, replace, or transliterate. The latter being my favorite definition.
In Python I know that there are several different ways of transliterating strings [1][2].</description></item><item><title>Treemapping Jenkins Extension Points with R</title><link>https://kinoshita.eti.br/2014/05/19/treemapping-jenkins-extension-points-with-r.html</link><pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/05/19/treemapping-jenkins-extension-points-with-r.html</guid><description>&lt;p>I have been playing with R and its packages for some time, and decided to study it a
bit harder. Last week I started reading the &lt;a href="http://adv-r.had.co.nz/">Advanced R Programming&lt;/a>
by Hadley Wickham.&lt;/p>
&lt;p>One of the first chapters talks about the basic data structures in R. In order to
get my feet wet I thought about a simple example: &lt;a href="http://en.wikipedia.org/wiki/Treemapping">treemapping&lt;/a>
Jenkins extension points.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2014-05-19-treemapping-jenkins-extension-points-with-r/extension_points.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Writing a custom SchemaSpy command for Laravel 4</title><link>https://kinoshita.eti.br/2014/02/11/writing-a-custom-schemaspy-command-for-laravel-4.html</link><pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2014/02/11/writing-a-custom-schemaspy-command-for-laravel-4.html</guid><description>This week I had to write my first custom command for Laravel 4. In Nestor-QA, Peter and I thought it would be useful to have the database schema being automatically generated with SchemaSpy in our Jenkins box.
Thanks to Artisan this task is much simpler than I thought. The following command creates the schemaspy command.
php artisan command:make SchemaSpyCommand --command=schemaspy This will create the file app/commands/SchemaSpyCommand.php. And all I had to do was just fill in the options and write the exec command as the Laravel 4 docs explain.</description></item><item><title>Missing menus in new installation of TestLink 1.9.8</title><link>https://kinoshita.eti.br/2013/10/27/missing-menus-in-new-installation-of-testlink-1.9.8.html</link><pubDate>Sun, 27 Oct 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/10/27/missing-menus-in-new-installation-of-testlink-1.9.8.html</guid><description>I recently installed TestLink 1.9.8 and noticed that the menus and some other parts of the UI we missing. Looking at /var/log/testlink/userlog1.log (the location may change depending on your settings) I realized that there was something wrong with my PHP installation. There were log messages like the below.
include_once(ADORecordSet_ext_empty.class.php): failed to open stream: No such file or directory - in /home/kinow/php/workspace/testlink-1.9.8/lib/functions/common.php - Line 92 [13/Sep/18 12:51:09][WARNING][2o0h173pdgg5fjqh1pukr83og2][GUI] E_WARNING include_once(): Failed opening 'ADORecordSet_ext_empty.</description></item><item><title>The Apache Way and on writing software reviews</title><link>https://kinoshita.eti.br/2013/09/29/the-apache-way-and-on-writing-software-reviews.html</link><pubDate>Sun, 29 Sep 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/09/29/the-apache-way-and-on-writing-software-reviews.html</guid><description>The Apache Way is the philosophy behind Apache Software Foundation and is shared by all of its projects. It is composed by a set of principles:
Collaborative software development Commercial-friendly standard license Consistently high quality software Respectful, honest, technical-based interaction Faithful implementation of standards Security as a mandatory feature I have been part of Apache Commons for a while, and haven&amp;rsquo;t really contributed much yet. Maybe because I had lots of projects related to TupiLabs as well as my own wedding this year.</description></item><item><title>Too many SQL variables exception in Graphite with SQLite3</title><link>https://kinoshita.eti.br/2013/07/04/too-many-sql-variables-exception-in-graphite-with-sqlite3.html</link><pubDate>Thu, 04 Jul 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/07/04/too-many-sql-variables-exception-in-graphite-with-sqlite3.html</guid><description>Having run Graphite for a while, today I found a rather annoying issue. We were using events, and everything was working perfectly fine so far. But for the 24 last hours, the graph was blank.
Actually, in the dashboard, the graph was missing, being displayed as a gray box. Enabling the web inspector in Google Chrome I got the graph URL. Opening the link in a new tab gave me the exception message: too many SQL variables (1).</description></item><item><title>Graphite: Broken images</title><link>https://kinoshita.eti.br/2013/04/17/graphite-broken-images.html</link><pubDate>Wed, 17 Apr 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/04/17/graphite-broken-images.html</guid><description>This morning I was setting up a Graphite server to collect metrics with statsd, LogStash and jmxtrans. After following the instructions from @jgeurst, I've successfully installed Graphite.
I had previously installed another test box, so I decided to take a deeper look at the settings, write a puppet manifest and prepare this new box to become a production server. However, after browsing the webapp, all graphs were broken.
After googling a while, reading forums and bugs, I decided to open the $GRAPHITE_HOME/webapp/graphite/render/views.</description></item><item><title>Fix laggy Flash (Pepper) in Chrome</title><link>https://kinoshita.eti.br/2013/03/31/fix-laggy-flash-pepper-in-chrome.html</link><pubDate>Sun, 31 Mar 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/03/31/fix-laggy-flash-pepper-in-chrome.html</guid><description>My chrome died twice this morning. Checking the system logs I found some segmentation errors. Since it was not so recent version, I updated to the latest version of Chrome. But after that my Flash player was laggy/slowly, and I couldn't listen to Live Ireland Channel 1 no more :-( (I listen to either this radio or r/electrohouse on reddit.tv while I'm programming... I know, I'm a bit weird).
If you are having the same problem, here's the list of actions that I did to fix it.</description></item><item><title>Learning with Open Source: Reviewing SVN commits log</title><link>https://kinoshita.eti.br/2013/02/10/learning-with-open-source-reviewing-svn-commits-log.html</link><pubDate>Sun, 10 Feb 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/02/10/learning-with-open-source-reviewing-svn-commits-log.html</guid><description>&lt;p>Last year I became an &lt;a href="http://www.apache.org" title="Apache">Apache&lt;/a> committer, and dedicated most of my time learning the &lt;a href="http://incubator.apache.org/learn/theapacheway.html" title="The Apache Way">Apache way&lt;/a>, reading different mailing lists and getting used to the things a committer is supposed to know (voting process, keeping everything in the mailing list, and so it goes) and getting used to &lt;a href="http://commons.apache.org/functor" title="Apache Commons Functor">[functor]&lt;/a> API.&lt;/p>
&lt;p>In 2013 I hope I can help in the release of [functor], since Java and &lt;a href="http://reddit.com/r/functionalprogramming">functional programming&lt;/a> are getting a lot more of attention recently, probably due to the &lt;a href="http://openjdk.java.net/projects/lambda/" title="Project Lambda">project lambda&lt;/a>. But I also want to start contributing with the other components from commons (like &lt;a href="http://commons.apache.org/math/" title="Apache Commons Math">math&lt;/a>, &lt;a href="http://commons.apache.org/io/" title="Apache Commons IO">io&lt;/a>, &lt;a href="http://commons.apache.org/jcs/" title="Apache Commons JCS">jcs&lt;/a>) and other top level projects (&lt;a href="http://hadoop.apache.org/" title="Apache Hadoop">hadoop&lt;/a>, &lt;a href="http://nutch.apache.org/" title="Apache Nutch">nutch&lt;/a>, &lt;a href="http://lucene.apache.org/" title="Apache Lucene">lucene&lt;/a>).&lt;/p>
&lt;h4>Reviewing SVN commits log&lt;/h4>
&lt;p>&lt;a href="https://issues.apache.org/jira/browse/FUNCTOR-14" title="Apache Commons Functor - Issue 14">FUNCTOR-14&lt;/a> was created to enhance the &lt;a href="http://commons.apache.org/functor/apidocs/org/apache/commons/functor/generator/package-summary.html">generators API&lt;/a> in [functor]. I'd worked on &lt;a href="http://svn.apache.org/viewvc/commons/proper/functor/branches/generators-FUNCTOR-14/">a branch&lt;/a> for this issue, but needed some review in order to be able to merge it with the trunk. That's where you can see why Open Source is so awesome. Another Apache member, Matt Benson, created &lt;a href="http://svn.apache.org/viewvc/commons/proper/functor/branches/FUNCTOR-14-mm/">another branch&lt;/a> to work on the project structure, but also to review the generator API.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2013-02-10-learning-with-open-source-reviewing-svn-commits-log/feather_small.gif'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>git clone fails with fatal: Unable to find remote helper for 'https'</title><link>https://kinoshita.eti.br/2013/01/17/git-clone-fails-with-fatal-unable-to-find-remote-helper-for-https.html</link><pubDate>Thu, 17 Jan 2013 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2013/01/17/git-clone-fails-with-fatal-unable-to-find-remote-helper-for-https.html</guid><description>I've been working in a client site without Internet connection, and behind a troll proxy. There is an internal yum repository, but many dependencies are missing.
There weren't git-all, git or git-core packages there, so I had to download and install from sources. I didn't pay attention to the ./configure output and proceeded with make and make install.
Git was installed and ready to rock, but in my first git clone https:// (SSH ports are blocked) I received: fatal: Unable to find remote helper for 'https'.</description></item><item><title>Using Apache Commons Functor functional interfaces with Java 8 lambdas</title><link>https://kinoshita.eti.br/2012/12/21/using-apache-commons-functor-functional-interfaces-with-java-8-lambdas.html</link><pubDate>Fri, 21 Dec 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/12/21/using-apache-commons-functor-functional-interfaces-with-java-8-lambdas.html</guid><description>&lt;p>&lt;a href='http://commons.apache.org/sandbox/functor/'>Apache Commons Functor&lt;/a> (hereon [functor]) is an &lt;a href='http://commons.apache.org/'>Apache Commons&lt;/a> component that provides a functional programming API and several patterns implemented (visitor, generator, aggregator, etc). &lt;a href="http://openjdk.java.net/projects/lambda/" title="Java 8 lambda">Java 8&lt;/a> has several nice new features, including lambda expressions and &lt;a href="http://datumedge.blogspot.com.br/2012/06/java-8-lambdas.html">functional interfaces&lt;/a>. In Java 8, lambdas or lambdas expressions are &lt;a href="http://tronicek.blogspot.com.br/2007/12/closures-closure-is-form-of-anonymous_28.html">closures&lt;/a> that can be evaluated and behave like anonymous methods.&lt;/p>
&lt;p>Functional interfaces are interfaces with only one method. These interfaces can be used in lambdas and save you a lot of time from writing anonymous classes or even implementing the interfaces. [functor] provides several functional interfaces (thanks to &lt;a href="https://issues.apache.org/jira/browse/FUNCTOR-20">Matt Benson&lt;/a>). It hasn't been released yet, but there are some new examples in the project site, in the &lt;a href="http://svn.apache.org/viewvc/commons/proper/functor/trunk/" title="[functor] SVN trunk">trunk of the SVN&lt;/a>. I will use one of these examples to show how [functor] functional interfaces can be used in conjunction with Java 8 lambdas.&lt;/p>
&lt;p>After the example with [functor] in Java 8, I will explain how I am running Java 8 in Eclipse (it's kind of a &lt;a href="http://www.speaklikeabrazilian.com/expression/define?e=Gambiarra" title="Gambiarra">gambiarra&lt;/a>, but works well).&lt;/p></description></item><item><title>Running BDD tests from TestLink in Jenkins</title><link>https://kinoshita.eti.br/2012/11/07/running-bdd-tests-from-testlink-in-jenkins.html</link><pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/11/07/running-bdd-tests-from-testlink-in-jenkins.html</guid><description>&lt;p>Last night and this morning I spent some time working on running
&lt;a href="http://en.wikipedia.org/wiki/Behavior-driven_development">BDD&lt;/a> tests that were created in
&lt;a href="http://www.teamst.org">TestLink&lt;/a> in &lt;a href="http://jenkins-ci.org">Jenkins&lt;/a>, using
&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin">testlink-plugin&lt;/a>.&lt;/p>
&lt;p>Similar integration has already been proposed in &lt;a href="http://www.sqaopen.net/blog/en/?tag=jinfeng">JinFeng&lt;/a>,
by Olivier Renault. Basically, you write BDD stories in TestLink (a story goes into the Test Case summary),
Jenkins retrieves these stories and executes them using a skeleton project.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2012-11-07-running-bdd-tests-from-testlink-in-jenkins/tl_bdd.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>There are many ways to use BDD. In some of them you write code like Java, Ruby or Perl, and in others you write a DSL. I started working with JBehave, but for this integration, I preferred to use a &lt;a href="http://en.wikipedia.org/wiki/Domain-specific_language" title="DSL">DSL&lt;/a> - as TestLink doesn&amp;rsquo;t maintain source code, only test cases -, so I switched to &lt;a href="http://www.easyb.org" title="easyb">easyb&lt;/a>.&lt;/p></description></item><item><title>A quick view on Wordpress, Mantis and Jenkins plug-in API</title><link>https://kinoshita.eti.br/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api.html</link><pubDate>Thu, 25 Oct 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/10/25/a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api.html</guid><description>&lt;p>I'm preparing a &lt;em>plug-in API proposal for &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a>&lt;/em>, and thought that the best way to learn how to write a good plug-in API would be by looking at other application's plug-in API's.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2012-10-25-a-quick-view-on-wordpress-mantis-and-jenkins-plug-in-api/testlink_logo_2.jpg%20'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>This post contains information that I gathered for creating this new API, but that may also be useful for other programmers. I used &lt;a href="#wp">Wordpress&lt;/a>, &lt;a href="#mantis">Mantis&lt;/a> and &lt;a href="#jenkins">Jenkins&lt;/a> in this study. Let me know if you find any mistakes or if you have any other suggestions.&lt;/p></description></item><item><title>Replacing a HashSet with a BitSet</title><link>https://kinoshita.eti.br/2012/10/20/replacing-a-hashset-with-a-bitset.html</link><pubDate>Sat, 20 Oct 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/10/20/replacing-a-hashset-with-a-bitset.html</guid><description>&lt;p>I always read the messages in the &lt;a href="http://www.apache.org/foundation/mailinglists.html" title="Apache mailing lists">Apache dev mailing lists&lt;/a>, including Apache Commons &lt;a href="http://commons.apache.org/mail-lists.html" title="Apache Commons mailing lists">dev mailing list&lt;/a>. And you should too. There are always interesting discussions. Sometimes you participate, other times you only watch what's happening, but in the end &lt;strong>you always learn something new&lt;/strong>.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2012-10-20-replacing-a-hashset-with-a-bitset/feather_small.gif'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>A few days ago, I found &lt;a href="https://issues.apache.org/jira/browse/LANG-839" title="LANG-839">an issue&lt;/a> where it was being proposed to replace an unnecessary &lt;a href="http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html" title="HashSet">HashSet&lt;/a> in &lt;a href="http://commons.apache.org/lang/api-release/org/apache/commons/lang3/ArrayUtils.html" title="ArrayUtils">ArrayUtils&lt;/a>#removeElements() by a &lt;a href="http://docs.oracle.com/javase/6/docs/api/java/util/BitSet.html" title="BitSet">BitSet&lt;/a>. Here's how the code looked like: &lt;/p></description></item><item><title>Adding coverage reports in Jenkins with GoogleTest and gcovr</title><link>https://kinoshita.eti.br/2012/10/16/adding-coverage-reports-in-jenkins-with-googletest-and-gcovr.html</link><pubDate>Tue, 16 Oct 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/10/16/adding-coverage-reports-in-jenkins-with-googletest-and-gcovr.html</guid><description>&lt;p>After the [last post]({% post_url 2012-10-11-jenkins-testlink-and-gtest-in-5-minutes-or-so %}) about
&lt;a href="http://code.google.com/p/googletest/">GoogleTest&lt;/a> and &lt;a href="http://www.teamst.org">TestLink&lt;/a> using
&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin">Jenkins TestLink Plug-in&lt;/a>, I received an e-mail
asking about &lt;a href="http://en.wikipedia.org/wiki/Code_coverage">coverage&lt;/a> with GoogleTest and
&lt;a href="http://www.jenkins-ci.org">Jenkins&lt;/a>. I&amp;rsquo;ve just updated the
&lt;a href="https://github.com/kinow/gtest-tap-listener/blob/master/samples/Makefile">Makefile&lt;/a> in the samples
directory, of the &lt;a href="https://github.com/kinow/gtest-tap-listener">GoogleTest TAP listener project&lt;/a>,
to output coverage data.&lt;/p>
&lt;p>Basically, you have to add the compiler flags &lt;code>-fprofile-arcs -ftest-coverage&lt;/code> and link the executable with
&lt;code>-lgcov&lt;/code>. Take a look at the project&amp;rsquo;s Makefile and you&amp;rsquo;ll notice how simple it is. In order to have Jenkins
interpreting your coverage report, you&amp;rsquo;ll have to convert it to &lt;a href="http://cobertura.sourceforge.net">cobertura&lt;/a>
XML. There is a Python utility that can be used for this: &lt;a href="https://software.sandia.gov/trac/fast/wiki/gcovr">gcovr&lt;/a>.
Download it and copy it to somewhere where Jenkins can execute it (e.g.: &lt;code>/usr/local/bin&lt;/code>).&lt;/p>
&lt;p>Now, if you&amp;rsquo;ve followed the instructions from the previous post, you should have a job that reports your GoogleTest
tests from Jenkins to TestLink using the plug-in, and is downloading the source code from GitHub. Add an extra build
step (Shell) to execute &lt;code>gcovr&lt;/code>.&lt;/p></description></item><item><title>Jenkins, TestLink and GTest in 5 minutes (or so)</title><link>https://kinoshita.eti.br/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so.html</link><pubDate>Thu, 11 Oct 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/10/11/jenkins-testlink-and-gtest-in-5-minutes-or-so.html</guid><description>&lt;p>This is a 5 minutes guide on creating a job for a C++ project in &lt;a href="http://www.jenkins-ci.org" title="Jenkins CI">Jenkins&lt;/a> with &lt;a href="http://code.google.com/p/googletest" title="GoogleTest">GoogleTest&lt;/a> and reporting the test results back to &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a>, with &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/TestLink+Plugin" title="Jenkins TestLink Plug-in">testlink-plugin&lt;/a>.&lt;/p>
&lt;h2 id="the-test-project-with-googletest">The test project with GoogleTest&lt;/h2>
&lt;p>For this simple guide we will use the samples that come with &lt;a href="https://github.com/kinow/gtest-tap-listener" title="GTest TAP Listener">GTest TAP Listener&lt;/a>. You can get the code from GitHub with &lt;code>git clone git://github.com/kinow/gtest-tap-listener.git&lt;/code>. Take a look at &lt;code>gtest-tap-listener/samples/src/&lt;/code>, there you will find two C++ files: &lt;code>gtest_main.cc&lt;/code> and &lt;code>gtest_testHelloWorld.cc&lt;/code>.&lt;/p>
&lt;p>&lt;code>gtest_main.cc&lt;/code> has the &lt;a href="http://code.google.com/p/googletest/wiki/Primer#Writing_the_main()_Function" title="GTest main function">main function&lt;/a>, and executes the test suite. And &lt;code>gtest_testHelloWorld.cc&lt;/code> has the test cases and tests. Take note of the test case and tests names.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2012-10-11-jenkins-testlink-and-gtest-in-5-minutes-or-so/screenshot_001.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Bioinformatics tools: Stacks</title><link>https://kinoshita.eti.br/2012/09/25/bioinformatics-tools-stacks.html</link><pubDate>Tue, 25 Sep 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/09/25/bioinformatics-tools-stacks.html</guid><description>&lt;p>It is the first post about &lt;strong>bioinformatics tools&lt;/strong>, but I will try to post more about other tools such
as MrBayes, Structure, maybe some next generation sequencing tools too, and Bioperl, Biojava, and so on.&lt;/p>
&lt;p>As I am more a computer geek, rather than a bioinformatics one, I will focus on requirements for running these tools
on clusters and the requirements to install them on your machine. The instructions require that you have an
intermediary knowledge on *nix OS and sometimes a bit of programming experience.&lt;/em>&lt;/p>
&lt;p>&lt;em>I will be using tutorials available on the Internet and hosting my code in &lt;a href="http://www.github.com/kinow" alt="GitHub kinow" title="GitHub kinow">GitHub/kinow&lt;/a>. Hammer time!&lt;/p></description></item><item><title>Paper: Patterns for Introducing a Superclass for Test Classes</title><link>https://kinoshita.eti.br/2012/09/25/paper-patterns-for-introducing-a-superclass-for-test-classes.html</link><pubDate>Tue, 25 Sep 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/09/25/paper-patterns-for-introducing-a-superclass-for-test-classes.html</guid><description>Few days ago we had SugarLoafPlop 2012 in Natal - RN
It is a conference on pattern languages of programming. About six months ago I saw a tweet by Eduardo Guerra asking if anyone had some cases where certain patterns were applied. It was a big coincidence, since I was working on Apache Commons Functor and some Jenkins plugins, both projects with cases that could be used in his paper.</description></item><item><title>Running word-count example on a Hadoop commodity-hardware cluster and on a Hadoop local installation</title><link>https://kinoshita.eti.br/2012/09/20/running-word-count-example-on-a-hadoop-commodity-hardware-cluster-and-on-a-hadoop-local-installation.html</link><pubDate>Thu, 20 Sep 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/09/20/running-word-count-example-on-a-hadoop-commodity-hardware-cluster-and-on-a-hadoop-local-installation.html</guid><description>&lt;p>Last weekend I spent some hours assembling old computer parts to create my commodity hardware cluster for running Hadoop. I already had a local installation in my notebook, so I thought it would be cool to run the word-count example in both scenarios to see what would be the results.&lt;/p>
&lt;p>But first, let's review the hardware configurations:&lt;/p></description></item><item><title>Integrating Nutch 2.x, MySQL and Solr</title><link>https://kinoshita.eti.br/2012/09/14/integrating-nutch-2.x-mysql-and-solr.html</link><pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/09/14/integrating-nutch-2.x-mysql-and-solr.html</guid><description>&lt;p>Right now we are working on a new project using &lt;a href="http://nutch.apache.org" title="Apache Nutch">Apache Nutch&lt;/a> 2.x, &lt;a href="http://hadoop.apache.org" title="Apache Hadoop">Apache Hadoop&lt;/a>, &lt;a href="http://solr.apache.org" title="Apache Solr">Apache Solr&lt;/a> 4 and a lot of other cool tools/modules/API&amp;rsquo;s/etc. After following the instructions found on &lt;a href="http://nlp.solutions.asia/?p=180" title="http://nlp.solutions.asia/?p=180">&lt;a href="http://nlp.solutions.asia/?p=180">http://nlp.solutions.asia/?p=180&lt;/a>&lt;/a>, I&amp;rsquo;ve successfully connected Apache Nutch, MySQL and Apache Solr.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2012-09-14-integrating-nutch-2-x-mysql-and-solr/mysql_hadoop_solr_nutch.png'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Invoking Testopia XML-RPC or JSON methods using Java</title><link>https://kinoshita.eti.br/2012/09/09/invoking-testopia-xml-rpc-or-json-methods-using-java.html</link><pubDate>Sun, 09 Sep 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/09/09/invoking-testopia-xml-rpc-or-json-methods-using-java.html</guid><description>&lt;p>Most &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a> [1] users are aware that there is an external API, maybe for the external API token being displayed in the user profile section. Today after a meeting with &lt;a href="http://twitter.com/peterflorijn" title="Peter Florijn">Peter Florijn&lt;/a> [2], I realized that the same may not be true for &lt;a href="http://www.mozilla.org/projects/testopia/" title="Testopia">Testopia&lt;/a> [3] users.&lt;/p>
&lt;p>I am quite new to Testopia, and there are many features that I haven&amp;rsquo;t used yet. But if I understand it correctly, the database is interfaced by several Perl scripts that are, by its turns, exposed as Web Service (most of them). The web services are available via a JSON and a XML-RPC API (what is very useful, TestLink supports supports only XML-RPC).&lt;/p>
&lt;p>The communication between different programming languages and the external API&amp;rsquo;s is accomplished by a client API. In TestLink you have &lt;a href="http://testlinkjavaapi.sourceforge.net/" title="TestLink Java API">testlink-java-api&lt;/a> [4] and &lt;a href="http://code.google.com/p/testlink-api-java-client/" title="TestLink API Java Client">testlink-api-java-client&lt;/a> [5].&lt;/p>
&lt;p>Testopia has a Java client too, available in &lt;a href="http://bzr.mozilla.org/bugzilla/extensions/testopia/2.2-bugzilla-3.2/files/head:/testopia/contrib/drivers/java/" title="Testopia source repository">Testopia source repository&lt;/a> [6] and can be used to integrate your existing Java code with Testopia.&lt;/p></description></item><item><title>How I started in Open Source</title><link>https://kinoshita.eti.br/2012/08/08/how-i-started-in-open-source.html</link><pubDate>Wed, 08 Aug 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/08/08/how-i-started-in-open-source.html</guid><description>&lt;p>I was studying at &lt;a href="http://www.mackenzie.br" title="Mackenzie Presbyterian University">Mackenzie Presbyterian University&lt;/a> when I met &lt;a href="http://www.ime.usp.br/~rbrito" title="Rogerio Brito">Professor Rogerio Brito&lt;/a>. Most of my friends were terrified of him. Maybe because of the class name &amp;ldquo;&lt;em>Structured Programming I&lt;/em>&amp;rdquo;. Or maybe because of what Brito taught us at class.&lt;/p>
&lt;p>My degree was in computing, &lt;em>Bachelor in System Information&lt;/em>. Although it is related to &lt;em>Computer Science&lt;/em>, we don&amp;rsquo;t have the same classes. In Computer Science you have more math, statistics and even physics, while in System Information you have administration, strategic planning, law and others related to business.&lt;/p>
&lt;p>Although Structured Programming had a list of topics, Brito didn&amp;rsquo;t limit himself to those. Eventually he would try to teach us about &lt;em>algorithms&lt;/em>, &lt;em>software complexity&lt;/em>, the importance of writing academic papers and explain about Open Source software.&lt;/p>
&lt;p>I remember one day we were dismissed before 10PM. I used to run for the bus stop for not being too late at home and cause it could be dangerous lingering on the streets of Consolacao neighborhood by myself, waiting for the bus. But that day I stumbled with Brito near the Professor&amp;rsquo;s Room.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2012-08-08-how-i-started-in-open-source/sensei_09.jpg'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure></description></item><item><title>Writing code to integrate Java projects to Testopia</title><link>https://kinoshita.eti.br/2012/05/18/writing-code-to-integrate-java-projects-to-testopia.html</link><pubDate>Fri, 18 May 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/05/18/writing-code-to-integrate-java-projects-to-testopia.html</guid><description>Peter Florijn and I are writing a Jenkins plug-in to integrate several test tools into Jenkins, something similar to what is done in TestLink plug-in. It&amp;rsquo;s still an idea being explored, and the whole project is subjected to changes without warning. The code is at https://github.com/kinow/testthemall.
The first tool that we are integrating is not TestLink, but Mozilla Testopia. As part of the process to integrate these tools, many Java API&amp;rsquo;s to interface the existing external APIs will be created, like it was done in TestLink with TestLink Java API.</description></item><item><title>Maven site tips: Maven Fluido Skin and Javadoc class diagrams</title><link>https://kinoshita.eti.br/2012/04/06/maven-site-tips-maven-fluido-skin-and-javadoc-class-diagrams.html</link><pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/04/06/maven-site-tips-maven-fluido-skin-and-javadoc-class-diagrams.html</guid><description>&lt;p>I have been using Maven sites for a while, and am very happy with it. I didn't like to have to update my projects after Maven 3, but that was all right, Maven 3 brought many new cool things. However, there were two things that annoyed me: lack of a nice and modern skin, and browsing Javadoc of complex code. The thought of creating a custom Maven skin even crossed my mind, but I never had time to read about it.&lt;/p>
&lt;p>But the world is full of good and talented people! Like the guys from &lt;a title="99soft" href="http://www.99soft.org/">99soft&lt;/a>. They created &lt;a title="Maven Fluido Skin" href="http://maven.apache.org/skins/maven-fluido-skin/">Maven Fluido Skin&lt;/a>, and donated it to &lt;a title="Apache Software Foundation" href="http://apache.org/">Apache Software Foundation&lt;/a>. It's built on top of &lt;a title="Twitter Bootstrap" href="http://twitter.github.com/bootstrap/">Twitter's Bootstrap&lt;/a> and available from Maven central repository. In order to use it in your Maven project, all that you have to do is add the following settings into your src/site/site.xml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#000080;font-weight:bold">&amp;lt;skin&amp;gt;&lt;/span>
&lt;span style="color:#000080;font-weight:bold">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.maven.skins&lt;span style="color:#000080;font-weight:bold">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;span style="color:#000080;font-weight:bold">&amp;lt;artifactId&amp;gt;&lt;/span>maven-fluido-skin&lt;span style="color:#000080;font-weight:bold">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;span style="color:#000080;font-weight:bold">&amp;lt;version&amp;gt;&lt;/span>1.2.1&lt;span style="color:#000080;font-weight:bold">&amp;lt;/version&amp;gt;&lt;/span>
&lt;span style="color:#000080;font-weight:bold">&amp;lt;/skin&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here's a list of some projects using Maven Fluido Skin (hopefully, in the near future &lt;a title="Apache Commons" href="http://commons.apache.org/">Apache Commons&lt;/a> and other projects will adopt this skin as default too :-)):&lt;/p></description></item><item><title>TupiLabs logo</title><link>https://kinoshita.eti.br/2012/02/02/tupilabs-logo.html</link><pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/02/02/tupilabs-logo.html</guid><description>Logo created on Macromedia Freehand MX.
Used for web site, Twitter, contracts and other media.
Brazil is a country of many birds, and the simple lineart and colors are easy to identify.</description></item><item><title>Ranges in Apache Commons Functor</title><link>https://kinoshita.eti.br/2012/01/22/ranges-in-apache-commons-functor.html</link><pubDate>Sun, 22 Jan 2012 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2012/01/22/ranges-in-apache-commons-functor.html</guid><description>&lt;p>This is a long post. So here is a &lt;strong>TL;DR&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Apache Commons Functor has no Double or Float Range (yet)&lt;/li>
&lt;li>Apache Commons Functor IntegerRange and LongRange treat the low value as inclusive, and the high value as exclusive. How does that compare to other languages/APIs? (you will have to read to see some comparison)&lt;/li>
&lt;li>Perl has support for characters ranges, perhaps we could implement it in Functor too?&lt;/li>
&lt;li>In case we implemented a CharacterRange, it would have to be inclusive for both low and high limits. With 'z' being the last character, there wouldn't have a way to include Z with the current approach. Or we would have to make the CharacterRange a special one. What would go against &lt;a title="Liskov Substitution Principle" href="http://en.wikipedia.org/wiki/Liskov_substitution_principle">Liskov Substitution Principle&lt;/a>.&lt;/li>
&lt;li>You can see a comparison table with Apache Commons Functor, other Java API's and other programming languages for ranges clicking &lt;a href="#ctable" title="Comparison table">here&lt;/a>.&lt;/li>
&lt;li>It would be nice to have a clear distinction in Functor documentation among a Sequence, a Generator and a Range. While I was gathering material for this post, I found places using range, others using sequence, and in Apache Commons Functor, an IntegerRange is a Generator.&lt;/li>
&lt;/ul>
Now, if you have some spare time or curiosity, keep reading :-)</description></item><item><title>Testing shell code and producing TAP using Jenkins?</title><link>https://kinoshita.eti.br/2011/12/30/testing-shell-code-and-producing-tap-using-jenkins.html</link><pubDate>Fri, 30 Dec 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/12/30/testing-shell-code-and-producing-tap-using-jenkins.html</guid><description>&lt;p>Definitely reading &lt;a title="Hacker News" href="http://news.ycombinator.com/">Hacker News&lt;/a> before going to bed is a bad idea :-) Same goes for &lt;a title="Reddit" href="http://www.reddit.com">Reddit&lt;/a>. So, I found a link about &lt;a title="Bats" href="https://github.com/sstephenson/bats">Bats&lt;/a>, a tool to execute tests in Shell and output &lt;a title="Test Anything Protocol" href="http://testanything.org">TAP&lt;/a> - Test Anything Protocol. Then I thought; why not ask the author to include Bats under the list of &lt;a title="TAP Producers" href="http://testanything.org/wiki/index.php/TAP_Producers#SH_.2F_Shell_Script">Producers&lt;/a> in &lt;a title="Test Anything Protocol" href="http://testanything.org">testanything.org&lt;/a>?&lt;/p>
&lt;p>But you know what? Why not execute execute locally first to check if that&amp;rsquo;s working&amp;hellip; moreover, why not use &lt;a title="Jenkins TAP Plug-in" href="https://wiki.jenkins-ci.org/display/JENKINS/TAP+Plugin">Jenkins TAP Plug-in&lt;/a> and see what happens?&lt;/p></description></item><item><title>Listing of current projects, achievements and my New Year's resolutions</title><link>https://kinoshita.eti.br/2011/12/24/listing-of-current-projects-achievements-and-my-new-years-resolutions.html</link><pubDate>Sat, 24 Dec 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/12/24/listing-of-current-projects-achievements-and-my-new-years-resolutions.html</guid><description>&lt;p>Tis' the end of 2011! Yay! Throughout this year I&amp;rsquo;ve heard people repeatedly saying that I had too much on my plate, and that I should quit some projects, stop giving talks, start surfing again amongst other things. Now, looking back, although I&amp;rsquo;m quite happy with my achievements in 2011, I can see their point.&lt;/p>
&lt;p>In 2010 I started working as Software Quality Engineer with &lt;a title="Anderson Santos" href="http://andersonxp.tumblr.com/">Anderson Santos&lt;/a>. He was the greatest supporter of many of my ideas, so although we stopped working together in 2011, I&amp;rsquo;m still grateful to him for all he taught, for his advices and for spending some time guiding me.&lt;/p>
&lt;p>He motivated me to start giving talks, going to more conferences and contributing more actively to Open Source projects. Since then, I&amp;rsquo;ve given almost 10 talks, including one in &lt;a title="Belgium Testing Days" href="http://www.belgiumtestingdays.com">Belgium Testing Days&lt;/a>, another one in&lt;a title="Oracle JavaOne" href="http://www.oracle.com/javaone/lad-pt/"> Oracle JavaOne&lt;/a> and in March next year I will be in America for a talk in &lt;a title="STP Con" href="http://www.stpcon.com/">STPCON&lt;/a>. I also missed &lt;a title="JCertif" href="http://www.jcertif.com">JCertif&lt;/a> conference in Congo due to visa problems and learned some lessons from it (so sorry Max :)&lt;/p></description></item><item><title>TDC 2011 Goiânia</title><link>https://kinoshita.eti.br/2011/10/31/tdc-2011-goi%C3%A2nia.html</link><pubDate>Mon, 31 Oct 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/10/31/tdc-2011-goi%C3%A2nia.html</guid><description>Here are the slides used in TDC 2011 - Goi&amp;acirc;nia. The same slides were used in the Testing and in the Java tracks, though with different titles. The only difference is the demo, that had more details in the latter track.
tdc_2011_goiania_ci by brunodepaulak (function() { var scribd = document.createElement("script"); scribd.type = "text/javascript"; scribd.async = true; scribd.src = "http://www.scribd.com/javascripts/embed_code/inject.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(scribd, s); })(); This was the last talk of the year, I have two more articles to go (MundoJ and STP) and then it will be time to practice slackline, surfing and dedicate some time to my family.</description></item><item><title>Practical test doubles: adding stubs to TestLink Java API</title><link>https://kinoshita.eti.br/2011/10/23/practical-test-doubles-adding-stubs-to-testlink-java-api.html</link><pubDate>Sun, 23 Oct 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/10/23/practical-test-doubles-adding-stubs-to-testlink-java-api.html</guid><description>&lt;p>&lt;em>"&lt;strong>Test Double&lt;/strong> is a generic term for any case where you replace a production object for testing purposes"&lt;/em> [&lt;a href="#1">1&lt;/a>]. There are different types of Test Doubles: &lt;strong>Dummy&lt;/strong>, &lt;strong>Fake&lt;/strong>, &lt;strong>Stubs&lt;/strong>, &lt;strong>Spies&lt;/strong> and &lt;strong>Mocks&lt;/strong>. In this post we will see a practical example of adding stubs to &lt;a href="testlinkjavaapi.sourceforge.net" title="TestLink Java API">TestLink Java API&lt;/a>.&lt;/p>
&lt;p>Stubs are objects that return canned answers to calls during tests [1]. This is useful specially when you have a system that communicates with different resources such as databases, web services, XML-RPC services and so on.&lt;/p>
&lt;p>TestLink Java API is a small Java project created to act as an interface between &lt;a href="http://www.teamst.org" title="TestLink">TestLink&lt;/a> XML-RPC API and a client program written in Java.&lt;/p></description></item><item><title>Building Jenkins with Eclipse and m2e plug-in</title><link>https://kinoshita.eti.br/2011/09/20/building-jenkins-with-eclipse-and-m2e-plug-in.html</link><pubDate>Tue, 20 Sep 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/09/20/building-jenkins-with-eclipse-and-m2e-plug-in.html</guid><description>&lt;p>Yesterday I finally managed to build &lt;a title="Jenkins" href="http://www.jenkins-ci.org">Jenkins&lt;/a> using &lt;a title="Eclipse" href="http://www.eclipse.org/">Eclipse&lt;/a> and &lt;a title="m2e plug-in" href="http://eclipse.org/m2e/">m2e plug-in&lt;/a>. With &lt;a title="Eclipse Indigo" href="http://www.eclipse.org/indigo">Eclipse Indigo&lt;/a> release came a new version of the &lt;a title="Maven" href="http://maven.apache.org">Maven&lt;/a> plug-in for Eclipse (former &lt;a title="M2Eclipse" href="http://m2eclipse.sonatype.org/">M2Eclipse&lt;/a>), m2e. Since I started using Eclipse Indigo and this new plug-in I hadn't been able to build Jenkins in Eclipse anymore.&lt;/p>
&lt;p>I've been having a terrible fever and thought that it would be a good thing to stop playing &lt;a href="http://www.minecraft.net" title="Minecraft">Minecraft&lt;/a> for a while and find a way to build Jenkins in Eclipse + m2e :-).&lt;/p>
&lt;h2>1. Maven Plug-ins execution in project life cycle&lt;/h2>
&lt;p>The first thing I've noticed were the messages regarding the execution of some Maven plug-ins in the project life cycle. m2e delegates the execution of Maven plug-ins to an external executor. As not all Maven plug-ins have an existing executor for m2e you will receive a message similar to "Plugin execution not covered by lifecycle configuration: ...".&lt;/p></description></item><item><title>Missed JCertif</title><link>https://kinoshita.eti.br/2011/09/07/missed-jcertif.html</link><pubDate>Wed, 07 Sep 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/09/07/missed-jcertif.html</guid><description>Unfortunately I missed JCertif last weekend. My visa was in Brazzaville but I couldn't board in a flight from Johannesburg to Congo without it. Max Bonbhel kindly tried to fax me the visa, but the last flight to Congo closed and I had to come back to Brazil sooner. :-(
Here is the slides that I was going to use there. Hope you take some time to read about TAP, SubUnit and other test protocols.</description></item><item><title>TDC 2011 Floripa presentation about running your tests in Jenkins</title><link>https://kinoshita.eti.br/2011/08/25/tdc-2011-floripa-presentation-about-running-your-tests-in-jenkins.html</link><pubDate>Thu, 25 Aug 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/08/25/tdc-2011-floripa-presentation-about-running-your-tests-in-jenkins.html</guid><description>&lt;p>Last weekend I attended TDC (&lt;a title="The Developers Conference" href="http://www.thedevelopersconference.com.br">The Developers Conference&lt;/a>) 2011 in Florianópolis, in the south of Brazil. It was my first time in Florianópolis, but the weather was cloudy and cold, so I couldn&amp;rsquo;t check out one of the prettiest cities in Brazil :-( Bummer.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2011-08-25-tdc-2011-floripa-presentation-about-running-your-tests-in-jenkins/banner_TDC2011_floripapng'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>Putting the weather aside, TDC was great! Basically, there were many nice, easy-going people gathering together to talk about subjects like Java, SOA, Arduino, Testing, Agile and more. I had the chance to talk with skilled and experienced people, see different talks and catch up Guilherme Motta (&lt;a title="@gfcmotta" href="http://www.twitter.com/gfcmotta">@gfcmotta&lt;/a>) from &lt;a title="ThoughtWorks" href="http://www.thoughtworks.com">ThoughtWorks&lt;/a>, who I have met in Porto Alegre in the beginning of this year. He gave an interesting talk about crowd testing using games as example, but varying with applications in different areas too.&lt;/p></description></item><item><title>The Developers Conference (TDC) 2011 Botando o Jenkins para rodar seus testes</title><link>https://kinoshita.eti.br/2011/08/20/the-developers-conference-tdc-2011-botando-o-jenkins-para-rodar-seus-testes.html</link><pubDate>Sat, 20 Aug 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/08/20/the-developers-conference-tdc-2011-botando-o-jenkins-para-rodar-seus-testes.html</guid><description>Botando o Jenkins para rodar seus testes
Event The Developers Conference 2011 Where ? Florian&amp;oacute;polis When ? 2011-08-20</description></item><item><title>Bug hunting, new job and preparing presentations</title><link>https://kinoshita.eti.br/2011/08/13/bug-hunting-new-job-and-preparing-presentations.html</link><pubDate>Sat, 13 Aug 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/08/13/bug-hunting-new-job-and-preparing-presentations.html</guid><description>It&amp;rsquo;s been a while since the last time I posted something here. The reason is that I have been busy fixing bugs in Jenkins TestLink Plug-in, TestLink, TestLink Java API, tap4j, Jenkins TAP Plug-in and other Open Source projects.
Recently I left Sysmap Solutions, where I was a consultant, to have my labor card signed by Lojas Riachuelo, a famous Brazilian fashion retailer (like C&amp;amp;A, Zara, H&amp;amp;M and so on), part of Guararapes group.</description></item><item><title>Why am I learning Perl?</title><link>https://kinoshita.eti.br/2011/06/15/why-am-i-learning-perl.html</link><pubDate>Wed, 15 Jun 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/06/15/why-am-i-learning-perl.html</guid><description>&lt;p>Last month I attended the &lt;a title="II Sao Paulo Perl Workshop" href="http://www.perlworkshop.com.br">II Sao Paulo Perl Workshop&lt;/a>, where I had the privilege of learning with the great talks performed by &lt;a title="Bryan D Foy" href="http://www252.pair.com/~comdog/">bryan d foy&lt;/a>, &lt;a title="Brad FitzPatrick" href="http://bradfitz.com/">Brad FitzPatrick&lt;/a> and &lt;a title="Larry Wall" href="http://www.wall.org/~larry/">Larry Wall&lt;/a>. For being a Java programmer, you can imagine how lost I was feeling there.&lt;/p>
&lt;p>The first programming language that I had contact with was Perl. I was a 16 years old &lt;a title="Slackware Linux" href="http://www.slackware.com">Slackware&lt;/a> aficionado at that time, and was dying to have a web site with a guestbook . We did not have any cheap hosting services in Brazil that offered a &lt;a title="PHP" href="http://www.php.net">PHP&lt;/a> environment, but there were few companies that offered a free host with ads, and with Perl. I don&amp;rsquo;t remember which script I used, only that I found it in &lt;a title="HotScripts.com" href="http://www.hotscripts.com">HotScripts.com&lt;/a> and that it stored the guestbook entries in disk. Now, ten years after, here I am playing with Perl again! :-D&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2011-06-15-why-am-i-learning-perl/larry_wall.jpg'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p>Well, what was my idea of Perl before the event? I thought it was an old programming language, very powerful, but over complicated. And what do I think of Perl now? I think it is an old programming language, very powerful, but may be complicated.&lt;/p></description></item><item><title>A comparison of TAP (Test Anything Protocol) and SubUnit</title><link>https://kinoshita.eti.br/2011/06/04/a-comparison-of-tap-test-anything-protocol-and-subunit.html</link><pubDate>Sat, 04 Jun 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/06/04/a-comparison-of-tap-test-anything-protocol-and-subunit.html</guid><description>&lt;p>
I have been playing with &lt;a href="http://www.testanything.org">TAP&lt;/a> for some time and even implemented a &lt;a
href="http://www.tap4j.org">Java API&lt;/a> to let &lt;a href="http://www.testng.org">TestNG&lt;/a>, &lt;a
href="http://www.junit.org">JUnit&lt;/a> and other Test Frameworks to produce and consume TAP. TAP is a standard
format for test output that first appeared with Perl 1 in 1987. It is human and machine readable, easy to be
serialized, language independent and extensible&lt;sup>&lt;a href="#1">1&lt;/a>&lt;/sup> through the use of &lt;a
href="http://www.yaml.org">YAML&lt;/a>.
&lt;/p>
&lt;p>
Some days ago while I was designing a plug-in to show TAP test results in &lt;a href="http://www.jenkins-ci.org">Jenkins&lt;/a>
I stumbled across a message in &lt;a href="http://jenkins.361315.n4.nabble.com/Jenkins-dev-f387835.html">Jenkins
dev-list&lt;/a> where Max Magee and Nick Wiesmueller were discussing about a way of showing more details about the test
executions. I thought that the TAP Plug-in would fit perfectly, until one of the users, &lt;a
href="https://launchpad.net/~lifeless">Robert Collins&lt;/a>, mentioned &lt;a href="https://launchpad.net/subunit">SubUnit&lt;/a>.
&lt;/p>
&lt;p>
Shame on me, but I hadn't heard of SubUnit until that message. Max Magee and I exchanged some messages after that,
talking about a initial design and analysis for the TAP Plug-in&lt;sup>&lt;a href="#2">2&lt;/a>&lt;/sup>. Here is the initial
idea:
&lt;p>
&lt;ul>
&lt;li>The plug-in will be able to parse one or more test formats (maybe SubUnit, TAP and the formats available in
xUnit?).&lt;/li>
&lt;li>The test results will be displayed the same way JUnit tests are displayed in Jenkins (I think Jenkins
supports JUnit format by default, but you can use objects and create test results data, independently of the
test framework that you are using).&lt;/li>
&lt;li>There will be a table containing the Test Name, Description and Status and an expandable section.&lt;/li>
&lt;li>Inside this expandable section will be available all the details about the test.&lt;/li>
&lt;li>In case there are images within the test details, they should be displayed as a lightbox gallery.&lt;sup>&lt;a
href="#3">3&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;p>
Although I have worked with TAP and spent some good time writing the tap4j port for Java, I am not convinced it is
the best solution for this issue yet. Hence I am posting this initial comparison between TAP and SubUnit hoping that
more people will contribute with the design of this solution. My goal is not only having a super cool plug-in for
Jenkins, but ease integration of test results in different tools and collaborate with both TAP and SubUnit. Another
objective that I have in mind is improving the way that test results are displayed in Jenkins and enabling it to be
an alternative for tools like &lt;a href="http://sourceforge.net/projects/smolder/">Smolder&lt;/a>, &lt;a
href="https://launchpad.net/testrepository">TestRepository&lt;/a> or &lt;a href="https://launchpad.net/tribunal">Tribunal&lt;/a>.
Because I believe the tasks done by these tools could be all done in my favorite CI Server, and it would increase
the productivity of Build &amp;amp; Release professionals :-))
&lt;/p></description></item><item><title>Faça seus Testes Falarem TAP (Make your Tests Speak TAP) article published in MundoJ, issue 47, March/April 2011</title><link>https://kinoshita.eti.br/2011/05/23/fa%C3%A7a-seus-testes-falarem-tap-make-your-tests-speak-tap-article-published-in-mundoj-issue-47-march/april-2011.html</link><pubDate>Mon, 23 May 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/05/23/fa%C3%A7a-seus-testes-falarem-tap-make-your-tests-speak-tap-article-published-in-mundoj-issue-47-march/april-2011.html</guid><description>This is my first article for a Brazilian magazine! :-D It was published in this month&amp;rsquo;s issue of MundoJ magazine (previously called MundoJava).
In this article Cesar Fernandes de Almeida, Anderson dos Santos and I discuss how to make your Java tests output TAP (Test Anything Protocol) Streams. This test protocol has been used by Perl developers since Perl&amp;rsquo;s first version (1983~) but hasn&amp;rsquo;t been used by many Java developers yet, unfortunately.</description></item><item><title>Belgium Testing Days 2011 Pictures</title><link>https://kinoshita.eti.br/2011/03/25/belgium-testing-days-2011-pictures.html</link><pubDate>Fri, 25 Mar 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/03/25/belgium-testing-days-2011-pictures.html</guid><description>Here are some pictures of the event. The presentation is available in http://www.belgiumtestingdays.com.
(Sorry, after migrating the server I lost some pictures. Will upload it again soon!)
Cheers!</description></item><item><title>TestLink and Hudson (now Jenkins) short tutorial in Automated Software Testing Magazine, issue March 2011</title><link>https://kinoshita.eti.br/2011/03/22/testlink-and-hudson-now-jenkins-short-tutorial-in-automated-software-testing-magazine-issue-march-2011.html</link><pubDate>Tue, 22 Mar 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/03/22/testlink-and-hudson-now-jenkins-short-tutorial-in-automated-software-testing-magazine-issue-march-2011.html</guid><description>Hi there, a new article about TestLink and Hudson (now Jenkins) was published, now in Automated Software Testing Magazine, issue March 2011. In this article you will find a short tutorial to set up a TestNG test and a simple Job to execute your automated tests. Now we are writing a docbook document to explain with more details how the plug-in works and how you can play with it.</description></item><item><title>Discussing the flexibility of TAP to cover information generated by TestNG</title><link>https://kinoshita.eti.br/2011/03/20/discussing-the-flexibility-of-tap-to-cover-information-generated-by-testng.html</link><pubDate>Sun, 20 Mar 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/03/20/discussing-the-flexibility-of-tap-to-cover-information-generated-by-testng.html</guid><description>&lt;p>In today's post I am expanding the previous one regarding the use of &lt;a title="TAP (Test Anything Protocol)" href="http://www.testanything.org">TAP&lt;/a> with &lt;a title="TestNG" href="http://www.testng.org">TestNG&lt;/a>. Let's discuss about the flexibility of TAP to cover information generated by TestNG, more specifically:&lt;/p>
&lt;ul>
&lt;li>Expected Exceptions&lt;/li>
&lt;li>Data Providers&lt;/li>
&lt;li>Groups&lt;/li>
&lt;li>Tests that get skipped&lt;/li>
&lt;li>Dependencies&lt;/li>
&lt;/ul>
&lt;p>We will be addressing these bullet points using &lt;a title="tap4j" href="http://tap4j.sourceforge.net">tap4j&lt;/a>, a TAP implementation for Java. The integration between TAP and TestNG is done through the use of TestNG Listeners developed in tap4j project (a big thanks here to &lt;a title="Cesar Fernandes de Almeida" href="http://www.cesinha.com">Cesar Fernandes de Almeida&lt;/a> for all his help).&lt;/p>
&lt;p>There are two listeners in tap4j, &lt;a title="br.eti.kinoshita.tap4j.ext.testng.TestTAPReporter" href="https://github.com/kinow/tap4j/blob/master/src/main/java/org/tap4j/ext/testng/TestTAPReporter.java">br.eti.kinoshita.tap4j.ext.testng.TestTAPReporter&lt;/a> and &lt;a title="br.eti.kinoshita.tap4j.ext.testng.SuiteTAPReporter" href="https://github.com/kinow/tap4j/blob/master/src/main/java/br/eti/kinoshita/tap4j/ext/testng/SuiteTAPReporter.java">br.eti.kinoshita.tap4j.ext.testng.SuiteTAPReporter&lt;/a>. The first was created based on &lt;a title="org.testng.reporters.TestHTMLReporter" href="https://github.com/cbeust/testng/blob/master/src/main/java/org/testng/reporters/TestHTMLReporter.java">org.testng.reporters.TestHTMLReporter&lt;/a> and the latter was created based on &lt;a title="org.testng.reporters.SuiteHTMLReporter" href="https://github.com/cbeust/testng/blob/master/src/main/java/org/testng/reporters/SuiteHTMLReporter.java">org.testng.reporters.SuiteHTMLReporter&lt;/a>.&lt;/p>
&lt;figure class="feature">
&lt;img
src='https://kinoshita.eti.br/assets/posts/2011-03-20-discussing-the-flexibility-of-tap-to-cover-information-generated-by-testng/unnamed0.jpg'
alt=''
title=''
style=''
width=''
height=''
/>
&lt;figcaption>&lt;/figcaption>
&lt;/figure>
&lt;p style="text-align: center;">&lt;em>&lt;span style="color: #999999; font-size: 0.8em;">In this figure you have testing tools as TAP producers (left) and different types of applications as consumers (right)&lt;/span>&lt;/em>&lt;/p></description></item><item><title>Getting the maximum from TestNG with TAP</title><link>https://kinoshita.eti.br/2011/03/10/getting-the-maximum-from-testng-with-tap.html</link><pubDate>Thu, 10 Mar 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/03/10/getting-the-maximum-from-testng-with-tap.html</guid><description>&lt;p>Strangely enough, today I decided start to write about &lt;a href="http://www.testanything.org">TAP&lt;/a> (Test Anything Protocol) and received a mail from a &lt;a href="http://www.linkedin.com">Linkedin&lt;/a> Group with a white paper about data integration in information systems. Well, let me first explain what is TAP, or Test Anything Protocol. This protocol was created in the beginning of Perl to log test results and is still being used by Perl and other languages (&lt;a href="https://github.com/sebastianbergmann/phpunit/">PHPUnit&lt;/a> can output TAP too, for instance).&lt;/p>
&lt;p>Now, if you already know about TAP and YAML, or if you are like me and like trying things out before reading a long text, then go to the &lt;a href="#hammertime">hands on part&lt;/a> of this post.&lt;/p>
&lt;p>An output in TAP, or a TAP stream, is written in pure text in a human readable way. Like follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">TAP version &lt;span style="color:#00f">13&lt;/span>
1..2
ok &lt;span style="color:#00f">1&lt;/span> Test &lt;span style="color:#00f">1&lt;/span>
not ok &lt;span style="color:#00f">2&lt;/span> Missing test parameter: url
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Belgium Testing Days 2011: Manage automated tests with TestLink and Hudson/Jenkins</title><link>https://kinoshita.eti.br/2011/02/25/belgium-testing-days-2011-manage-automated-tests-with-testlink-and-hudson/jenkins.html</link><pubDate>Fri, 25 Feb 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/02/25/belgium-testing-days-2011-manage-automated-tests-with-testlink-and-hudson/jenkins.html</guid><description>Slides used at Belgium Testing Days 2011: Manage automated tests with TestLink and Hudson/Jenkins
Belgium Testing Days 2011: Manage automated tests with TestLink and Hudson&amp;#x2F;Jenkins by brunodepaulak
Cheers</description></item><item><title>Belgium Testing Days (BTD) 2011 How To Automate Tests Using Testlink And Hudson</title><link>https://kinoshita.eti.br/2011/02/14/belgium-testing-days-btd-2011-how-to-automate-tests-using-testlink-and-hudson.html</link><pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/02/14/belgium-testing-days-btd-2011-how-to-automate-tests-using-testlink-and-hudson.html</guid><description>How To Automate Tests Using Testlink And Hudson
Event Belgium Testing Days 2011 Where ? Brussels, Belgium When ? 2011-02-14</description></item><item><title>Code coverage helps, but it's not enough</title><link>https://kinoshita.eti.br/2011/01/25/code-coverage-helps-but-its-not-enough.html</link><pubDate>Tue, 25 Jan 2011 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2011/01/25/code-coverage-helps-but-its-not-enough.html</guid><description>Today I talked to two QA Engineers about code coverage and we all agreed that code coverage helps, but is not enough. And by coincidence today I had to fix a bug in tap4j that reminded me the same thing. My cobertura (the coverage tool that I was using at moment) report said that my code was covered by my tests. However there was a bug in the covered code.</description></item><item><title>Article about TestLink and Hudson integration published</title><link>https://kinoshita.eti.br/2010/12/10/article-about-testlink-and-hudson-integration-published.html</link><pubDate>Fri, 10 Dec 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/12/10/article-about-testlink-and-hudson-integration-published.html</guid><description>Since September I&amp;rsquo;ve been working on a project to integrate TestLink and Hudson. The project consists basically in a Hudson Plug-in that uses TestLink Java API to retrieve information of Automated Test Cases created in TestLink. You can read more about the plug-in in the following address: http://wiki.hudson-ci.org/display/HUDSON/TestLink+Plugin.
I wrote an article in conjunction with Anderson dos Santos about this Plug-in. The article was published by Testing Experience in its December issue.</description></item><item><title>Automating tests with Hudson and TestLink (pt-BR only)</title><link>https://kinoshita.eti.br/2010/11/28/automating-tests-with-hudson-and-testlink-pt-br-only.html</link><pubDate>Sun, 28 Nov 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/11/28/automating-tests-with-hudson-and-testlink-pt-br-only.html</guid><description>Slides used at Encontro Ágil 2010. As soon as I finish the plug-in 2.0 version I&amp;rsquo;ll upload a video with a sample demo too.
Automatizando Testes Com Hudson e TestLink by brunodepaulak
Cheers</description></item><item><title>Encontro Ágil 2010 - Lighting talk about Test Automation with TestLink and Hudson</title><link>https://kinoshita.eti.br/2010/11/02/encontro-%C3%A1gil-2010-lighting-talk-about-test-automation-with-testlink-and-hudson.html</link><pubDate>Tue, 02 Nov 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/11/02/encontro-%C3%A1gil-2010-lighting-talk-about-test-automation-with-testlink-and-hudson.html</guid><description>On November 6th (next Saturday) Anderson Santos and I will present a Test Automation solution built on TestLink and Hudson at Encontro Ágil 2010. This meeting is for intended for the Agile community and will be hold at IME-USP (Instituto de Matemática e Estatística - Universidade de Sáo Paulo).
= In our demonstration we will be using TestLink 1.9 HEAD version, Hudson 1.366 and TestLink Hudson Plug-in 2.0-SNAPSHOT. This TestLink Hudson Plug-in version is still not released as we are finishing to code the integration between the plug-in and TAP through tap4j, an implementation of TAP - Test Anything Protocol.</description></item><item><title>Extract images from a Word document</title><link>https://kinoshita.eti.br/2010/10/15/extract-images-from-a-word-document.html</link><pubDate>Fri, 15 Oct 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/10/15/extract-images-from-a-word-document.html</guid><description>Some time ago I was asked by my boss to get all the images out of a Word document and save them in a separated directory. In this site the author gives you several different ways of extracting images from a Word document. However what I wanted was a quick and dirt way of having these images extracted without macros or having to open and save the document in HTML format.</description></item><item><title>tap4j - A new TAP implementation in Java</title><link>https://kinoshita.eti.br/2010/10/12/tap4j-a-new-tap-implementation-in-java.html</link><pubDate>Tue, 12 Oct 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/10/12/tap4j-a-new-tap-implementation-in-java.html</guid><description>A month ago I started a project to help me in my new version of the TestLink Hudson plug-in. The plugin now relies heavily on Apache Maven for test execution. After reading a post on TestLink forum about an automation done using TAP, I googled to learn what that acronym stood for.
TAP is the abbreviation of Test Anything Protocol.It is a protocol to produce information about test execution and used mainly by the Perl community.</description></item><item><title>Jacobe Maven Plugin</title><link>https://kinoshita.eti.br/2010/09/29/jacobe-maven-plugin.html</link><pubDate>Wed, 29 Sep 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/09/29/jacobe-maven-plugin.html</guid><description>When I started working in the TestLink java api with Daniel Padilla, he mentioned in some of his mails a tool called Jacobe. After I googled for this tool I found it in TIOBE&amp;rsquo;s website. Jacobe is a tool of TIOBE that beautifies your Java code, according to some rules that you can specify in one configuration file.
This is what Jacobe does, basically.
Jacobe itself is an executable but TIOBE provides an Ant task that lets you call Jacobe from an Ant build file.</description></item><item><title>New version of CCM Hudson Plugin released</title><link>https://kinoshita.eti.br/2010/09/28/new-version-of-ccm-hudson-plugin-released.html</link><pubDate>Tue, 28 Sep 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/09/28/new-version-of-ccm-hudson-plugin-released.html</guid><description>Yesterday I released a new version of CCM Hudson Plugin. In this version, 1.0.1, there are two bugs fixed (7522 and 7531). For a more detailed background on these two issues check out Hudson JIRA.
= Both bugs were reported by Sven Borman. The first BUG referred to a problem executing CCM Hudson Plugin in distributed environments. Although I&amp;rsquo;ve read the documentation for making plugins behave in distributed environments I forgot to use the Callable interfaces to execute some parts of the code in the Slave and then serialize the result back to the master node.</description></item><item><title>TestLink BUG-1890: Possibility to add attachment by using API</title><link>https://kinoshita.eti.br/2010/09/19/testlink-bug-1890-possibility-to-add-attachment-by-using-api.html</link><pubDate>Sun, 19 Sep 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/09/19/testlink-bug-1890-possibility-to-add-attachment-by-using-api.html</guid><description>With the help of Francisco Mancardi I wrote a code that was merged into the TestLink repository trunk. Now you&amp;rsquo;re going to be able to upload attachments such as, for instance, test evidences to your TestLink :-). I hope you like it.
I decided to contribute with this code because I needed something similar for the TestLink Hudson plug-in. Hopefully the plug-in new version will be released before October.</description></item><item><title>Article about metrics and code analysis published</title><link>https://kinoshita.eti.br/2010/09/03/article-about-metrics-and-code-analysis-published.html</link><pubDate>Fri, 03 Sep 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/09/03/article-about-metrics-and-code-analysis-published.html</guid><description>I wrote an article about a quality analysis job done for a client of Sysmap Solutions and it was published by TestingExperience Magazine on its issue of September, number 11.
You can check the full article in TestingExperience site. It is available in PDF format for members, the registration if free though.
Happy reading.</description></item><item><title>CafePress Hudson Store</title><link>https://kinoshita.eti.br/2010/05/28/cafepress-hudson-store.html</link><pubDate>Fri, 28 May 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/05/28/cafepress-hudson-store.html</guid><description>If you use Hudson as build trigger, continuous integration system or crontab replacement, you can contribute to Hudson buying from CafePress Hudson Store. I bought a polo shirt few months ago. It was my first acquisition from CafePress and I was worried about quality and the difference in sizes from US and Brazil.
= However the quality was very good and it fitted perfectly. I wear P in Brazil and bought a S white polo shirt.</description></item><item><title>CCM Hudson Plugin</title><link>https://kinoshita.eti.br/2010/04/07/ccm-hudson-plugin.html</link><pubDate>Wed, 07 Apr 2010 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2010/04/07/ccm-hudson-plugin.html</guid><description>CCM is a tool developed by Jonas Blunck (http://www.blunck.se). It&amp;rsquo;s able to calculate the cyclomatic complexity (McCabe) of a .NET Project or Solution.
I developed TestLink Hudson Plug-in, a Hudson Plug-in that lets you invoke CCM from hudson and have the results displayed in the console output. I chose CCM as CC tool for .NET instead of SourceMonitor after it gave me a CC value of 4 for a method I was sure was supposed to have 5.</description></item><item><title>Code to change your message in MSN messenger</title><link>https://kinoshita.eti.br/2009/03/22/code-to-change-your-message-in-msn-messenger.html</link><pubDate>Sun, 22 Mar 2009 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2009/03/22/code-to-change-your-message-in-msn-messenger.html</guid><description>I&amp;rsquo;ve always wanted to know how does the code to show what was I listening to looked like. I found it after installing XMPlay and XMPlay MSN Plug-in. The plug-in zip had the plug-in itself and its source code. And what a neat source code (-:.
Basically, you just send a message to the MSN UI API with a defined data structure. And to remove the message, just send again with an empty string.</description></item><item><title>Displaying Japanese characters in Java Swing</title><link>https://kinoshita.eti.br/2009/03/06/displaying-japanese-characters-in-java-swing.html</link><pubDate>Fri, 06 Mar 2009 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2009/03/06/displaying-japanese-characters-in-java-swing.html</guid><description>It&amp;rsquo;s not as complicated as I first thought.
Had to use this technique to develop an Swing application for the JLPT certification exam.
public static void main(String[] args) { JFrame frame = new JFrame(); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); Container container = frame.getContentPane(); JLabel japanese = new JLabel( &amp;#34;Kino\u304D\u306E&amp;#34; ); japanese.setToolTipText( &amp;#34;This is Japanese&amp;#34; ); Font f = new Font(&amp;#34;Arial Unicode MS&amp;#34;, Font.BOLD, 16); japanese.setFont(f); container.add( japanese ); frame.pack(); frame.setLocationRelativeTo(null); frame.setVisible(true); } All you have to do is to use the hexadecimal representation of the characters instead of using plain text.</description></item><item><title>Tea with milk?</title><link>https://kinoshita.eti.br/2008/06/17/tea-with-milk.html</link><pubDate>Tue, 17 Jun 2008 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2008/06/17/tea-with-milk.html</guid><description>A segunda bebida mais consumida no mundo não é o café ainda. É o chá. Talvez com a eterna busca pela melhoria de processos nas organizações, um dia o café assuma esta colocação.
Aprendi a apreciar esta ótima bebida com um kiwi chamado Daniel. Nunca havia experimentado tal mistura. Melhorando o Inglês, ainda não estava totalmente confiante e respondia algumas perguntas de maneira diferente como teria respondido realmente em português.</description></item><item><title>Conjuntos Fuzzy e Aplicações</title><link>https://kinoshita.eti.br/2006/12/01/conjuntos-fuzzy-e-aplica%C3%A7%C3%B5es.html</link><pubDate>Fri, 01 Dec 2006 00:00:00 +0000</pubDate><guid>https://kinoshita.eti.br/2006/12/01/conjuntos-fuzzy-e-aplica%C3%A7%C3%B5es.html</guid><description>Part of graduation project, title &amp;ldquo;Conjuntos Fuzzy e Aplicações&amp;rdquo;, authors &amp;ldquo;Bruno de Paula Kinoshita&amp;rdquo; and &amp;ldquo;Daniel Hayashi Nakaya&amp;rdquo;.
Cited as Kinoshita, B. P.; Nakaya, D. H.. Conjuntos Fuzzy e Aplicações. Faculdade de Computação e Informática - São Paulo: Universidade Presbiteriana Mackenzie.
[Download](/assets/posts/{{ page.date | date: &amp;ldquo;%Y-%m-%d&amp;rdquo; }}-{{ page.title | slugify }}/kinoshita_bruno_nakaya_daniel_conjuntos_fuzzy_e_aplicacoes.pdf)
Google Scholar link: https://scholar.google.com/scholar?cluster=6169842656053696090&amp;amp;hl=en&amp;amp;oi=scholarr</description></item></channel></rss>